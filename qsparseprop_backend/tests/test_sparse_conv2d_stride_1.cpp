#include "gtest/gtest.h"
#include "gmock/gmock.h"
#include "src/sparse/qsparse_conv2d_stride_1.h"

TEST(Test_Sparse, QuantizeSparseConv2dForward1Stride1) {
    int B = 2;
    int IC = 2;
    int OC = 3;
    int M = 4;
    int N = 3;
    int K = 3;
    int8_t X[48] = {
        30, -29, 126, 51, 12, 6, 66, -128, 127, -75,
        70, -105, 5, -55, 79, -28, 15, 81, -44, -45,
        66, 5, 100, -11, 114, 3, -101, -81, 67, -110,
        -33, -2, -126, -103, -94, -27, 90, -95, 9, 108,
        -33, -68, 37, 70, -70, -46, -93, 80
    };
    float X_scale = 0.0069f;
    int W_idx_OC[4] = {0, 3, 5, 8};
    int16_t W_idx_IC[9] = {0, 2, 3, 0, 1, 2, 0, 2, 3};
    uint8_t W_idx_X[8] = {0, 1, 2, 0, 1, 0, 2, 1};
    uint8_t W_idx_Y[8] = {0, 2, 1, 2, 0, 1, 1, 0};
    int8_t W_val[8] = {-36, 58, 16, 40, -4, -37, 45, 9};
    float W_scale = 0.0164;
    float O[12] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
    float expected_O[12] = {
        0.3548f, -0.3768f, -0.2982f, 0.9733f, 0.0695f, 0.0282f, 0.2771f, -0.4338f,
        -0.1594f, -0.3594f, -0.1044f,  0.2436f
    };

    sparse::quantized_sparse_conv2d_vectorized_forward_stride_1(
        B, IC, OC, M, N, K, 8, 0,
        X, X_scale, W_idx_OC, W_idx_IC, W_idx_X,
        W_idx_Y, W_val, W_scale, O
    );

    for (int i = 0; i < 12; i++) {
        ASSERT_THAT(O[i], testing::FloatNear(expected_O[i], 0.01f));
    }
}

TEST(Test_Sparse, QuantizeSparseConv2dForward2Stride1) {
    int B = 64;
    int IC = 2;
    int OC = 3;
    int M = 4;
    int N = 3;
    int K = 3;
    int8_t X[1536] = {
        120,    1,   24,  116,   73,  127,  -25,   -6,  -90,  -39,   88,  -60,
        -121, -128, -107,   20, -118,  -43,   63, -116,   96,  -36,  118,   32,
        61,   25,    3,  -74,   13,  -14,  127,  -12,  -93,  -41,    7,   59,
        -40,   93, -115, -110, -124,  -25,  -46,   -4,   -8,  -80,  -10,  -95,
        31,   85,  127,  127,   18,   56,  -87,  -94,   15,   17,  114,  105,
        109, -128,    0,  100,  -79,   23, -124,  -71,   49, -128,  -11,  107,
        11, -100,  117,   89,   15,  127,   77,  -30,  -74,   45,   72,   43,
        54,   36,  -86,  122,  -43,  -10,  -44,   57,   98,  112,  127,  -79,
        -12,  127, -101,  125,    5,  -59,   91, -111,  127,  102,  -65,  127,
        -117,  -32,   72,   83,  -37,  -35,  -87,  127,  -70,   97,   94,  -27,
        -35,  127,   93,  -37,  -28,  -44,  115, -128, -121,  -86,  -45,  -46,
        -74,  101,  127,  116,   31,  127,  -22,   47,  111, -103,  127,  -40,
        -47,  108,   52,  -15,  101,  -61,   62,  -42, -107,   20,   20,   85,
        -128, -110,  127, -124,  -33,  -34,  -83, -118, -126,  -30,   12,  -47,
        23,   34, -105,  123,  127,  127, -107, -123,  -16, -112,   50,   77,
        -41,    8,  127, -124, -128,  -10,  -62,  -32,   98,   -3,  127,  -26,
        116, -128,   35,  -22,  -43,  127,   28,  104,  -13,   46,  109,  -98,
        -127,   -6,  -56,  127,  101,   54,   16,  -10,   26,  -57,    0,   26,
        -51, -114,  -80,  -81,  127, -113,   -4,  -49, -128,  -63,    3,   12,
        127,  -85,   74,   72,   95,  -49,  103,   53,   22,  127,    2,  -35,
        -68,  -29,  -91,  -10,  112,  112,   37,  -47,  -72,   53,   45,  -70,
        73,   12,  127,  -65,   32,  -42,  126,  -32,   98, -110,   44,  117,
        -77, -107, -128,   -1, -122,    8,   75,  -26, -123,   10,  -59,   24,
        -93,   10,   35,   87,   28,   37,   32,   31,  -82, -128,  108,  109,
        -124,  -96,   28,  -95,   71, -104,  127,  -67,  125,  127,  -20,   66,
        77,  -73,   54,   90,   60,   94,  -39,   -9,  -62,   79,   53,   88,
        -128, -128,   15,  -22,  -71,  -37,   37,  -31,   15, -116,    7, -128,
        -96,    4,   -9,  -87,   36,   73, -105, -105, -111,  -80,   27,  -82,
        -11,   37,  -38,  100,  107,   21,  -82,  -30,  -16,  -17,  -50, -115,
        127, -128,   91, -128, -102,  -33,  120,   -2,   53,   -5,   50, -125,
        72,  -68,  127, -128,  127,  -20,  -86, -128, -118,   54,    9,   75,
        24, -125,  -40, -121,   14,   68,   80, -128,  -94,  -87, -115,  -79,
        95,  -23,  -13,  -89,    6,  124,   57,   -9,  -20,  101,   51,  -18,
        -19,   18,  -14,  124,   32,  -38,   29,  110,  -27, -103,  -19, -128,
        -69,   35,  -52,  112, -101,   27,  117,  127,   64,  127,  -68,   49,
        118,  124,   49,  -59,  -71,  -49,   78,  127,  -20,  101,   -2, -118,
        84, -101,   75,    2,   26, -107,  -53,   -9, -128,   10,   71,  -32,
        74,  -83,  127, -128,  104,   86,   81,  -63,  103, -128,  127,   62,
        -65, -104,  -54,   83,  -86, -110, -128,   54, -128,  -97,  -33,  -70,
        -91,  -86, -115,  -75,   13,  -88, -109, -119,  -66,   83, -107,  -49,
        -9,  -50,  -97,  -47,  101, -128,  115,  -96,  -93,  -59,   46,   65,
        -91,   -1,   87, -128,  104, -128,   52, -128,  -38,   73,   94,   26,
        90,   22,  -25,   82,  127,   46,  -11, -128,  -80,   27,  127,  127,
        -90,  -12,  127,   17,   92,    5,  -75,  -74,  -89, -128,   45,   92,
        -44,   45,  127, -124,   52,  -42, -122,  108,    9,   60,  -87,   51,
        52,    7,  -69,   52, -126,   59,   20,  127,   27,  -17,   24,   38,
        36,  111,  127,  -28,  127,  112,  -50, -128,   35,  121, -128,  -55,
        119, -102, -107,   36,  -14,  -58,  -19,  -79,  108, -125,  -12,  -87,
        127,  127, -119,  -97, -104,  105,  -53,   63,  -33,  118,  107,   79,
        65,   -5,  127, -128,  110,  -73,  116,  127,  -56, -128,  -52,  -23,
        -13,  -78,   29,  -10,   83,   14, -127, -119,   55,  -15,  -18,  124,
        12,   61,  -60,   76,  127,  114,  -99,   19,  -78,    1,  -77,  -52,
        127,   23, -128,  -41,   53,  -48,  127,   97,  -19,  -11,   28,   88,
        39,   25,   25,  -26,  -41,  -97, -113,  102,   12, -123,  -30,   76,
        57,  127,  -78,  -52,   90,   96,  -95, -125,  -53,   56,  127, -128,
        -112, -128,  -37,  114,  -68,   40,  -76,   14,   -8,  -53, -127,   89,
        -120,   13,  -60,  -33,  -24,   26,  106,   76,   26,  127,   97,  -93,
        90,   51,  -51,  127,  108,  -34,  -64,  -19,   72,   63, -108,  127,
        -90, -123,  -86,  120,  -16,  -79,  127,  -94,   98,  -61,  -67,  -45,
        -115,   59,  -87,  -21,    1,  125,  -94, -116, -118,  -10,  -68,   74,
        -74,   27,   42,  106,   90,  -98,   49,  -68,    9,   17, -128,  -36,
        108,  -91, -121,   65,   53,  127,  -25,   44,   42,   79,  -91,   29,
        127,  -44,   42,  -28,   44,   83, -113,  -76,  -68,   27, -128,  -17,
        -56,  -21,  -49,  -57, -126,   62,  -73,   47,  -23,  118,  -59, -102,
        11,   20,  -30,  -54,  -41,  -84,   13,  -15,   56,  122,    9,   -6,
        108, -128,   62,   -3, -124,  -46, -114,  -24, -128,   59,   41,   56,
        -8,   30,  -58,  -55,   73,   -2,   20,  -24,   82,   78,  -59,   99,
        59,   19,  127,   75,   89, -128,   99,  107,  110,  -21,  123,  -73,
        18,  127,    0,   97,  103,   -6,  -60,  120,  -30,  -30,   15,  -92,
        -3,  127,  127, -112, -104,  -87, -125, -124,  -62, -118,  -82,   78,
        -93,   61,  109,  -41,   86,  127,   87,   23,  110, -128,  -77,  -83,
        -8, -109,  -14, -114,  -46,  118,  113,   66,  127,   36,  -53,  -73,
        -73,   27,   94,  -79,   31,  -25,  -92, -128, -128,   79,   51, -102,
        -55,  -14,  -45, -108,  -32,   27,  -47,   58,  -56,   42,   20,   84,
        64,    6,  -39,  -47,   71,  -92,   97,   43,   95,  -95,  -56,  -66,
        2,   99,  -52, -124,  -33,  -82,  -72, -107,   86,  106, -101,   78,
        60,  -51,  106,  127,  127,   84,   60,  -20,    9,   14,   43,  127,
        -12,   -1, -128,  -12, -128,   54,  -84, -107,   18,  -33,   55,    5,
        28,  127,   65,  -11, -105,   35,   22,  -72,   52,   82,  -30,  124,
        122,  -59, -128,   19,   97, -128, -109,   18, -105,  125,  -81,   29,
        -128,    8,  -78,   10, -107,   66,  127,   67,   29,   50, -128,  -85,
        96, -123,  122,  118,  123, -100,  -43,  122,  108,   23,  -88,   84,
        -128,  -33,  -24,  -91,  127,  -17,   29,  -56,  126,  103, -114,   71,
        25,  -16,  127,  -31,   60, -118,   25,   28,   91, -108,   73,  -19,
        -33,   63,  -15,  -62,   30, -128, -108, -119,  -96,  -39,   23,  -99,
        127,   57,  -95,  -34, -128,  -73, -128,  127,   13,   -1,  -50,   74,
        -2, -127,   69,   25,  -44,   72,  113,   80,   49,   -4,  -15,  -95,
        -41,  124,  103,  -69,  -12, -103,    1,  115,  103,  -70,   59, -128,
        -34,  -17,   49,  -37,  -92,  -54,  -81, -106,   96, -128,  -23,  108,
        127, -122,    2,   83,  -33,  -89,  -47,  127, -128, -117,  -84,   -2,
        -128,   84,  -52,   87,  -58,   64,  -80,  -60,   28,   -6,  -58,   78,
        61,   11, -128,   86,   81, -120,  -84,  104,   85,  -16,  -39,  107,
        126,  -79,  -80,  -35,   99,  -80,  121,  127,  106, -119,   95,   61,
        -18,  -10,  100, -116,   99,  -10,    2,  -56,   78,   56,   43, -104,
        81,  -31,  -85,  102,  -82,  123,  115,   12,   -7,  -23, -104,  121,
        9,   -1,    1,  126,  127,  125,  127,   44, -105,  -81,   52,  -86,
        -52,   16,  117, -125,   17, -112,  -48,    4, -109,   16,  -59,   25,
        -82,  106, -128,   43,   48,   83, -126,  -66,  -94,  -83,    5,  100,
        55,  -89,  -95,  -13,  -10,  -31,   62, -100,   88, -123,  127,   71,
        -105,  127,   69,  127, -128,  -31, -105,   53,   83,  124,  -91,   61,
        -100,  -34, -128,    4,   98,  -79,  127,  127, -128,  -81,  127, -114,
        -59,  -79,   73,   49,   31,  -55,  101, -116,  125, -128,    1,  -94,
        -43,  -99,   -6,   19,  -97,  -27, -109, -108, -120,  -35,   50,   56,
        -18,  106,   28,  109,   55, -128,  -13,   66,   43,   89,  127,  127,
        96,  -67,   18,  -74,  -13,  104,  -81,  -13,   -4, -110,   35,  109,
        -96,  113,    8,  -44,    5,   39,  -73,   49,   83,   46,  102,   57,
        109,  114,  -56, -120,  -38,  -88,  -93,   37,  -71,   26,   22,   85,
        127,  127,   67,  127,   -8,  122,   46,    0,  -80,   87, -111,  127,
        -44,   17,    3,  112,  108,  112,  -26,  -60,  -81,  118,  -75, -128,
        -45,  -52,  -87,  -26,  -15,  -50, -128,   93,  126,  127,   31,  -57,
        -17,   21,   87,  102,  112, -127, -118,  125,  -40,  127,   57,    4,
        -83, -111, -112,  -88,   62,  -78, -128,   54,  -75,   84,  -21,   72,
        127,  -35,  -73, -117,  127,   69,   50,  -80,   81, -114, -128,   92,
        -107, -108,  105,   -4,  -54,   57,  -49,  127,  -82,  127,  -80,   43,
        63,   24,   23,  -23,   57,  -77,   42,  127, -128,   30,   13,  -41,
        -65,  -67,   18, -128, -128,   92,   64,  -77,   58,  101, -108,   36,
        55, -121,   54,   91,  -13,   24,   66,   50, -128,  -86, -128,   40,
        127,  127, -128,  -32,  -25, -113,  125,   14,  -15, -101,  -20,  -38,
        -31,   65,  -68, -119,  -76,   -4,  -73,   52,   87,   19,   30,   48,
        118,  109,   51,  -43,  -81,  -71,   20,  108,   10, -102, -128,   -4,
        -80,   38, -128,  -84,   43,  127,   21,  -16,  127,  -16,   33,  108,
        -114,   69,   52,  127,  -60, -124, -128,  -73,  127,  127,  116,  -68,
        -78,  -68,   41,   85,  -84,  113,   53,  -89,   59,  -95,  -48,    2,
        76, -106,  -59,   23,   31,  -32,  -43,  -67, -128,  -40,  -14,  127,
        41,  -91,  -59,  127,   35,   71,  -84, -128,  127,   93,  127,   40,
        -125,   77,  127, -128,  127,  -63, -125,  -86,  -93, -117,  125,   72,
        -4,  -53,  127, -106,   -8,  127, -106,  127, -108,  -47,   37,   97,
        127,  127,  -30,   71,   25,   44,  -34,  -71,   72,  125,   18,  127
    };
    float X_scale = 0.0068f;
    int W_idx_OC[4] = {0, 3, 5, 8};
    int16_t W_idx_IC[9] = {0, 2, 3, 0, 1, 2, 0, 2, 3};
    uint8_t W_idx_X[8] = {0, 1, 2, 0, 1, 0, 2, 1};
    uint8_t W_idx_Y[8] = {0, 2, 1, 2, 0, 1, 1, 0};
    int8_t W_val[8] = {-36, 58, 16, 40, -4, -37, 45, 9};
    float W_scale = 0.0164;
    float O[384];
    for (int i = 0; i < 384; i++) {
        O[i] = 0.0f;
    }
    float expected_O[384] = {
        -0.3313, -0.8573,  0.1299, -1.5092, -0.6949, -0.7165,  0.0442, -0.7104,
        0.5204,  0.4547, -1.0491, -0.4067, -0.4076, -0.0520,  0.4121, -0.8080,
        0.1895,  0.3515, -0.4118,  1.2194,  0.2761,  0.4722, -0.9596, -0.1288,
        -0.2517, -0.4412, -0.3607, -0.3309,  0.8508, -0.6164,  0.3071, -0.5563,
        -0.1157, -0.1694,  0.7847, -0.3840,  0.4829, -0.2214,  0.6442, -0.3923,
        0.9619, -0.5388,  1.0747, -0.6209,  0.6862,  0.3957, -0.5047, -0.5280,
        -0.8838,  0.0781, -0.5852,  0.0630,  0.2324, -0.9567,  0.2741, -0.3053,
        0.2261,  0.5783, -0.0404, -1.4720, -1.1198, -0.2070, -0.9150, -0.8513,
        -1.0336,  0.4897,  0.9091,  0.9401, -0.4388, -0.7721,  0.6772, -0.3775,
        0.5953, -0.0366, -1.0500, -0.2992, -0.2026, -0.8156,  0.3878,  0.1790,
        -0.5379,  0.1088,  0.8154, -0.6801,  0.4450,  0.1525, -0.7021,  0.5204,
        0.1191,  0.7232, -0.2070,  0.8526, -0.1566,  0.3188, -0.6624,  0.5289,
        -0.4464,  0.7064, -0.1117,  0.6270, -0.2600,  0.4605, -0.1050, -0.0722,
        0.0785,  0.8912,  0.4695, -0.2023,  0.5327,  0.3396, -0.2400, -0.4634,
        0.3946,  0.6817, -0.6949, -0.4484,  0.5498, -0.8878, -0.6373,  0.3019,
        0.0597, -0.7133, -0.2317, -0.0787,  0.2571, -0.6588, -0.4957, -0.4632,
        -0.4854, -0.3894, -0.1669, -0.2109, -0.2840,  0.4235,  0.5128,  0.4904,
        0.1261,  0.5473, -0.0413,  0.2490,  0.4549, -0.4069,  0.5150, -0.2324,
        -0.2660,  0.5294,  0.2526, -0.1220,  0.4047, -0.2840,  0.3176, -0.2261,
        -0.4226,  0.1045,  0.1005,  0.4222, -0.6312, -0.4859,  0.5567, -0.5312,
        -0.2046, -0.1987, -0.3212, -0.5612, -0.5765, -0.1274, -0.0031, -0.1969,
        0.0763,  0.2055, -0.4823,  0.5393,  0.5289,  0.6182, -0.5128, -0.5433,
        -0.0570, -0.5307,  0.2310,  0.3733, -0.1974,  0.0933,  0.6182, -0.5029,
        -0.5312, -0.0274, -0.2885, -0.0991,  0.3827, -0.0390,  0.6124, -0.1014,
        0.0906, -0.5276, -0.0211, -0.5182, -0.4383,  0.0682, -0.0188, -0.3921,
        0.2104,  0.3203, -0.4446, -0.4823, -0.4612, -0.4065,  0.1786, -0.3872,
        -0.0709,  0.1288, -0.1140,  0.4782,  0.5222,  0.1314, -0.3701, -0.1795,
        -0.0965, -0.0363, -0.1817, -0.5101,  0.5742, -0.5603,  0.3804, -0.5294,
        -0.4971, -0.0929,  0.4814, -0.0408,  0.2849, -0.0794,  0.1934, -0.6178,
        0.3804, -0.2912,  0.6169, -0.5980,  0.5325, -0.1454, -0.3450, -0.6016,
        -0.4845,  0.2575,  0.0978,  0.3347,  0.0637, -0.5253, -0.2364, -0.5998,
        0.1202,  0.3414,  0.3019, -0.5231, -0.3952, -0.3549, -0.5487, -0.3764,
        0.7235,  0.3467,  0.8447, -0.0132,  0.2085, -0.0482,  0.8148, -0.0635,
        -0.3444, -0.0594, -0.8873, -0.0362, -0.3994, -1.2064, -0.8424,  0.5161,
        -0.2148, -0.7772, -0.5087, -0.4086, -0.5744, -0.5602, -0.3124, -0.8000,
        0.1148, -0.4360, -0.3918, -0.9290, -0.6116, -0.0630, -1.0378,  0.0240,
        0.1316, -0.6754, -0.1855, -0.6843,  0.5142, -0.4173,  0.3310, -0.0552,
        -0.9358, -0.8402,  0.5271, -0.1707,  0.1181,  0.0187,  0.2140, -1.0096,
        0.6451, -0.4372,  0.6083, -1.2356,  0.1290, -0.1633, -0.0247,  0.1231,
        0.5026, -0.4554, -0.4889,  0.4675,  0.8854,  0.4723, -0.6286, -0.1492,
        -0.3922, -0.2991, -0.9751,  0.5214, -0.3290, -0.2774, -0.3825, -0.0979,
        0.4972,  1.1012,  0.0779, -0.2331,  0.8777,  0.5583, -0.9199, -0.4796,
        0.2914,  0.3249,  0.7586, -0.8122, -0.2742, -0.7713, -0.3269,  0.3153,
        -0.4039, -0.0415, -0.6123, -0.0711,  0.2898,  0.2324, -1.0266, -0.1041,
        -0.0022,  0.3398, -0.2908,  0.2993, -0.5218,  0.6910,  0.0776,  0.7898,
        -0.5167,  0.0827,  0.4666, -0.6898,  0.2185,  0.6855, -0.5733,  0.3291,
        0.1952, -0.5960, -0.2904, -0.0545,  0.7196, -0.0896, -0.6368,  0.4040,
        -0.0523, -0.1714, -0.3681,  0.5819,  0.1543, -0.3249,  0.5611, -0.2963
    };

    sparse::quantized_sparse_conv2d_vectorized_forward_stride_1(
        B, IC, OC, M, N, K, 8, 0,
        X, X_scale, W_idx_OC, W_idx_IC, W_idx_X,
        W_idx_Y, W_val, W_scale, O
    );

    for (int i = 0; i < 384; i++) {
        ASSERT_THAT(O[i], testing::FloatNear(expected_O[i], 0.01f));
    }
}

TEST(Test_Sparse, QuantizeSparseConv2dBackward1Stride1) {
    int B = 2;
    int IC = 2;
    int OC = 3;
    int M = 4;
    int N = 3;
    int K = 3;
    int8_t X[48] = {
        30, 126, 12, 66, 127, 70, 5, 79,
        15, -44, 66, 100, 114, -101, 67, -33,
        -126, -94, 90, 9, -33, 37, -70, -93,
        -29, 51, 6, -128, -75, -105, -55, -28,
        81, -45, 5, -11, 3, -81, -110, -2,
        -103, -27, -95, 108, -68, 70, -46, 80
    };
    float X_scale = 0.0069f;
    int W_idx_OC[4] = {0, 3, 5, 8};
    int16_t W_idx_IC[9] = {0, 2, 3, 0, 1, 2, 0, 2, 3};
    uint8_t W_idx_X[8] = {0, 1, 2, 0, 1, 0, 2, 1};
    uint8_t W_idx_Y[8] = {0, 2, 1, 2, 0, 1, 1, 0};
    int8_t W_val[8] = {-36, 58, 16, 40, -4, -37, 45, 9};
    float W_scale = 0.0164;
    int8_t dLdO[12] = {
        40,  46, -31, 39, -63, -14, -21, -11, 32, 4, -28, -25
    };
    float dLdO_scale = 0.0153f;
    float dLdX[48];
    for (int i = 0; i < 48; i++) {
        dLdX[i] = 0.0f;
    }
    float expected_dLdX[48] = {
        -0.360074, -0.413694, -0.29946, -0.0296362, -0.632913, -0.13903, 0.278321, -0.350383,
        0.264418, 0.232717, 0.368182, 0.552593, 0, 0, 0.357991, 0.0354288, -0.450347, 0.566949,
        0, 0, -0.3161, -0.278203, 0, 0, 0, 0, 0, 0, 0,
        0, 0.132767, 0.0208975, 0, 0, 0, 0, -0.0386989, -0.041365,
        0.165844, 0.19054, 0, 0, 0, 0, -0.12819, 0.16138, 0, 0
    };
    float dLdW_val[8] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
    float expected_dLdW_val[8] = {
        1.05244, 0.790756, 0.0375631, -1.25631, 0.504727, 0.136137, 0.219656, 0.00787375
    };

    sparse::quantized_sparse_conv2d_vectorized_backward_stride_1(
        B, IC, OC, M, N, K, 8, 0, X, X_scale, W_idx_OC, W_idx_IC, W_idx_X,
        W_idx_Y, W_val, W_scale, dLdO, dLdO_scale, dLdX, dLdW_val
    );

    for (int i = 0; i < 48; i++) {
        ASSERT_THAT(dLdX[i], testing::FloatNear(expected_dLdX[i], 0.01f));
    }

    for (int i = 0; i < 8; i++) {
        ASSERT_THAT(dLdW_val[i], testing::FloatNear(expected_dLdW_val[i], 0.1f));
    }
}

TEST(Test_Sparse, QuantizeSparseConv2dBackward2Stride1) {
    int B = 64;
    int IC = 2;
    int OC = 3;
    int M = 4;
    int N = 3;
    int K = 3;
    int8_t X[1536] = {
        -37,   57,  120,    4,   68,  113, -107,  -84,   21,   99, -128,  109,
        127,   54,  124,   18,   27,   87,  101,   89,  -19,  -90, -109,   82,
        -82,   57,   47,   43,   23,  -35,  127,   38, -111,   61,   58,   20,
        -3,   51,  -15,   19,   46,  -97,  -28,   41,   27,   18,  115,  -41,
        127,  -13,   34,    8,    7,  -24,   64,  -34, -128,   12,  127,   58,
        127, -100,  -83,   23,  -89, -128,   14,   71,  -28,  -43, -102,  123,
        -5,   21,   33, -107,  -34,  -78,   97,  -11, -128,   27,   36,   -9,
        99,  -15,   10,  111,   76,  -50,   91,  -11,  -49,  125,   -8, -116,
        -9,   78,   57,   29, -102, -128,   23,  -43,   83,  -45,  123,  127,
        -53,   15,  -48,  127, -128,  100,  127,   18, -108, -102,   90,   74,
        -78,   30,   87,  101,  106,   95, -123,  -80,  -28,  -82, -108,  115,
        20,  -73,  -12,   66,  -45,  -93,    8,  -77,  -58,    7, -128,   26,
        -56,  -25,  -63,  127,  -96, -116, -128,  -80,  121,  127,   90,  -61,
        -95,   24, -107,  -84, -108,  -57,   -9, -110,  -53,   76, -128,  -70,
        -59,  127,  -22,  -68,  -22,  -21,  -57,   52,  -22,   93,  -18,   42,
        -121,  127,  117,   33,  127, -110, -121,   79, -128,   10,  -24,  -24,
        120,   59,   91,  -99,   -7, -128,  116,  -24,  -99,  -82,   13,   97,
        -54,   28, -112, -102,  -73,   72, -128,   77,   26, -104,   -6,  -14,
        -77, -100,   76,  -76, -128,  -43, -122,   37,  -16,  -18,   -8,  -74,
        1,  127,   96,   89, -128,  -91,   60,  -79,   63,  118, -128, -120,
        127,  -30,  -69, -117, -128,   41,  109,   69,   73,  -55,  -27,  -50,
        -125,  -23,  -71,  127,   13,  -56, -100,   55,  -11,  127,  118,   23,
        11,   59, -128,  -94,  -72, -122,  -19,  -78,    2,   33,  -64,  -87,
        53,  -82, -124,  -10,  -16,  127,  117,   69,  -93,  -86,  -15,  127,
        121,  -73,  116,   73,   64,   14,  -66,    1,   33,  127,  -80,  -54,
        127,  124,  -84,  -66,  122,  -79,  124, -128,   63,   73,  -68,  -30,
        58,   14,  127, -121,  -35,  -10,   33,   12,  112,   -5,   15,   73,
        105,  -89,  127,  102,  -57,   72, -120,   10,  -50,   80,   92,  -41,
        27,  -59,   50, -110,  -37,   74,  -27, -128, -112,  -35,  127,  -87,
        -59,   59,  -18,  118,  -62,   80,  111, -128, -128,   51,  -57,   37,
        -125, -106,  -10,   -5,  119,   -5,   57,   90,   39,   72,  -92, -105,
        78,   -9,   67,  -40, -127,  127,  127,   37,   76,  127,   77,  -38,
        19,   -9,   24,  -62,   31,  -16,   51,   10,  104,  -56, -128,  -30,
        -100,   10,  -65,   60, -117,  107,  127,  121,   63, -128,  127,   31,
        -51,  121,  100,  106,  117,  -60,   30,  -72,  127,   28,  -27,   95,
        29,   -1,   27,   32,  -77,  -20,  -87,  117, -119,  -25, -125,  -56,
        115,  127,   33,   99, -118,  -22,   47,   47,  -62,  102,   26,   90,
        -61,  123,   72,  -96,  -37,   20,  110,  -13,  113,  114, -122, -128,
        127,  127, -128,  -94,   70,  -83,    2,  111,  -50,   25,  -20,    5,
        -26,  -34, -128,  127,   46,   -7,    9, -128,   21, -110,  -86,    8,
        127,   74,  -85,   44, -113, -117,  -94, -121,  -89,  -68,  -36, -107,
        127, -128,  127,  127,  -47,  -63,   33,   50,  -50,  127,  -62, -116,
        35,  -27, -122,  -27,  -38, -128,  113, -119,  -38,  -58,  -71,   24,
        -45,  127,   -4,  110,   14,   -3,    4,  -79,  127,    2,  -67,  -57,
        62,  -68, -128, -101,  -86,  -72,   86,  -26,  -80,   76,  127,  -31,
        69,  -51,  -14,  -65,   51,  -28,  104,  -70,   75,   18,   25,  -96,
        70,   33, -126,  -57, -115,  127,   90,  -14,  103,   15,    4, -128,
        -128,  -53,  -70, -127,  127, -128,   21,  105, -123,  -25,  120,   67,
        -53,  -19,  -39,   93,  -75,  -51,  -40,  127, -119, -112,   67,  -53,
        39,    4,  -49,  -78,   55,  -90,   30, -128,   56,  -26,   26,  112,
        -41,   43,  -23,   25,  -44,  -89,   72,   98,  -21,  113, -105,  118,
        -47, -128,   22,  -56,   15,  -86,  -11,  -28,   19, -101,  127,  -80,
        33,    7, -100,  122,   65,  -24,  -80,   54,   52, -102,  116,   90,
        -20,  -89,  -79,  117,  -33,    6,   97,  -19,    5,   25,  -32,  127,
        -128,   78,   68,  127, -114,   78,   44,  -95,  -75,   86,  -38,  -15,
        78, -128,  123,    2, -118,  -50,   34,   81,  -40,  -31, -113,  -20,
        -116,  100,   31,   21,    8,    1, -103,  -93,  -84,   19,   33,  127,
        70,  102,   86,  -62,   57,  127,    5,   53, -126,  -97,  111,  -29,
        68,   55,  -44,   27,   34,   14,  -69,  127, -128,  120,  127,  -81,
        125,  127, -128,  114,  -90,  116,   23, -107, -104,  -58, -128,  108,
        38,   97,  -81,    3,  -59, -128,  -21,  -13, -109,   71,  -79,    3,
        -128, -121,  109,  113, -107,    6,  -29,  114,   75,  -73,   45,  125,
        -52,  -76,  -92,  -39, -128,   21,  -27, -110,  112,  -73,  120, -122,
        1,  117,    6,   -5, -107,  -29,  -31,  118,  -83,  -63,  -80,  117,
        84,  -30,  127,  127,  117,  -48,   97,   43,   31,   31,   11, -112,
        12,  -93,   54,  -38, -128, -122,   76,   20,  127,   12,  -41,   42,
        -56,   86,  -75, -127,  -56,   -2, -109,  110, -104,  -42, -128,  -82,
        -50,   41,   51,   86,  -51,  114,  127,  -74,  -60,  127,   55,  101,
        -128,  -48,  -16,  -15,   -7,   26,   95,  -73,  -15,   72,  -30,   42,
        -99,  -68, -128,   82,  -36, -127,  125,  -93,   36,  -86,   -2,   12,
        5, -128, -124,   98,   33,  -59,  127,  -50,   24,   37,  -55,   82,
        59,   59,   18, -112,  116,  -37,   62, -107,   76,    7,  125,    9,
        39,   15,  -77,  -55, -121, -128, -128, -111,  -97,  -52, -119,   25,
        -42, -128, -103,   64,  105,  106,  -47,   32,   99,   -1,   94, -100,
        -12, -122,  127,  -97,  127,  -69,  -28,   68, -119,   31,   76,  114,
        -35,  127,  -63,   66, -121, -123,   44,  -98,  -55,  -87,  -69,   61,
        -89, -119,    7,  127,   -6,  -13,    2,  122,  -73,   79,   49,  127,
        65,  -38,   85,  -99, -128,  -61,   66,  -68,  -15,  -59,   33,   98,
        -29,   20,   36, -114,   69,   38, -128,  108, -128,   34,   30,   35,
        -9,  124, -108, -116,  -50,    0,   77,   37,   62,   81,  127,    9,
        8,  -12, -128,  -58,  119,   57,  127,  -79,  -25,  -10, -128,  120,
        75, -126,  -60,   27, -128,   10,  -14,  127, -107,    1,   39,   12,
        -88,   29,  -28,  -26,   63,  123,  -31,  -69, -128,   78,  -13,   97,
        72, -128, -113,  127,   73,   48,  -17,  127,  124,  111,   70,   45,
        112,  -54,  -46,   22,   46,    0,  -47,   58,  -24, -128,  -50, -103,
        -63, -122,  -50,  -63,   87,   58,  116,  -87,    3,  -22,  -79, -123,
        121,  -44,   57,   71,  -22,  -37,  120,   83,  116,   68,   32, -121,
        -32, -101,  101,   53,  100,  115,   16,  105,  127,  -66,  -35,   46,
        -22, -120,  -90,  127, -127,   71,   -4,  105,   20,  127,  117,  127,
        -57,   75,  111,  108,   50,   -1,   -3, -110,  103,  -57,   18,  -12,
        -120, -128,  -30,   -4,   87,  -89,  -94,  -89,   89,  -67,  108,  109,
        23,  -97,  108,  -34,   12,   65, -115,  101,  109,  -49,   16,   87,
        118,   56,  127,   85,   17,   51, -100,  -71,   34,   13,  -90,  -73,
        -118,   59, -126, -103,  -94, -128,  -70,   96,   81,   86,  -88,   66,
        -20,  115,  127, -116,   50,   88,  121, -128,   54,  -76,   54,  119,
        -33,   65,   71,   36,  113,  -92,   28,  -59,    8,  123,  104,  127,
        -53,   13,   29,   50,  127,   14,  -31,   23,  -24, -118,   48,  108,
        102, -103,   36,   29,   28,   66,   87,  110,   19,  -23,  -53,  -22,
        -74,  -14,  -78, -111,    2,   28,  -16,  127,  -28,   69,  -96,  113,
        -60,  101,  -66,   49,   80, -106,   31,  -51,  -90,  -28,  -97,  -61,
        109, -128,  106,   -4, -128,    6,   38,  -45,  109,  -61,   31,  -86,
        94,  -95,   60,   21,   70,   97,   53,  -84,  -47,  -83,   21,   13,
        -44,  111,   37,   24,   93,  -42,   -9,   46,   95,   29, -111, -122,
        103,  111,   97,   27,   10,   52,  109,  108,  -51, -114,  -75,   87,
        -123,  -40,   76,   45,   27, -114,   54,  -36,   58,   -8, -128,   14,
        127,  -93,  124, -128,   38,  124,  -59,   34,   64,  -61,  127,  102,
        -25,   26,  -91, -128,   26,   35,   -3,  -77,  -31,   47,    5,  127,
        -21,  -57,   76,   34,   89,  -74,   66,   33,  127,   45,   35, -125,
        -96,  118, -123,  -53,   68,   73,  119, -128,  -87,  109,  -32,  -54,
        44,  127,  -63,   19,  -77,  -79,   30,   24,   19,  -21,  -28,   87,
        -73,  -83,    3,   -9,   18,  -72,   58,  -30,   37,  -79,   94,   64,
        -58,   79,  -39,  -11,  -40,   -4,   53,  -80,  -62,  -91,  -82,   71,
        -128,  -19,  -29,   82,   71,    8,   39, -115,  127,   64,  127,   23,
        -127,   27,  -57,  -42,   78,   76, -128,  -26,   77,   -1,   37,  125,
        123,  -63, -128, -128, -118,   34,  127,   54,   57,  -20,   97,  127,
        -106, -104,   29,   27, -128,   68,   45, -114, -118,  -44,  -53,   39,
        -80,  127,   21,   21,   45,   53,   58,   51,   81,   62, -128,  108,
        -15, -113,  -12,  -17,  -22,  -78,   24,   26,  127, -128,  122,   50,
        99,  -52, -125,   66,  -51, -128,   -4,   13,   -8, -105,  -44,  107,
        -46,   69,  -47,    6,   71,   17,   92,   16,  -66, -119,   38,  -77,
        -28,  117, -128,   74,  -68,  -47,  118,  -71,    8,   27,   37,   62,
        33,  -37,   95,   31,   47, -111, -128, -128,  120,   84,   91,  -55,
        127,  -66,  125,  -69,  -18,  -12,  100,  112,    7,   41,   80,  127,
        -31,   14,  127,  -25,  -72,   99, -113,   48,  -92,  113,  -34,   60,
        119,  127,   96,  -92,  -16,   49,  -79,  120,  -87,   16,  119,  -37,
        -110, -101,  -15,  -37,   20,  -26,  -93,   64,  118, -106,   80,  -64,
        122,  -38,   75, -103,  118,  -38,  -17,  -66,   20,   99,  114,  -98,
        98, -128,  121,   20,   -2, -106,   52,  -46,  -83,  -92,  -97,  -78
    };
    float X_scale = 0.0070f;
    int W_idx_OC[4] = {0, 3, 5, 8};
    int16_t W_idx_IC[9] = {0, 2, 3, 0, 1, 2, 0, 2, 3};
    uint8_t W_idx_X[8] = {0, 1, 2, 0, 1, 0, 2, 1};
    uint8_t W_idx_Y[8] = {0, 2, 1, 2, 0, 1, 1, 0};
    int8_t W_val[8] = {-36, 58, 16, 40, -4, -37, 45, 9};
    float W_scale = 0.0164;
    int8_t dLdO[384] = {
        -16,  23,   4, -39,  30, -34,  17,  50, -31,  21, -51, -22, -19, -46,
        15,  23,  15,  47,  26,  45, -14, -21,  18,   7,  -3,  23,  -5,  50,
        -49,  21,  55,  40,  40,  11, -47,  -3, -43, -31, -37,  57,  47, -50,
        17,  13, -36,  49,  36, -48,  12, -44, -45,  -3,  31,  -9,  33, -53,
        25, -17, -44,  58, -55, -31, -42,  46, -27,  36,  -1,  13,  32,  41,
        1, -22,   4,  -4,   6,  39, -23, -35,  30, -17,  42,  15,  -5,  29,
        -27,  44, -31, -48, -52,  -3, -36,  28, -34,   2,  22,  17, -49,   9,
        0, -12,  13,  48,  20,  49,  35, -48, -42, -51,  54, -30,  28,  45,
        -7,  22,  32, -41,  16,  33, -40,  33, -27,  10, -49,  55,   4,  28,
        -37,  10,  21,  27, -51,   5,  50,  42,  33,  14,  18,  37,  19,  -8,
        -21, -31,   9,   1,  -1, -55, -55,  38, -56,  57, -41,  10, -52,  25,
        25,   6, -38,  17,  40, -38,  32,  54,  24,   9, -22, -37,   6,  49,
        55, -42,  14, -15, -11, -16, -30,  15,  50,  12, -45, -57,  52, -10,
        53, -22, -30,  51,  18,  16,  54, -41,  39,  36, -13, -34, -41,  36,
        -20, -15,  14,  32, -18,   8,  22, -21,  -8, -37,  20, -18, -48,   3,
        19, -46,  45,  38, -10,  -9, -22,  47,  21, -45, -54,  57, -43, -18,
        -30, -33,  46,   1,  20, -20, -24,   7,   8, -15, -34, -36,  -7,  31,
        14,  11,  23,  10, -33,  -5, -21, -19,  19,  10,  19,  23, -43,  23,
        -40,  48, -56, -37, -48, -37,  17,   5, -22,  15,  48, -30,  53, -30,
        -7, -37,  57, -22,  54, -50, -42,   1,  -5,  51,  10,   8, -38, -26,
        54,   7,   4,  43,   7,  35,  34,  28,  24,  -1,  27, -41,  11,  24,
        13, -39, -47,  34, -52,  33,  10,   8,  18,  24, -23,  31, -36, -19,
        -17, -47,  58,  18,  43, -55,  33,  54,   0,  32, -51, -32, -45,   4,
        28,  53,  56, -22,  48, -29, -20, -27, -36, -24, -52, -14,  -5, -47,
        -3, -52, -37,  49,  48,  16, -46, -38,  43, -48,   3, -48, -54,  33,
        -14,  -9, -13, -23, -10, -28,  36,  42,  18,  14, -19, -24,  24,  33,
        -47, -45,  51, -41,  31, -32, -46,  -9,  42,  -2, -36,  55,  -2, -54,
        -39, -15, -12,  34,  -4, -14
    };
    float dLdO_scale = 0.0172f;
    float dLdX[1536];
    for (int i = 0; i < 1536; i++) {
        dLdX[i] = 0.0f;
    }
    float expected_dLdX[1536] = {
        0.165384, -0.231103, -0.0469253, 0.394783, -0.299875, 0.343218, -0.177071, -0.507016, 0.310858, -0.217653, 0.5096, 0.223761, 0.194807, 0.465905, -0.153579, -0.232395, -0.149468, -0.474656, -0.256415, -0.454277, 0.138662, 0.217007, -0.18359, -0.0717681, 0.0299523, -0.241733, 0.0516824, -0.507075, 0.496856, -0.207787, -0.558346, -0.399012,
        -0.403945, -0.109943, 0.471837, 0.0357078, 0.434367, 0.314852, 0.369764, -0.583071, -0.478767, 0.505078, -0.167322, -0.132025, 0.367004, -0.499675, -0.366886, 0.492275, -0.120984, 0.451105, 0.455686, 0.0351205, -0.309977, 0.094849, -0.339283, 0.530802, -0.251541, 0.177658, 0.447875, -0.579313, 0.556643, 0.311386, 0.423091, -0.461677,
        0.502784, 0.393287, -0.176967, -0.0462763, 0.231442, -0.159416, -0.502905, 0.315917, -0.549667, 0.313913, 0.0748194, 0.379259, -0.599527, 0.229316, -0.555315, 0.516873, 0.44175, -0.00941315, 0.0468836, -0.530173, -0.108403, -0.079617, 0.399118, 0.265329, -0.567036, -0.0791919, -0.0395352, -0.44424, -0.0725116, -0.364198, -0.361161, -0.292354,
        -0.247475, 0.0118423, -0.280451, 0.43258, -0.118788, -0.253851, -0.135003, 0.405676, 0.49246, -0.35521, 0.549303, -0.345736, -0.100387, -0.0844147, -0.180672, -0.254459, 0.246321, -0.322537, 0.371728, 0.194093, 0.174234, 0.483472, -0.606632, -0.189235, -0.445758, 0.572502, -0.336869, -0.560356, -0.00273285, -0.335594, 0.537157, 0.331221,
        0.232416, 0.297209, -0.567726, 0.0626945, 0.574481, 0.480308, 0.376167, 0.157064, 0.200544, 0.410728, 0.216021, -0.0924678, -0.236416, -0.355509, 0.106961, 0.00445944, -0.01187, -0.625371, -0.616059, 0.424237, -0.640651, 0.651472, -0.456109, 0.112666, -0.588187, 0.27537, 0.283174, 0.0742366, -0.422925, 0.193395, 0.456174, -0.429877,
        0.361149, 0.607271, 0.272944, 0.106567, -0.246843, -0.416105, 0.0666949, 0.54438, 0.625043, -0.467782, 0.160081, -0.178968, -0.117716, -0.177459, -0.337212, 0.177132, 0.56425, 0.136144, -0.505884, -0.63606, 0.583924, -0.108797, 0.59304, -0.25327, -0.336557, 0.584383, 0.208676, 0.175099, 0.607992, -0.460634, 0.435582, 0.399644,
        0.278087, -0.36718, 0.00969045, -0.141128, -0.328066, -0.415985, -0.0133317, 0.221882, -0.0331237, 0.0356491, -0.0651903, -0.393139, 0.227226, 0.350559, -0.306277, 0.177071, -0.426615, -0.145357, 0.05133, -0.299053, 0.273799, -0.443294, 0.313912, 0.483818, 0.531683, 0.0314793, 0.36812, -0.281023, 0.345097, -0.0209079, -0.217595, -0.173077,
        0.494859, -0.0879775, 0.0046984, 0.117754, -0.131555, -0.491629, -0.202442, -0.490043, -0.352497, 0.482291, 0.41757, 0.513535, -0.547599, 0.302694, -0.278321, -0.460678, 0.0737062, -0.226874, -0.325247, 0.41528, -0.157808, -0.33617, 0.405237, -0.334115, 0.269571, -0.100487, 0.488457, -0.548773, -0.04393, -0.278674, 0.366064, -0.104539,
        0.468532, -0.0433005, -0.289743, -0.552886, -0.581915, 0.229195, -0.492034, 0.305533, 0.203445, 0.284945, 0.38181, 0.256949, 0.540254, 0.141379, 0.0525314, 0.497682, 0.0288467, 0.542805, 0.38685, -0.514444, -0.500537, -0.175024, 0.483289, 0.399178, -0.454503, 0.498593, -0.0299399, 0.499869, 0.564242, -0.34191, 0.149882, 0.0912165,
        0.136521, 0.242434, 0.103909, 0.289925, -0.381202, -0.44011, -0.188142, -0.145388, 0.195004, 0.252819, -0.243709, -0.343246, 0.489241, 0.469261, -0.533452, 0.42845, -0.330371, 0.341971, 0.478431, 0.0986862, -0.436224, 0.0239884, 0.383814, -0.577907, 0.0163364, 0.570012, 0.413571, 0.157291, 0.130266, -0.3594, 0.0411142, 0.1398,
        -0.414963, -0.0149464, -0.382541, -0.242689, 0.253922, -0.72488, 0.445678, 1.18344, -0.71062, 0.447534, -0.583241, -0.602481, -0.399944, -1.16493, 0.477443, 0.18054, -0.297413, 0.796953, 0.624954, 0.214352, 0.286634, 0.0799871, 0.17561, 0.00444391, -0.305342, 0.914341, 0.159479, 0.313884, -1.41306, 0.974506, 0.418224, 0.447189,
        0.321388, -0.195844, -0.243159, -0.0416456, -0.473377, -0.739445, -0.871187, 1.02019, 0.860135, -0.984094, -0.110935, -0.187919, -0.667292, 1.16376, 0.759111, -0.669054, 0.452245, -0.614636, -1.116, -0.106669, 0.270924, -0.367068, 0.764156, -0.744838, 0.628871, -0.0293429, -1.20684, 1.19215, -1.34598, 0.0455802, -1.32171, 0.330467,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.601055, -0.470158, 0.211556, 0.0553212, -0.276679, 0.190575, 0.601201, -0.377665, 0.657103, -0.375269, -0.0894432, -0.453387, 0.716707, -0.274138, 0.663854, -0.617899, -0.528092, 0.011253, -0.0560472, 0.633798, 0.129591, 0.0951786, -0.477127, -0.317189, 0.677866, 0.0946704, 0.0472626, 0.531069, 0.0866844, 0.435382, 0.431752, 0.349496,
        0.295845, -0.014157, 0.335267, -0.51713, 0.142006, 0.303468, 0.16139, -0.484968, -0.588713, 0.424637, -0.656667, 0.413312, 0.120008, 0.100914, 0.215985, 0.304194, -0.294466, 0.385579, -0.444385, -0.23203, -0.208289, -0.577969, 0.725201, 0.226222, 0.532884, -0.6844, 0.402712, 0.66988, 0.003267, 0.401188, -0.642147, -0.39596,
        -0.449967, 0.594128, -0.0156799, 0.228357, 0.530838, 0.673097, 0.0215718, -0.359023, 0.0535969, -0.0576832, 0.105483, 0.636131, -0.367671, -0.567234, 0.495581, -0.286515, 0.690298, 0.235199, -0.0830562, 0.483893, -0.44303, 0.717286, -0.507935, -0.782857, -0.860307, -0.0509361, -0.595648, 0.454719, -0.558396, 0.0338307, 0.352086, 0.280053,
        -0.800723, 0.142355, -0.0076024, -0.190535, 0.212867, 0.795496, 0.327568, 0.79293, 0.57037, -0.780386, -0.675663, -0.830942, 0.88606, -0.489785, 0.450347, 0.745415, -0.119263, 0.367101, 0.526276, -0.671957, 0.255346, 0.543952, -0.655707, 0.540626, -0.436188, 0.162596, -0.790365, 0.88796, 0.0710824, 0.450917, -0.592322, 0.169153,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.560109, 0.0517638, 0.346375, 0.66095, 0.695653, -0.273992, 0.588205, -0.365251, -0.24321, -0.340639, -0.456436, -0.307171, -0.64585, -0.169013, -0.062799, -0.594957, -0.034485, -0.648899, -0.462462, 0.614995, 0.598369, 0.209233, -0.577751, -0.4772, 0.543338, -0.596046, 0.0357918, -0.597571, -0.674527, 0.408738, -0.179177, -0.109045,
        -0.163205, -0.289819, -0.124219, -0.346592, 0.45571, 0.526132, 0.224915, 0.173804, -0.233119, -0.302234, 0.291344, 0.410335, -0.584866, -0.56098, 0.637718, -0.512193, 0.394944, -0.408811, -0.571943, -0.117975, 0.521486, -0.028677, -0.458832, 0.690862, -0.0195294, -0.681424, -0.494406, -0.188034, -0.155727, 0.429647, -0.0491502, -0.167125,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.138598, -0.120135, 0.0981311, 0.00421722, -0.111276, -0.0123166, 0.0768213, -0.0882065, 0.105352, -0.113509, -0.0390505, -0.0773524, 0.161131, -0.0163448, 0.116148, -0.118671, -0.0998304, 0.0656627, 0.051841, 0.0781762, 0.0898552, -0.0479507, -0.0449648, -0.0721273, 0.189424, -0.00985278, -0.0197155, 0.0940662, 0.059535, 0.063658, 0.0362769, 0.110523,
        0.0199251, -0.0643802, 0.0364251, -0.109761, 0.0522371, 0.100318, 0.0241042, -0.14807, -0.17611, 0.128748, -0.141892, 0.0972509, 0.0349149, 0.0373291, 0.0755685, 0.0402104, -0.11364, 0.0599436, -0.0336454, 0.0202029, -0.0991511, -0.0995293, 0.0785208, 0.0690022, 0.136132, -0.190288, 0.0558557, 0.110381, -0.0611198, 0.123536, -0.167093, -0.116342,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.0921963, 0.0493974, 0.112829, 0.0862282, 0.156584, -0.0352048, 0.096373, -0.10675, -0.0254459, -0.0748555, -0.111835, -0.034353, -0.114961, 0.00940896, -0.0352649, -0.0939751, 0.0481674, -0.127086, -0.109811, 0.170543, 0.0625867, -0.00375186, -0.0982023, -0.079957, 0.13004, -0.16717, -0.0178409, -0.0628801, -0.0671939, 0.0133789, 0.0149968, -0.000709618,
        0.00251484, -0.0174935, -0.0766062, -0.0679492, 0.0638842, 0.124017, 0.0707435, 0.0254605, -0.0532788, -0.040881, 0.0945018, 0.119285, -0.104439, -0.143405, 0.105207, -0.110941, 0.0495143, -0.0899229, -0.0709706, -0.0175096, 0.123195, 0.0162051, -0.109636, 0.120595, -0.0262672, -0.156585, -0.0456266, -0.0618492, 0.0154274, 0.0264035, 0.0552984, 0.0103295,
        -0.0761728, 0.106442, 0.0216129, -0.18183, 0.138117, -0.15808, 0.0815557, 0.233523, -0.143176, 0.100247, -0.234713, -0.103061, -0.0897249, -0.214588, 0.0707358, 0.107037, 0.0688423, 0.218618, 0.1181, 0.209232, -0.0638651, -0.0999498, 0.0845583, 0.0330551, -0.0137955, 0.111338, -0.023804, 0.23355, -0.228843, 0.0957029, 0.257164, 0.183778,
        0.18605, 0.0506376, -0.21732, -0.0164464, -0.200062, -0.145015, -0.170307, 0.268552, 0.220512, -0.23263, 0.0770655, 0.0608084, -0.169035, 0.230141, 0.168981, -0.226733, 0.055723, -0.207771, -0.209881, -0.0161759, 0.14277, -0.0436858, 0.156268, -0.244478, 0.115855, -0.0818263, -0.206283, 0.266821, -0.25638, -0.143419, -0.194868, 0.21264,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.128082, 0.169117, -0.00446325, 0.0650012, 0.151101, 0.191595, 0.00614035, -0.102195, 0.0152562, -0.0164193, 0.0300255, 0.181073, -0.104656, -0.161461, 0.141066, -0.0815557, 0.196491, 0.0669487, -0.0236417, 0.137739, -0.126107, 0.204173, -0.144582, -0.222838, -0.244884, -0.0144988, -0.169549, 0.129434, -0.158946, 0.0096298, 0.10022, 0.0797163,
        -0.227923, 0.0405209, -0.002164, -0.0542352, 0.060592, 0.226436, 0.0932414, 0.225705, 0.162354, -0.222135, -0.192326, -0.236525, 0.252214, -0.139416, 0.12819, 0.21218, -0.0339477, 0.104494, 0.149803, -0.191271, 0.0726833, 0.154834, -0.186645, 0.153887, -0.12416, 0.0462826, -0.224975, 0.252755, 0.0202334, 0.128352, -0.168603, 0.048149,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };
    float dLdW_val[8] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
    float expected_dLdW_val[8] = {
        2.72295, -4.18539, -3.24589, -0.0441055, 0.979106, 3.15714, -5.1034, -0.283994
    };

    sparse::quantized_sparse_conv2d_vectorized_backward_stride_1(
        B, IC, OC, M, N, K, 8, 0, X, X_scale, W_idx_OC, W_idx_IC, W_idx_X,
        W_idx_Y, W_val, W_scale, dLdO, dLdO_scale, dLdX, dLdW_val
    );

    for (int i = 0; i < 1536; i++) {
        ASSERT_THAT(dLdX[i], testing::FloatNear(expected_dLdX[i], 0.025f));
    }

    for (int i = 0; i < 8; i++) {
        ASSERT_THAT(dLdW_val[i], testing::FloatNear(expected_dLdW_val[i], 0.3f));
    }
}

TEST(Test_Sparse, QuantizeSparseConv2dForwardParallel1Stride1) {
    int B = 2;
    int IC = 2;
    int OC = 3;
    int M = 4;
    int N = 3;
    int K = 3;
    int8_t X[48] = {
        30, -29, 126, 51, 12, 6, 66, -128, 127, -75,
        70, -105, 5, -55, 79, -28, 15, 81, -44, -45,
        66, 5, 100, -11, 114, 3, -101, -81, 67, -110,
        -33, -2, -126, -103, -94, -27, 90, -95, 9, 108,
        -33, -68, 37, 70, -70, -46, -93, 80
    };
    float X_scale = 0.0069f;
    int W_idx_OC[4] = {0, 3, 5, 8};
    int16_t W_idx_IC[9] = {0, 2, 3, 0, 1, 2, 0, 2, 3};
    uint8_t W_idx_X[8] = {0, 1, 2, 0, 1, 0, 2, 1};
    uint8_t W_idx_Y[8] = {0, 2, 1, 2, 0, 1, 1, 0};
    int8_t W_val[8] = {-36, 58, 16, 40, -4, -37, 45, 9};
    float W_scale = 0.0164;
    float O[12] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
    float expected_O[12] = {
        0.3548f, -0.3768f, -0.2982f, 0.9733f, 0.0695f, 0.0282f, 0.2771f, -0.4338f,
        -0.1594f, -0.3594f, -0.1044f,  0.2436f
    };

    sparse::quantized_sparse_conv2d_vectorized_parallel_forward_stride_1(
        B, IC, OC, M, N, K, 8, 0,
        X, X_scale, W_idx_OC, W_idx_IC, W_idx_X,
        W_idx_Y, W_val, W_scale, O
    );

    for (int i = 0; i < 12; i++) {
        ASSERT_THAT(O[i], testing::FloatNear(expected_O[i], 0.01f));
    }
}

TEST(Test_Sparse, QuantizeSparseConv2dForwardParallel2Stride1) {
    int B = 64;
    int IC = 2;
    int OC = 3;
    int M = 4;
    int N = 3;
    int K = 3;
    int8_t X[1536] = {
        120,    1,   24,  116,   73,  127,  -25,   -6,  -90,  -39,   88,  -60,
        -121, -128, -107,   20, -118,  -43,   63, -116,   96,  -36,  118,   32,
        61,   25,    3,  -74,   13,  -14,  127,  -12,  -93,  -41,    7,   59,
        -40,   93, -115, -110, -124,  -25,  -46,   -4,   -8,  -80,  -10,  -95,
        31,   85,  127,  127,   18,   56,  -87,  -94,   15,   17,  114,  105,
        109, -128,    0,  100,  -79,   23, -124,  -71,   49, -128,  -11,  107,
        11, -100,  117,   89,   15,  127,   77,  -30,  -74,   45,   72,   43,
        54,   36,  -86,  122,  -43,  -10,  -44,   57,   98,  112,  127,  -79,
        -12,  127, -101,  125,    5,  -59,   91, -111,  127,  102,  -65,  127,
        -117,  -32,   72,   83,  -37,  -35,  -87,  127,  -70,   97,   94,  -27,
        -35,  127,   93,  -37,  -28,  -44,  115, -128, -121,  -86,  -45,  -46,
        -74,  101,  127,  116,   31,  127,  -22,   47,  111, -103,  127,  -40,
        -47,  108,   52,  -15,  101,  -61,   62,  -42, -107,   20,   20,   85,
        -128, -110,  127, -124,  -33,  -34,  -83, -118, -126,  -30,   12,  -47,
        23,   34, -105,  123,  127,  127, -107, -123,  -16, -112,   50,   77,
        -41,    8,  127, -124, -128,  -10,  -62,  -32,   98,   -3,  127,  -26,
        116, -128,   35,  -22,  -43,  127,   28,  104,  -13,   46,  109,  -98,
        -127,   -6,  -56,  127,  101,   54,   16,  -10,   26,  -57,    0,   26,
        -51, -114,  -80,  -81,  127, -113,   -4,  -49, -128,  -63,    3,   12,
        127,  -85,   74,   72,   95,  -49,  103,   53,   22,  127,    2,  -35,
        -68,  -29,  -91,  -10,  112,  112,   37,  -47,  -72,   53,   45,  -70,
        73,   12,  127,  -65,   32,  -42,  126,  -32,   98, -110,   44,  117,
        -77, -107, -128,   -1, -122,    8,   75,  -26, -123,   10,  -59,   24,
        -93,   10,   35,   87,   28,   37,   32,   31,  -82, -128,  108,  109,
        -124,  -96,   28,  -95,   71, -104,  127,  -67,  125,  127,  -20,   66,
        77,  -73,   54,   90,   60,   94,  -39,   -9,  -62,   79,   53,   88,
        -128, -128,   15,  -22,  -71,  -37,   37,  -31,   15, -116,    7, -128,
        -96,    4,   -9,  -87,   36,   73, -105, -105, -111,  -80,   27,  -82,
        -11,   37,  -38,  100,  107,   21,  -82,  -30,  -16,  -17,  -50, -115,
        127, -128,   91, -128, -102,  -33,  120,   -2,   53,   -5,   50, -125,
        72,  -68,  127, -128,  127,  -20,  -86, -128, -118,   54,    9,   75,
        24, -125,  -40, -121,   14,   68,   80, -128,  -94,  -87, -115,  -79,
        95,  -23,  -13,  -89,    6,  124,   57,   -9,  -20,  101,   51,  -18,
        -19,   18,  -14,  124,   32,  -38,   29,  110,  -27, -103,  -19, -128,
        -69,   35,  -52,  112, -101,   27,  117,  127,   64,  127,  -68,   49,
        118,  124,   49,  -59,  -71,  -49,   78,  127,  -20,  101,   -2, -118,
        84, -101,   75,    2,   26, -107,  -53,   -9, -128,   10,   71,  -32,
        74,  -83,  127, -128,  104,   86,   81,  -63,  103, -128,  127,   62,
        -65, -104,  -54,   83,  -86, -110, -128,   54, -128,  -97,  -33,  -70,
        -91,  -86, -115,  -75,   13,  -88, -109, -119,  -66,   83, -107,  -49,
        -9,  -50,  -97,  -47,  101, -128,  115,  -96,  -93,  -59,   46,   65,
        -91,   -1,   87, -128,  104, -128,   52, -128,  -38,   73,   94,   26,
        90,   22,  -25,   82,  127,   46,  -11, -128,  -80,   27,  127,  127,
        -90,  -12,  127,   17,   92,    5,  -75,  -74,  -89, -128,   45,   92,
        -44,   45,  127, -124,   52,  -42, -122,  108,    9,   60,  -87,   51,
        52,    7,  -69,   52, -126,   59,   20,  127,   27,  -17,   24,   38,
        36,  111,  127,  -28,  127,  112,  -50, -128,   35,  121, -128,  -55,
        119, -102, -107,   36,  -14,  -58,  -19,  -79,  108, -125,  -12,  -87,
        127,  127, -119,  -97, -104,  105,  -53,   63,  -33,  118,  107,   79,
        65,   -5,  127, -128,  110,  -73,  116,  127,  -56, -128,  -52,  -23,
        -13,  -78,   29,  -10,   83,   14, -127, -119,   55,  -15,  -18,  124,
        12,   61,  -60,   76,  127,  114,  -99,   19,  -78,    1,  -77,  -52,
        127,   23, -128,  -41,   53,  -48,  127,   97,  -19,  -11,   28,   88,
        39,   25,   25,  -26,  -41,  -97, -113,  102,   12, -123,  -30,   76,
        57,  127,  -78,  -52,   90,   96,  -95, -125,  -53,   56,  127, -128,
        -112, -128,  -37,  114,  -68,   40,  -76,   14,   -8,  -53, -127,   89,
        -120,   13,  -60,  -33,  -24,   26,  106,   76,   26,  127,   97,  -93,
        90,   51,  -51,  127,  108,  -34,  -64,  -19,   72,   63, -108,  127,
        -90, -123,  -86,  120,  -16,  -79,  127,  -94,   98,  -61,  -67,  -45,
        -115,   59,  -87,  -21,    1,  125,  -94, -116, -118,  -10,  -68,   74,
        -74,   27,   42,  106,   90,  -98,   49,  -68,    9,   17, -128,  -36,
        108,  -91, -121,   65,   53,  127,  -25,   44,   42,   79,  -91,   29,
        127,  -44,   42,  -28,   44,   83, -113,  -76,  -68,   27, -128,  -17,
        -56,  -21,  -49,  -57, -126,   62,  -73,   47,  -23,  118,  -59, -102,
        11,   20,  -30,  -54,  -41,  -84,   13,  -15,   56,  122,    9,   -6,
        108, -128,   62,   -3, -124,  -46, -114,  -24, -128,   59,   41,   56,
        -8,   30,  -58,  -55,   73,   -2,   20,  -24,   82,   78,  -59,   99,
        59,   19,  127,   75,   89, -128,   99,  107,  110,  -21,  123,  -73,
        18,  127,    0,   97,  103,   -6,  -60,  120,  -30,  -30,   15,  -92,
        -3,  127,  127, -112, -104,  -87, -125, -124,  -62, -118,  -82,   78,
        -93,   61,  109,  -41,   86,  127,   87,   23,  110, -128,  -77,  -83,
        -8, -109,  -14, -114,  -46,  118,  113,   66,  127,   36,  -53,  -73,
        -73,   27,   94,  -79,   31,  -25,  -92, -128, -128,   79,   51, -102,
        -55,  -14,  -45, -108,  -32,   27,  -47,   58,  -56,   42,   20,   84,
        64,    6,  -39,  -47,   71,  -92,   97,   43,   95,  -95,  -56,  -66,
        2,   99,  -52, -124,  -33,  -82,  -72, -107,   86,  106, -101,   78,
        60,  -51,  106,  127,  127,   84,   60,  -20,    9,   14,   43,  127,
        -12,   -1, -128,  -12, -128,   54,  -84, -107,   18,  -33,   55,    5,
        28,  127,   65,  -11, -105,   35,   22,  -72,   52,   82,  -30,  124,
        122,  -59, -128,   19,   97, -128, -109,   18, -105,  125,  -81,   29,
        -128,    8,  -78,   10, -107,   66,  127,   67,   29,   50, -128,  -85,
        96, -123,  122,  118,  123, -100,  -43,  122,  108,   23,  -88,   84,
        -128,  -33,  -24,  -91,  127,  -17,   29,  -56,  126,  103, -114,   71,
        25,  -16,  127,  -31,   60, -118,   25,   28,   91, -108,   73,  -19,
        -33,   63,  -15,  -62,   30, -128, -108, -119,  -96,  -39,   23,  -99,
        127,   57,  -95,  -34, -128,  -73, -128,  127,   13,   -1,  -50,   74,
        -2, -127,   69,   25,  -44,   72,  113,   80,   49,   -4,  -15,  -95,
        -41,  124,  103,  -69,  -12, -103,    1,  115,  103,  -70,   59, -128,
        -34,  -17,   49,  -37,  -92,  -54,  -81, -106,   96, -128,  -23,  108,
        127, -122,    2,   83,  -33,  -89,  -47,  127, -128, -117,  -84,   -2,
        -128,   84,  -52,   87,  -58,   64,  -80,  -60,   28,   -6,  -58,   78,
        61,   11, -128,   86,   81, -120,  -84,  104,   85,  -16,  -39,  107,
        126,  -79,  -80,  -35,   99,  -80,  121,  127,  106, -119,   95,   61,
        -18,  -10,  100, -116,   99,  -10,    2,  -56,   78,   56,   43, -104,
        81,  -31,  -85,  102,  -82,  123,  115,   12,   -7,  -23, -104,  121,
        9,   -1,    1,  126,  127,  125,  127,   44, -105,  -81,   52,  -86,
        -52,   16,  117, -125,   17, -112,  -48,    4, -109,   16,  -59,   25,
        -82,  106, -128,   43,   48,   83, -126,  -66,  -94,  -83,    5,  100,
        55,  -89,  -95,  -13,  -10,  -31,   62, -100,   88, -123,  127,   71,
        -105,  127,   69,  127, -128,  -31, -105,   53,   83,  124,  -91,   61,
        -100,  -34, -128,    4,   98,  -79,  127,  127, -128,  -81,  127, -114,
        -59,  -79,   73,   49,   31,  -55,  101, -116,  125, -128,    1,  -94,
        -43,  -99,   -6,   19,  -97,  -27, -109, -108, -120,  -35,   50,   56,
        -18,  106,   28,  109,   55, -128,  -13,   66,   43,   89,  127,  127,
        96,  -67,   18,  -74,  -13,  104,  -81,  -13,   -4, -110,   35,  109,
        -96,  113,    8,  -44,    5,   39,  -73,   49,   83,   46,  102,   57,
        109,  114,  -56, -120,  -38,  -88,  -93,   37,  -71,   26,   22,   85,
        127,  127,   67,  127,   -8,  122,   46,    0,  -80,   87, -111,  127,
        -44,   17,    3,  112,  108,  112,  -26,  -60,  -81,  118,  -75, -128,
        -45,  -52,  -87,  -26,  -15,  -50, -128,   93,  126,  127,   31,  -57,
        -17,   21,   87,  102,  112, -127, -118,  125,  -40,  127,   57,    4,
        -83, -111, -112,  -88,   62,  -78, -128,   54,  -75,   84,  -21,   72,
        127,  -35,  -73, -117,  127,   69,   50,  -80,   81, -114, -128,   92,
        -107, -108,  105,   -4,  -54,   57,  -49,  127,  -82,  127,  -80,   43,
        63,   24,   23,  -23,   57,  -77,   42,  127, -128,   30,   13,  -41,
        -65,  -67,   18, -128, -128,   92,   64,  -77,   58,  101, -108,   36,
        55, -121,   54,   91,  -13,   24,   66,   50, -128,  -86, -128,   40,
        127,  127, -128,  -32,  -25, -113,  125,   14,  -15, -101,  -20,  -38,
        -31,   65,  -68, -119,  -76,   -4,  -73,   52,   87,   19,   30,   48,
        118,  109,   51,  -43,  -81,  -71,   20,  108,   10, -102, -128,   -4,
        -80,   38, -128,  -84,   43,  127,   21,  -16,  127,  -16,   33,  108,
        -114,   69,   52,  127,  -60, -124, -128,  -73,  127,  127,  116,  -68,
        -78,  -68,   41,   85,  -84,  113,   53,  -89,   59,  -95,  -48,    2,
        76, -106,  -59,   23,   31,  -32,  -43,  -67, -128,  -40,  -14,  127,
        41,  -91,  -59,  127,   35,   71,  -84, -128,  127,   93,  127,   40,
        -125,   77,  127, -128,  127,  -63, -125,  -86,  -93, -117,  125,   72,
        -4,  -53,  127, -106,   -8,  127, -106,  127, -108,  -47,   37,   97,
        127,  127,  -30,   71,   25,   44,  -34,  -71,   72,  125,   18,  127
    };
    float X_scale = 0.0068f;
    int W_idx_OC[4] = {0, 3, 5, 8};
    int16_t W_idx_IC[9] = {0, 2, 3, 0, 1, 2, 0, 2, 3};
    uint8_t W_idx_X[8] = {0, 1, 2, 0, 1, 0, 2, 1};
    uint8_t W_idx_Y[8] = {0, 2, 1, 2, 0, 1, 1, 0};
    int8_t W_val[8] = {-36, 58, 16, 40, -4, -37, 45, 9};
    float W_scale = 0.0164;
    float O[384];
    for (int i = 0; i < 384; i++) {
        O[i] = 0.0f;
    }
    float expected_O[384] = {
        -0.3313, -0.8573,  0.1299, -1.5092, -0.6949, -0.7165,  0.0442, -0.7104,
        0.5204,  0.4547, -1.0491, -0.4067, -0.4076, -0.0520,  0.4121, -0.8080,
        0.1895,  0.3515, -0.4118,  1.2194,  0.2761,  0.4722, -0.9596, -0.1288,
        -0.2517, -0.4412, -0.3607, -0.3309,  0.8508, -0.6164,  0.3071, -0.5563,
        -0.1157, -0.1694,  0.7847, -0.3840,  0.4829, -0.2214,  0.6442, -0.3923,
        0.9619, -0.5388,  1.0747, -0.6209,  0.6862,  0.3957, -0.5047, -0.5280,
        -0.8838,  0.0781, -0.5852,  0.0630,  0.2324, -0.9567,  0.2741, -0.3053,
        0.2261,  0.5783, -0.0404, -1.4720, -1.1198, -0.2070, -0.9150, -0.8513,
        -1.0336,  0.4897,  0.9091,  0.9401, -0.4388, -0.7721,  0.6772, -0.3775,
        0.5953, -0.0366, -1.0500, -0.2992, -0.2026, -0.8156,  0.3878,  0.1790,
        -0.5379,  0.1088,  0.8154, -0.6801,  0.4450,  0.1525, -0.7021,  0.5204,
        0.1191,  0.7232, -0.2070,  0.8526, -0.1566,  0.3188, -0.6624,  0.5289,
        -0.4464,  0.7064, -0.1117,  0.6270, -0.2600,  0.4605, -0.1050, -0.0722,
        0.0785,  0.8912,  0.4695, -0.2023,  0.5327,  0.3396, -0.2400, -0.4634,
        0.3946,  0.6817, -0.6949, -0.4484,  0.5498, -0.8878, -0.6373,  0.3019,
        0.0597, -0.7133, -0.2317, -0.0787,  0.2571, -0.6588, -0.4957, -0.4632,
        -0.4854, -0.3894, -0.1669, -0.2109, -0.2840,  0.4235,  0.5128,  0.4904,
        0.1261,  0.5473, -0.0413,  0.2490,  0.4549, -0.4069,  0.5150, -0.2324,
        -0.2660,  0.5294,  0.2526, -0.1220,  0.4047, -0.2840,  0.3176, -0.2261,
        -0.4226,  0.1045,  0.1005,  0.4222, -0.6312, -0.4859,  0.5567, -0.5312,
        -0.2046, -0.1987, -0.3212, -0.5612, -0.5765, -0.1274, -0.0031, -0.1969,
        0.0763,  0.2055, -0.4823,  0.5393,  0.5289,  0.6182, -0.5128, -0.5433,
        -0.0570, -0.5307,  0.2310,  0.3733, -0.1974,  0.0933,  0.6182, -0.5029,
        -0.5312, -0.0274, -0.2885, -0.0991,  0.3827, -0.0390,  0.6124, -0.1014,
        0.0906, -0.5276, -0.0211, -0.5182, -0.4383,  0.0682, -0.0188, -0.3921,
        0.2104,  0.3203, -0.4446, -0.4823, -0.4612, -0.4065,  0.1786, -0.3872,
        -0.0709,  0.1288, -0.1140,  0.4782,  0.5222,  0.1314, -0.3701, -0.1795,
        -0.0965, -0.0363, -0.1817, -0.5101,  0.5742, -0.5603,  0.3804, -0.5294,
        -0.4971, -0.0929,  0.4814, -0.0408,  0.2849, -0.0794,  0.1934, -0.6178,
        0.3804, -0.2912,  0.6169, -0.5980,  0.5325, -0.1454, -0.3450, -0.6016,
        -0.4845,  0.2575,  0.0978,  0.3347,  0.0637, -0.5253, -0.2364, -0.5998,
        0.1202,  0.3414,  0.3019, -0.5231, -0.3952, -0.3549, -0.5487, -0.3764,
        0.7235,  0.3467,  0.8447, -0.0132,  0.2085, -0.0482,  0.8148, -0.0635,
        -0.3444, -0.0594, -0.8873, -0.0362, -0.3994, -1.2064, -0.8424,  0.5161,
        -0.2148, -0.7772, -0.5087, -0.4086, -0.5744, -0.5602, -0.3124, -0.8000,
        0.1148, -0.4360, -0.3918, -0.9290, -0.6116, -0.0630, -1.0378,  0.0240,
        0.1316, -0.6754, -0.1855, -0.6843,  0.5142, -0.4173,  0.3310, -0.0552,
        -0.9358, -0.8402,  0.5271, -0.1707,  0.1181,  0.0187,  0.2140, -1.0096,
        0.6451, -0.4372,  0.6083, -1.2356,  0.1290, -0.1633, -0.0247,  0.1231,
        0.5026, -0.4554, -0.4889,  0.4675,  0.8854,  0.4723, -0.6286, -0.1492,
        -0.3922, -0.2991, -0.9751,  0.5214, -0.3290, -0.2774, -0.3825, -0.0979,
        0.4972,  1.1012,  0.0779, -0.2331,  0.8777,  0.5583, -0.9199, -0.4796,
        0.2914,  0.3249,  0.7586, -0.8122, -0.2742, -0.7713, -0.3269,  0.3153,
        -0.4039, -0.0415, -0.6123, -0.0711,  0.2898,  0.2324, -1.0266, -0.1041,
        -0.0022,  0.3398, -0.2908,  0.2993, -0.5218,  0.6910,  0.0776,  0.7898,
        -0.5167,  0.0827,  0.4666, -0.6898,  0.2185,  0.6855, -0.5733,  0.3291,
        0.1952, -0.5960, -0.2904, -0.0545,  0.7196, -0.0896, -0.6368,  0.4040,
        -0.0523, -0.1714, -0.3681,  0.5819,  0.1543, -0.3249,  0.5611, -0.2963
    };

    sparse::quantized_sparse_conv2d_vectorized_parallel_forward_stride_1(
        B, IC, OC, M, N, K, 8, 0,
        X, X_scale, W_idx_OC, W_idx_IC, W_idx_X,
        W_idx_Y, W_val, W_scale, O
    );

    for (int i = 0; i < 384; i++) {
        ASSERT_THAT(O[i], testing::FloatNear(expected_O[i], 0.01f));
    }
}

TEST(Test_Sparse, QuantizeSparseConv2dBackwardParallel1Stride1) {
    int B = 2;
    int IC = 2;
    int OC = 3;
    int M = 4;
    int N = 3;
    int K = 3;
    int8_t X[48] = {
        30, 126, 12, 66, 127, 70, 5, 79,
        15, -44, 66, 100, 114, -101, 67, -33,
        -126, -94, 90, 9, -33, 37, -70, -93,
        -29, 51, 6, -128, -75, -105, -55, -28,
        81, -45, 5, -11, 3, -81, -110, -2,
        -103, -27, -95, 108, -68, 70, -46, 80
    };
    float X_scale = 0.0069f;
    int W_idx_OC[4] = {0, 3, 5, 8};
    int16_t W_idx_IC[9] = {0, 2, 3, 0, 1, 2, 0, 2, 3};
    uint8_t W_idx_X[8] = {0, 1, 2, 0, 1, 0, 2, 1};
    uint8_t W_idx_Y[8] = {0, 2, 1, 2, 0, 1, 1, 0};
    int8_t W_val[8] = {-36, 58, 16, 40, -4, -37, 45, 9};
    float W_scale = 0.0164;
    int8_t dLdO[12] = {
        40,  46, -31, 39, -63, -14, -21, -11, 32, 4, -28, -25
    };
    float dLdO_scale = 0.0153f;
    float dLdX[48];
    for (int i = 0; i < 48; i++) {
        dLdX[i] = 0.0f;
    }
    float expected_dLdX[48] = {
        -0.360074, -0.413694, -0.29946, -0.0296362, -0.632913, -0.13903, 0.278321, -0.350383,
        0.264418, 0.232717, 0.368182, 0.552593, 0, 0, 0.357991, 0.0354288, -0.450347, 0.566949,
        0, 0, -0.3161, -0.278203, 0, 0, 0, 0, 0, 0, 0,
        0, 0.132767, 0.0208975, 0, 0, 0, 0, -0.0386989, -0.041365,
        0.165844, 0.19054, 0, 0, 0, 0, -0.12819, 0.16138, 0, 0
    };
    float dLdW_val[8] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
    float expected_dLdW_val[8] = {
        1.05244, 0.790756, 0.0375631, -1.25631, 0.504727, 0.136137, 0.219656, 0.00787375
    };

    sparse::quantized_sparse_conv2d_vectorized_parallel_backward_stride_1(
        B, IC, OC, M, N, K, 8, 0, X, X_scale, W_idx_OC, W_idx_IC, W_idx_X,
        W_idx_Y, W_val, W_scale, dLdO, dLdO_scale, dLdX, dLdW_val
    );

    for (int i = 0; i < 48; i++) {
        ASSERT_THAT(dLdX[i], testing::FloatNear(expected_dLdX[i], 0.01f));
    }

    for (int i = 0; i < 8; i++) {
        ASSERT_THAT(dLdW_val[i], testing::FloatNear(expected_dLdW_val[i], 0.1f));
    }
}

TEST(Test_Sparse, QuantizeSparseConv2dBackwardParallel2Stride1) {
    int B = 64;
    int IC = 2;
    int OC = 3;
    int M = 4;
    int N = 3;
    int K = 3;
    int8_t X[1536] = {
        -37,   57,  120,    4,   68,  113, -107,  -84,   21,   99, -128,  109,
        127,   54,  124,   18,   27,   87,  101,   89,  -19,  -90, -109,   82,
        -82,   57,   47,   43,   23,  -35,  127,   38, -111,   61,   58,   20,
        -3,   51,  -15,   19,   46,  -97,  -28,   41,   27,   18,  115,  -41,
        127,  -13,   34,    8,    7,  -24,   64,  -34, -128,   12,  127,   58,
        127, -100,  -83,   23,  -89, -128,   14,   71,  -28,  -43, -102,  123,
        -5,   21,   33, -107,  -34,  -78,   97,  -11, -128,   27,   36,   -9,
        99,  -15,   10,  111,   76,  -50,   91,  -11,  -49,  125,   -8, -116,
        -9,   78,   57,   29, -102, -128,   23,  -43,   83,  -45,  123,  127,
        -53,   15,  -48,  127, -128,  100,  127,   18, -108, -102,   90,   74,
        -78,   30,   87,  101,  106,   95, -123,  -80,  -28,  -82, -108,  115,
        20,  -73,  -12,   66,  -45,  -93,    8,  -77,  -58,    7, -128,   26,
        -56,  -25,  -63,  127,  -96, -116, -128,  -80,  121,  127,   90,  -61,
        -95,   24, -107,  -84, -108,  -57,   -9, -110,  -53,   76, -128,  -70,
        -59,  127,  -22,  -68,  -22,  -21,  -57,   52,  -22,   93,  -18,   42,
        -121,  127,  117,   33,  127, -110, -121,   79, -128,   10,  -24,  -24,
        120,   59,   91,  -99,   -7, -128,  116,  -24,  -99,  -82,   13,   97,
        -54,   28, -112, -102,  -73,   72, -128,   77,   26, -104,   -6,  -14,
        -77, -100,   76,  -76, -128,  -43, -122,   37,  -16,  -18,   -8,  -74,
        1,  127,   96,   89, -128,  -91,   60,  -79,   63,  118, -128, -120,
        127,  -30,  -69, -117, -128,   41,  109,   69,   73,  -55,  -27,  -50,
        -125,  -23,  -71,  127,   13,  -56, -100,   55,  -11,  127,  118,   23,
        11,   59, -128,  -94,  -72, -122,  -19,  -78,    2,   33,  -64,  -87,
        53,  -82, -124,  -10,  -16,  127,  117,   69,  -93,  -86,  -15,  127,
        121,  -73,  116,   73,   64,   14,  -66,    1,   33,  127,  -80,  -54,
        127,  124,  -84,  -66,  122,  -79,  124, -128,   63,   73,  -68,  -30,
        58,   14,  127, -121,  -35,  -10,   33,   12,  112,   -5,   15,   73,
        105,  -89,  127,  102,  -57,   72, -120,   10,  -50,   80,   92,  -41,
        27,  -59,   50, -110,  -37,   74,  -27, -128, -112,  -35,  127,  -87,
        -59,   59,  -18,  118,  -62,   80,  111, -128, -128,   51,  -57,   37,
        -125, -106,  -10,   -5,  119,   -5,   57,   90,   39,   72,  -92, -105,
        78,   -9,   67,  -40, -127,  127,  127,   37,   76,  127,   77,  -38,
        19,   -9,   24,  -62,   31,  -16,   51,   10,  104,  -56, -128,  -30,
        -100,   10,  -65,   60, -117,  107,  127,  121,   63, -128,  127,   31,
        -51,  121,  100,  106,  117,  -60,   30,  -72,  127,   28,  -27,   95,
        29,   -1,   27,   32,  -77,  -20,  -87,  117, -119,  -25, -125,  -56,
        115,  127,   33,   99, -118,  -22,   47,   47,  -62,  102,   26,   90,
        -61,  123,   72,  -96,  -37,   20,  110,  -13,  113,  114, -122, -128,
        127,  127, -128,  -94,   70,  -83,    2,  111,  -50,   25,  -20,    5,
        -26,  -34, -128,  127,   46,   -7,    9, -128,   21, -110,  -86,    8,
        127,   74,  -85,   44, -113, -117,  -94, -121,  -89,  -68,  -36, -107,
        127, -128,  127,  127,  -47,  -63,   33,   50,  -50,  127,  -62, -116,
        35,  -27, -122,  -27,  -38, -128,  113, -119,  -38,  -58,  -71,   24,
        -45,  127,   -4,  110,   14,   -3,    4,  -79,  127,    2,  -67,  -57,
        62,  -68, -128, -101,  -86,  -72,   86,  -26,  -80,   76,  127,  -31,
        69,  -51,  -14,  -65,   51,  -28,  104,  -70,   75,   18,   25,  -96,
        70,   33, -126,  -57, -115,  127,   90,  -14,  103,   15,    4, -128,
        -128,  -53,  -70, -127,  127, -128,   21,  105, -123,  -25,  120,   67,
        -53,  -19,  -39,   93,  -75,  -51,  -40,  127, -119, -112,   67,  -53,
        39,    4,  -49,  -78,   55,  -90,   30, -128,   56,  -26,   26,  112,
        -41,   43,  -23,   25,  -44,  -89,   72,   98,  -21,  113, -105,  118,
        -47, -128,   22,  -56,   15,  -86,  -11,  -28,   19, -101,  127,  -80,
        33,    7, -100,  122,   65,  -24,  -80,   54,   52, -102,  116,   90,
        -20,  -89,  -79,  117,  -33,    6,   97,  -19,    5,   25,  -32,  127,
        -128,   78,   68,  127, -114,   78,   44,  -95,  -75,   86,  -38,  -15,
        78, -128,  123,    2, -118,  -50,   34,   81,  -40,  -31, -113,  -20,
        -116,  100,   31,   21,    8,    1, -103,  -93,  -84,   19,   33,  127,
        70,  102,   86,  -62,   57,  127,    5,   53, -126,  -97,  111,  -29,
        68,   55,  -44,   27,   34,   14,  -69,  127, -128,  120,  127,  -81,
        125,  127, -128,  114,  -90,  116,   23, -107, -104,  -58, -128,  108,
        38,   97,  -81,    3,  -59, -128,  -21,  -13, -109,   71,  -79,    3,
        -128, -121,  109,  113, -107,    6,  -29,  114,   75,  -73,   45,  125,
        -52,  -76,  -92,  -39, -128,   21,  -27, -110,  112,  -73,  120, -122,
        1,  117,    6,   -5, -107,  -29,  -31,  118,  -83,  -63,  -80,  117,
        84,  -30,  127,  127,  117,  -48,   97,   43,   31,   31,   11, -112,
        12,  -93,   54,  -38, -128, -122,   76,   20,  127,   12,  -41,   42,
        -56,   86,  -75, -127,  -56,   -2, -109,  110, -104,  -42, -128,  -82,
        -50,   41,   51,   86,  -51,  114,  127,  -74,  -60,  127,   55,  101,
        -128,  -48,  -16,  -15,   -7,   26,   95,  -73,  -15,   72,  -30,   42,
        -99,  -68, -128,   82,  -36, -127,  125,  -93,   36,  -86,   -2,   12,
        5, -128, -124,   98,   33,  -59,  127,  -50,   24,   37,  -55,   82,
        59,   59,   18, -112,  116,  -37,   62, -107,   76,    7,  125,    9,
        39,   15,  -77,  -55, -121, -128, -128, -111,  -97,  -52, -119,   25,
        -42, -128, -103,   64,  105,  106,  -47,   32,   99,   -1,   94, -100,
        -12, -122,  127,  -97,  127,  -69,  -28,   68, -119,   31,   76,  114,
        -35,  127,  -63,   66, -121, -123,   44,  -98,  -55,  -87,  -69,   61,
        -89, -119,    7,  127,   -6,  -13,    2,  122,  -73,   79,   49,  127,
        65,  -38,   85,  -99, -128,  -61,   66,  -68,  -15,  -59,   33,   98,
        -29,   20,   36, -114,   69,   38, -128,  108, -128,   34,   30,   35,
        -9,  124, -108, -116,  -50,    0,   77,   37,   62,   81,  127,    9,
        8,  -12, -128,  -58,  119,   57,  127,  -79,  -25,  -10, -128,  120,
        75, -126,  -60,   27, -128,   10,  -14,  127, -107,    1,   39,   12,
        -88,   29,  -28,  -26,   63,  123,  -31,  -69, -128,   78,  -13,   97,
        72, -128, -113,  127,   73,   48,  -17,  127,  124,  111,   70,   45,
        112,  -54,  -46,   22,   46,    0,  -47,   58,  -24, -128,  -50, -103,
        -63, -122,  -50,  -63,   87,   58,  116,  -87,    3,  -22,  -79, -123,
        121,  -44,   57,   71,  -22,  -37,  120,   83,  116,   68,   32, -121,
        -32, -101,  101,   53,  100,  115,   16,  105,  127,  -66,  -35,   46,
        -22, -120,  -90,  127, -127,   71,   -4,  105,   20,  127,  117,  127,
        -57,   75,  111,  108,   50,   -1,   -3, -110,  103,  -57,   18,  -12,
        -120, -128,  -30,   -4,   87,  -89,  -94,  -89,   89,  -67,  108,  109,
        23,  -97,  108,  -34,   12,   65, -115,  101,  109,  -49,   16,   87,
        118,   56,  127,   85,   17,   51, -100,  -71,   34,   13,  -90,  -73,
        -118,   59, -126, -103,  -94, -128,  -70,   96,   81,   86,  -88,   66,
        -20,  115,  127, -116,   50,   88,  121, -128,   54,  -76,   54,  119,
        -33,   65,   71,   36,  113,  -92,   28,  -59,    8,  123,  104,  127,
        -53,   13,   29,   50,  127,   14,  -31,   23,  -24, -118,   48,  108,
        102, -103,   36,   29,   28,   66,   87,  110,   19,  -23,  -53,  -22,
        -74,  -14,  -78, -111,    2,   28,  -16,  127,  -28,   69,  -96,  113,
        -60,  101,  -66,   49,   80, -106,   31,  -51,  -90,  -28,  -97,  -61,
        109, -128,  106,   -4, -128,    6,   38,  -45,  109,  -61,   31,  -86,
        94,  -95,   60,   21,   70,   97,   53,  -84,  -47,  -83,   21,   13,
        -44,  111,   37,   24,   93,  -42,   -9,   46,   95,   29, -111, -122,
        103,  111,   97,   27,   10,   52,  109,  108,  -51, -114,  -75,   87,
        -123,  -40,   76,   45,   27, -114,   54,  -36,   58,   -8, -128,   14,
        127,  -93,  124, -128,   38,  124,  -59,   34,   64,  -61,  127,  102,
        -25,   26,  -91, -128,   26,   35,   -3,  -77,  -31,   47,    5,  127,
        -21,  -57,   76,   34,   89,  -74,   66,   33,  127,   45,   35, -125,
        -96,  118, -123,  -53,   68,   73,  119, -128,  -87,  109,  -32,  -54,
        44,  127,  -63,   19,  -77,  -79,   30,   24,   19,  -21,  -28,   87,
        -73,  -83,    3,   -9,   18,  -72,   58,  -30,   37,  -79,   94,   64,
        -58,   79,  -39,  -11,  -40,   -4,   53,  -80,  -62,  -91,  -82,   71,
        -128,  -19,  -29,   82,   71,    8,   39, -115,  127,   64,  127,   23,
        -127,   27,  -57,  -42,   78,   76, -128,  -26,   77,   -1,   37,  125,
        123,  -63, -128, -128, -118,   34,  127,   54,   57,  -20,   97,  127,
        -106, -104,   29,   27, -128,   68,   45, -114, -118,  -44,  -53,   39,
        -80,  127,   21,   21,   45,   53,   58,   51,   81,   62, -128,  108,
        -15, -113,  -12,  -17,  -22,  -78,   24,   26,  127, -128,  122,   50,
        99,  -52, -125,   66,  -51, -128,   -4,   13,   -8, -105,  -44,  107,
        -46,   69,  -47,    6,   71,   17,   92,   16,  -66, -119,   38,  -77,
        -28,  117, -128,   74,  -68,  -47,  118,  -71,    8,   27,   37,   62,
        33,  -37,   95,   31,   47, -111, -128, -128,  120,   84,   91,  -55,
        127,  -66,  125,  -69,  -18,  -12,  100,  112,    7,   41,   80,  127,
        -31,   14,  127,  -25,  -72,   99, -113,   48,  -92,  113,  -34,   60,
        119,  127,   96,  -92,  -16,   49,  -79,  120,  -87,   16,  119,  -37,
        -110, -101,  -15,  -37,   20,  -26,  -93,   64,  118, -106,   80,  -64,
        122,  -38,   75, -103,  118,  -38,  -17,  -66,   20,   99,  114,  -98,
        98, -128,  121,   20,   -2, -106,   52,  -46,  -83,  -92,  -97,  -78
    };
    float X_scale = 0.0070f;
    int W_idx_OC[4] = {0, 3, 5, 8};
    int16_t W_idx_IC[9] = {0, 2, 3, 0, 1, 2, 0, 2, 3};
    uint8_t W_idx_X[8] = {0, 1, 2, 0, 1, 0, 2, 1};
    uint8_t W_idx_Y[8] = {0, 2, 1, 2, 0, 1, 1, 0};
    int8_t W_val[8] = {-36, 58, 16, 40, -4, -37, 45, 9};
    float W_scale = 0.0164;
    int8_t dLdO[384] = {
        -16,  23,   4, -39,  30, -34,  17,  50, -31,  21, -51, -22, -19, -46,
        15,  23,  15,  47,  26,  45, -14, -21,  18,   7,  -3,  23,  -5,  50,
        -49,  21,  55,  40,  40,  11, -47,  -3, -43, -31, -37,  57,  47, -50,
        17,  13, -36,  49,  36, -48,  12, -44, -45,  -3,  31,  -9,  33, -53,
        25, -17, -44,  58, -55, -31, -42,  46, -27,  36,  -1,  13,  32,  41,
        1, -22,   4,  -4,   6,  39, -23, -35,  30, -17,  42,  15,  -5,  29,
        -27,  44, -31, -48, -52,  -3, -36,  28, -34,   2,  22,  17, -49,   9,
        0, -12,  13,  48,  20,  49,  35, -48, -42, -51,  54, -30,  28,  45,
        -7,  22,  32, -41,  16,  33, -40,  33, -27,  10, -49,  55,   4,  28,
        -37,  10,  21,  27, -51,   5,  50,  42,  33,  14,  18,  37,  19,  -8,
        -21, -31,   9,   1,  -1, -55, -55,  38, -56,  57, -41,  10, -52,  25,
        25,   6, -38,  17,  40, -38,  32,  54,  24,   9, -22, -37,   6,  49,
        55, -42,  14, -15, -11, -16, -30,  15,  50,  12, -45, -57,  52, -10,
        53, -22, -30,  51,  18,  16,  54, -41,  39,  36, -13, -34, -41,  36,
        -20, -15,  14,  32, -18,   8,  22, -21,  -8, -37,  20, -18, -48,   3,
        19, -46,  45,  38, -10,  -9, -22,  47,  21, -45, -54,  57, -43, -18,
        -30, -33,  46,   1,  20, -20, -24,   7,   8, -15, -34, -36,  -7,  31,
        14,  11,  23,  10, -33,  -5, -21, -19,  19,  10,  19,  23, -43,  23,
        -40,  48, -56, -37, -48, -37,  17,   5, -22,  15,  48, -30,  53, -30,
        -7, -37,  57, -22,  54, -50, -42,   1,  -5,  51,  10,   8, -38, -26,
        54,   7,   4,  43,   7,  35,  34,  28,  24,  -1,  27, -41,  11,  24,
        13, -39, -47,  34, -52,  33,  10,   8,  18,  24, -23,  31, -36, -19,
        -17, -47,  58,  18,  43, -55,  33,  54,   0,  32, -51, -32, -45,   4,
        28,  53,  56, -22,  48, -29, -20, -27, -36, -24, -52, -14,  -5, -47,
        -3, -52, -37,  49,  48,  16, -46, -38,  43, -48,   3, -48, -54,  33,
        -14,  -9, -13, -23, -10, -28,  36,  42,  18,  14, -19, -24,  24,  33,
        -47, -45,  51, -41,  31, -32, -46,  -9,  42,  -2, -36,  55,  -2, -54,
        -39, -15, -12,  34,  -4, -14
    };
    float dLdO_scale = 0.0172f;
    float dLdX[1536];
    for (int i = 0; i < 1536; i++) {
        dLdX[i] = 0.0f;
    }
    float expected_dLdX[1536] = {
        0.165384, -0.231103, -0.0469253, 0.394783, -0.299875, 0.343218, -0.177071, -0.507016, 0.310858, -0.217653, 0.5096, 0.223761, 0.194807, 0.465905, -0.153579, -0.232395, -0.149468, -0.474656, -0.256415, -0.454277, 0.138662, 0.217007, -0.18359, -0.0717681, 0.0299523, -0.241733, 0.0516824, -0.507075, 0.496856, -0.207787, -0.558346, -0.399012,
        -0.403945, -0.109943, 0.471837, 0.0357078, 0.434367, 0.314852, 0.369764, -0.583071, -0.478767, 0.505078, -0.167322, -0.132025, 0.367004, -0.499675, -0.366886, 0.492275, -0.120984, 0.451105, 0.455686, 0.0351205, -0.309977, 0.094849, -0.339283, 0.530802, -0.251541, 0.177658, 0.447875, -0.579313, 0.556643, 0.311386, 0.423091, -0.461677,
        0.502784, 0.393287, -0.176967, -0.0462763, 0.231442, -0.159416, -0.502905, 0.315917, -0.549667, 0.313913, 0.0748194, 0.379259, -0.599527, 0.229316, -0.555315, 0.516873, 0.44175, -0.00941315, 0.0468836, -0.530173, -0.108403, -0.079617, 0.399118, 0.265329, -0.567036, -0.0791919, -0.0395352, -0.44424, -0.0725116, -0.364198, -0.361161, -0.292354,
        -0.247475, 0.0118423, -0.280451, 0.43258, -0.118788, -0.253851, -0.135003, 0.405676, 0.49246, -0.35521, 0.549303, -0.345736, -0.100387, -0.0844147, -0.180672, -0.254459, 0.246321, -0.322537, 0.371728, 0.194093, 0.174234, 0.483472, -0.606632, -0.189235, -0.445758, 0.572502, -0.336869, -0.560356, -0.00273285, -0.335594, 0.537157, 0.331221,
        0.232416, 0.297209, -0.567726, 0.0626945, 0.574481, 0.480308, 0.376167, 0.157064, 0.200544, 0.410728, 0.216021, -0.0924678, -0.236416, -0.355509, 0.106961, 0.00445944, -0.01187, -0.625371, -0.616059, 0.424237, -0.640651, 0.651472, -0.456109, 0.112666, -0.588187, 0.27537, 0.283174, 0.0742366, -0.422925, 0.193395, 0.456174, -0.429877,
        0.361149, 0.607271, 0.272944, 0.106567, -0.246843, -0.416105, 0.0666949, 0.54438, 0.625043, -0.467782, 0.160081, -0.178968, -0.117716, -0.177459, -0.337212, 0.177132, 0.56425, 0.136144, -0.505884, -0.63606, 0.583924, -0.108797, 0.59304, -0.25327, -0.336557, 0.584383, 0.208676, 0.175099, 0.607992, -0.460634, 0.435582, 0.399644,
        0.278087, -0.36718, 0.00969045, -0.141128, -0.328066, -0.415985, -0.0133317, 0.221882, -0.0331237, 0.0356491, -0.0651903, -0.393139, 0.227226, 0.350559, -0.306277, 0.177071, -0.426615, -0.145357, 0.05133, -0.299053, 0.273799, -0.443294, 0.313912, 0.483818, 0.531683, 0.0314793, 0.36812, -0.281023, 0.345097, -0.0209079, -0.217595, -0.173077,
        0.494859, -0.0879775, 0.0046984, 0.117754, -0.131555, -0.491629, -0.202442, -0.490043, -0.352497, 0.482291, 0.41757, 0.513535, -0.547599, 0.302694, -0.278321, -0.460678, 0.0737062, -0.226874, -0.325247, 0.41528, -0.157808, -0.33617, 0.405237, -0.334115, 0.269571, -0.100487, 0.488457, -0.548773, -0.04393, -0.278674, 0.366064, -0.104539,
        0.468532, -0.0433005, -0.289743, -0.552886, -0.581915, 0.229195, -0.492034, 0.305533, 0.203445, 0.284945, 0.38181, 0.256949, 0.540254, 0.141379, 0.0525314, 0.497682, 0.0288467, 0.542805, 0.38685, -0.514444, -0.500537, -0.175024, 0.483289, 0.399178, -0.454503, 0.498593, -0.0299399, 0.499869, 0.564242, -0.34191, 0.149882, 0.0912165,
        0.136521, 0.242434, 0.103909, 0.289925, -0.381202, -0.44011, -0.188142, -0.145388, 0.195004, 0.252819, -0.243709, -0.343246, 0.489241, 0.469261, -0.533452, 0.42845, -0.330371, 0.341971, 0.478431, 0.0986862, -0.436224, 0.0239884, 0.383814, -0.577907, 0.0163364, 0.570012, 0.413571, 0.157291, 0.130266, -0.3594, 0.0411142, 0.1398,
        -0.414963, -0.0149464, -0.382541, -0.242689, 0.253922, -0.72488, 0.445678, 1.18344, -0.71062, 0.447534, -0.583241, -0.602481, -0.399944, -1.16493, 0.477443, 0.18054, -0.297413, 0.796953, 0.624954, 0.214352, 0.286634, 0.0799871, 0.17561, 0.00444391, -0.305342, 0.914341, 0.159479, 0.313884, -1.41306, 0.974506, 0.418224, 0.447189,
        0.321388, -0.195844, -0.243159, -0.0416456, -0.473377, -0.739445, -0.871187, 1.02019, 0.860135, -0.984094, -0.110935, -0.187919, -0.667292, 1.16376, 0.759111, -0.669054, 0.452245, -0.614636, -1.116, -0.106669, 0.270924, -0.367068, 0.764156, -0.744838, 0.628871, -0.0293429, -1.20684, 1.19215, -1.34598, 0.0455802, -1.32171, 0.330467,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.601055, -0.470158, 0.211556, 0.0553212, -0.276679, 0.190575, 0.601201, -0.377665, 0.657103, -0.375269, -0.0894432, -0.453387, 0.716707, -0.274138, 0.663854, -0.617899, -0.528092, 0.011253, -0.0560472, 0.633798, 0.129591, 0.0951786, -0.477127, -0.317189, 0.677866, 0.0946704, 0.0472626, 0.531069, 0.0866844, 0.435382, 0.431752, 0.349496,
        0.295845, -0.014157, 0.335267, -0.51713, 0.142006, 0.303468, 0.16139, -0.484968, -0.588713, 0.424637, -0.656667, 0.413312, 0.120008, 0.100914, 0.215985, 0.304194, -0.294466, 0.385579, -0.444385, -0.23203, -0.208289, -0.577969, 0.725201, 0.226222, 0.532884, -0.6844, 0.402712, 0.66988, 0.003267, 0.401188, -0.642147, -0.39596,
        -0.449967, 0.594128, -0.0156799, 0.228357, 0.530838, 0.673097, 0.0215718, -0.359023, 0.0535969, -0.0576832, 0.105483, 0.636131, -0.367671, -0.567234, 0.495581, -0.286515, 0.690298, 0.235199, -0.0830562, 0.483893, -0.44303, 0.717286, -0.507935, -0.782857, -0.860307, -0.0509361, -0.595648, 0.454719, -0.558396, 0.0338307, 0.352086, 0.280053,
        -0.800723, 0.142355, -0.0076024, -0.190535, 0.212867, 0.795496, 0.327568, 0.79293, 0.57037, -0.780386, -0.675663, -0.830942, 0.88606, -0.489785, 0.450347, 0.745415, -0.119263, 0.367101, 0.526276, -0.671957, 0.255346, 0.543952, -0.655707, 0.540626, -0.436188, 0.162596, -0.790365, 0.88796, 0.0710824, 0.450917, -0.592322, 0.169153,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.560109, 0.0517638, 0.346375, 0.66095, 0.695653, -0.273992, 0.588205, -0.365251, -0.24321, -0.340639, -0.456436, -0.307171, -0.64585, -0.169013, -0.062799, -0.594957, -0.034485, -0.648899, -0.462462, 0.614995, 0.598369, 0.209233, -0.577751, -0.4772, 0.543338, -0.596046, 0.0357918, -0.597571, -0.674527, 0.408738, -0.179177, -0.109045,
        -0.163205, -0.289819, -0.124219, -0.346592, 0.45571, 0.526132, 0.224915, 0.173804, -0.233119, -0.302234, 0.291344, 0.410335, -0.584866, -0.56098, 0.637718, -0.512193, 0.394944, -0.408811, -0.571943, -0.117975, 0.521486, -0.028677, -0.458832, 0.690862, -0.0195294, -0.681424, -0.494406, -0.188034, -0.155727, 0.429647, -0.0491502, -0.167125,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.138598, -0.120135, 0.0981311, 0.00421722, -0.111276, -0.0123166, 0.0768213, -0.0882065, 0.105352, -0.113509, -0.0390505, -0.0773524, 0.161131, -0.0163448, 0.116148, -0.118671, -0.0998304, 0.0656627, 0.051841, 0.0781762, 0.0898552, -0.0479507, -0.0449648, -0.0721273, 0.189424, -0.00985278, -0.0197155, 0.0940662, 0.059535, 0.063658, 0.0362769, 0.110523,
        0.0199251, -0.0643802, 0.0364251, -0.109761, 0.0522371, 0.100318, 0.0241042, -0.14807, -0.17611, 0.128748, -0.141892, 0.0972509, 0.0349149, 0.0373291, 0.0755685, 0.0402104, -0.11364, 0.0599436, -0.0336454, 0.0202029, -0.0991511, -0.0995293, 0.0785208, 0.0690022, 0.136132, -0.190288, 0.0558557, 0.110381, -0.0611198, 0.123536, -0.167093, -0.116342,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.0921963, 0.0493974, 0.112829, 0.0862282, 0.156584, -0.0352048, 0.096373, -0.10675, -0.0254459, -0.0748555, -0.111835, -0.034353, -0.114961, 0.00940896, -0.0352649, -0.0939751, 0.0481674, -0.127086, -0.109811, 0.170543, 0.0625867, -0.00375186, -0.0982023, -0.079957, 0.13004, -0.16717, -0.0178409, -0.0628801, -0.0671939, 0.0133789, 0.0149968, -0.000709618,
        0.00251484, -0.0174935, -0.0766062, -0.0679492, 0.0638842, 0.124017, 0.0707435, 0.0254605, -0.0532788, -0.040881, 0.0945018, 0.119285, -0.104439, -0.143405, 0.105207, -0.110941, 0.0495143, -0.0899229, -0.0709706, -0.0175096, 0.123195, 0.0162051, -0.109636, 0.120595, -0.0262672, -0.156585, -0.0456266, -0.0618492, 0.0154274, 0.0264035, 0.0552984, 0.0103295,
        -0.0761728, 0.106442, 0.0216129, -0.18183, 0.138117, -0.15808, 0.0815557, 0.233523, -0.143176, 0.100247, -0.234713, -0.103061, -0.0897249, -0.214588, 0.0707358, 0.107037, 0.0688423, 0.218618, 0.1181, 0.209232, -0.0638651, -0.0999498, 0.0845583, 0.0330551, -0.0137955, 0.111338, -0.023804, 0.23355, -0.228843, 0.0957029, 0.257164, 0.183778,
        0.18605, 0.0506376, -0.21732, -0.0164464, -0.200062, -0.145015, -0.170307, 0.268552, 0.220512, -0.23263, 0.0770655, 0.0608084, -0.169035, 0.230141, 0.168981, -0.226733, 0.055723, -0.207771, -0.209881, -0.0161759, 0.14277, -0.0436858, 0.156268, -0.244478, 0.115855, -0.0818263, -0.206283, 0.266821, -0.25638, -0.143419, -0.194868, 0.21264,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.128082, 0.169117, -0.00446325, 0.0650012, 0.151101, 0.191595, 0.00614035, -0.102195, 0.0152562, -0.0164193, 0.0300255, 0.181073, -0.104656, -0.161461, 0.141066, -0.0815557, 0.196491, 0.0669487, -0.0236417, 0.137739, -0.126107, 0.204173, -0.144582, -0.222838, -0.244884, -0.0144988, -0.169549, 0.129434, -0.158946, 0.0096298, 0.10022, 0.0797163,
        -0.227923, 0.0405209, -0.002164, -0.0542352, 0.060592, 0.226436, 0.0932414, 0.225705, 0.162354, -0.222135, -0.192326, -0.236525, 0.252214, -0.139416, 0.12819, 0.21218, -0.0339477, 0.104494, 0.149803, -0.191271, 0.0726833, 0.154834, -0.186645, 0.153887, -0.12416, 0.0462826, -0.224975, 0.252755, 0.0202334, 0.128352, -0.168603, 0.048149,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };
    float dLdW_val[8] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
    float expected_dLdW_val[8] = {
        2.72295, -4.18539, -3.24589, -0.0441055, 0.979106, 3.15714, -5.1034, -0.283994
    };

    sparse::quantized_sparse_conv2d_vectorized_parallel_backward_stride_1(
        B, IC, OC, M, N, K, 8, 0, X, X_scale, W_idx_OC, W_idx_IC, W_idx_X,
        W_idx_Y, W_val, W_scale, dLdO, dLdO_scale, dLdX, dLdW_val
    );

    for (int i = 0; i < 1536; i++) {
        ASSERT_THAT(dLdX[i], testing::FloatNear(expected_dLdX[i], 0.025f));
    }

    for (int i = 0; i < 8; i++) {
        ASSERT_THAT(dLdW_val[i], testing::FloatNear(expected_dLdW_val[i], 0.3f));
    }
}

TEST(Test_Sparse, QuantizeGroupedSparseConv2dForward1Stride1) {
    int B = 2;
    int IC = 2;
    int OC = 3;
    int M = 4;
    int N = 3;
    int K = 3;
    int8_t X[48] = {
        30, -29, 126, 51, 12, 6, 66, -128, 127, -75,
        70, -105, 5, -55, 79, -28, 15, 81, -44, -45,
        66, 5, 100, -11, 114, 3, -101, -81, 67, -110,
        -33, -2, -126, -103, -94, -27, 90, -95, 9, 108,
        -33, -68, 37, 70, -70, -46, -93, 80
    };
    float X_scale[1] = {0.0069f};
    int W_idx_OC[4] = {0, 3, 5, 8};
    int16_t W_idx_IC[9] = {0, 2, 3, 0, 1, 2, 0, 2, 3};
    uint8_t W_idx_X[8] = {0, 1, 2, 0, 1, 0, 2, 1};
    uint8_t W_idx_Y[8] = {0, 2, 1, 2, 0, 1, 1, 0};
    int8_t W_val[8] = {-36, 58, 16, 40, -4, -37, 45, 9};
    float W_scale[1] = {0.0164};
    float O[12] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
    float expected_O[12] = {
        0.3548f, -0.3768f, -0.2982f, 0.9733f, 0.0695f, 0.0282f, 0.2771f, -0.4338f,
        -0.1594f, -0.3594f, -0.1044f,  0.2436f
    };

    sparse::quantized_grouped_sparse_conv2d_vectorized_forward_stride_1(
        B, IC, OC, M, N, K, 8, 0,
        X, X_scale, 64, W_idx_OC, W_idx_IC, W_idx_X,
        W_idx_Y, W_val, W_scale, 64, O
    );

    for (int i = 0; i < 12; i++) {
        ASSERT_THAT(O[i], testing::FloatNear(expected_O[i], 0.01f));
    }
}

TEST(Test_Sparse, QuantizeGroupedSparseConv2dForwardParallel1Stride1) {
    int B = 2;
    int IC = 2;
    int OC = 3;
    int M = 4;
    int N = 3;
    int K = 3;
    int8_t X[48] = {
        30, -29, 126, 51, 12, 6, 66, -128, 127, -75,
        70, -105, 5, -55, 79, -28, 15, 81, -44, -45,
        66, 5, 100, -11, 114, 3, -101, -81, 67, -110,
        -33, -2, -126, -103, -94, -27, 90, -95, 9, 108,
        -33, -68, 37, 70, -70, -46, -93, 80
    };
    float X_scale[1] = {0.0069f};
    int W_idx_OC[4] = {0, 3, 5, 8};
    int16_t W_idx_IC[9] = {0, 2, 3, 0, 1, 2, 0, 2, 3};
    uint8_t W_idx_X[8] = {0, 1, 2, 0, 1, 0, 2, 1};
    uint8_t W_idx_Y[8] = {0, 2, 1, 2, 0, 1, 1, 0};
    int8_t W_val[8] = {-36, 58, 16, 40, -4, -37, 45, 9};
    float W_scale[1] = {0.0164};
    float O[12] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
    float expected_O[12] = {
        0.3548f, -0.3768f, -0.2982f, 0.9733f, 0.0695f, 0.0282f, 0.2771f, -0.4338f,
        -0.1594f, -0.3594f, -0.1044f,  0.2436f
    };

    sparse::quantized_grouped_sparse_conv2d_vectorized_parallel_forward_stride_1(
        B, IC, OC, M, N, K, 8, 0,
        X, X_scale, 64, W_idx_OC, W_idx_IC, W_idx_X,
        W_idx_Y, W_val, W_scale, 64, O
    );

    for (int i = 0; i < 12; i++) {
        ASSERT_THAT(O[i], testing::FloatNear(expected_O[i], 0.01f));
    }
}

TEST(Test_Sparse, QuantizeGroupedSparseConv2dForward2Stride1) {
    int B = 64;
    int IC = 2;
    int OC = 3;
    int M = 4;
    int N = 3;
    int K = 3;
    int8_t X[1536] = {
        97,    1,   19,   94,   59,  117,  -20,   -5,  -73,  -32,   71,  -48,
        -98, -105,  -86,   16,  -96,  -35,   51,  -94,   78,  -29,   95,   26,
        49,   20,    2,  -59,   10,  -11,  107,  -10,  -75,  -33,    6,   48,
        -32,   75,  -92,  -89, -100,  -20,  -37,   -3,   -6,  -65,   -8,  -77,
        25,   68,  108,  117,   14,   45,  -70,  -76,   12,   14,   92,   84,
        88, -103,    0,   81,

        -88,   26, -128,  -80,   54, -128,  -13,  120,   13, -112,  127,   99,
        17,  127,   86,  -33,  -82,   50,   80,   48,   61,   41,  -96,  127,
        -49,  -12,  -50,   63,  110,  125,  127,  -89,  -13,  127, -113,  127,
        5,  -65,  102, -124,  127,  114,  -73,  127, -128,  -35,   80,   92,
        -41,  -39,  -97,  127,  -78,  108,  105,  -31,  -39,  127,  104,  -41,
        -31,  -50,  127, -128,

        -113,  -80,  -42,  -43,  -69,   95,  127,  108,   29,  127,  -21,   44,
        104,  -96,  127,  -38,  -44,  101,   49,  -14,   95,  -57,   58,  -39,
        -100,   19,   19,   80, -128, -103,  120, -116,  -30,  -32,  -78, -110,
        -118,  -28,   11,  -44,   21,   32,  -99,  115,  127,  127, -100, -115,
        -15, -105,   47,   72,  -38,    8,  127, -116, -120,  -10,  -58,  -30,
        91,   -3,  122,  -24,

        101, -112,   30,  -19,  -37,  115,   24,   90,  -11,   40,   95,  -85,
        -110,   -6,  -48,  124,   88,   47,   14,   -8,   23,  -50,    0,   23,
        -44,  -98,  -69,  -70,  123,  -98,   -3,  -42, -125,  -55,    3,   10,
        119,  -73,   64,   63,   82,  -42,   89,   46,   19,  110,    2,  -31,
        -59,  -25,  -79,   -8,   97,   97,   32,  -41,  -63,   46,   39,  -60,
        63,   11,  121,  -56,

        32,  -43,  127,  -32,  100, -112,   45,  120,  -79, -109, -128,   -1,
        -125,    8,   77,  -27, -126,   10,  -61,   25,  -96,   10,   35,   89,
        29,   37,   32,   32,  -84, -128,  111,  112, -127,  -99,   29,  -97,
        72, -107,  127,  -68,  127,  127,  -20,   67,   78,  -75,   56,   92,
        61,   96,  -40,   -9,  -64,   81,   54,   90, -128, -128,   15,  -22,
        -73,  -37,   38,  -32,

        14, -107,    6, -118,  -88,    4,   -8,  -80,   33,   68,  -96,  -97,
        -102,  -74,   25,  -76,  -10,   34,  -35,   92,   98,   19,  -76,  -28,
        -15,  -16,  -46, -106,  120, -123,   84, -128,  -94,  -30,  110,   -2,
        49,   -5,   46, -116,   67,  -63,  117, -126,  124,  -18,  -79, -120,
        -109,   50,    8,   70,   22, -116,  -37, -111,   13,   63,   73, -123,
        -87,  -80, -106,  -72,

        82,  -20,  -11,  -77,    5,  107,   49,   -8,  -17,   88,   44,  -15,
        -17,   15,  -12,  107,   28,  -33,   25,   95,  -24,  -89,  -16, -116,
        -59,   30,  -45,   96,  -88,   23,  101,  114,   55,  115,  -58,   42,
        102,  107,   42,  -51,  -62,  -42,   68,  126,  -17,   87,   -2, -102,
        72,  -87,   65,    2,   23,  -92,  -46,   -8, -117,    8,   61,  -28,
        64,  -72,  121, -111,

        127,  127,  121,  -93,  127, -128,  127,   92,  -97, -128,  -81,  124,
        -127, -128, -128,   80, -128, -128,  -48, -104, -128, -128, -128, -111,
        19, -128, -128, -128,  -99,  124, -128,  -72,  -13,  -74, -128,  -70,
        127, -128,  127, -128, -128,  -88,   69,   96, -128,   -2,  127, -128,
        127, -128,   78, -128,  -57,  109,  127,   39,  127,   33,  -37,  122,
        127,   68,  -17, -128,

        -74,   25,  127,  123,  -83,  -11,  127,   16,   85,    4,  -69,  -68,
        -82, -127,   41,   85,  -41,   42,  126, -115,   48,  -39, -113,  100,
        8,   56,  -81,   47,   48,    7,  -64,   48, -117,   54,   18,  117,
        25,  -15,   22,   35,   34,  102,  122,  -26,  127,  104,  -46, -128,
        33,  112, -126,  -51,  110,  -95,  -99,   33,  -13,  -53,  -17,  -73,
        100, -116,  -11,  -81,

        114,  114, -106,  -86,  -93,   93,  -47,   56,  -29,  105,   96,   71,
        58,   -5,  126, -122,   98,  -65,  104,  114,  -50, -116,  -46,  -20,
        -11,  -70,   26,   -9,   74,   12, -113, -106,   49,  -13,  -16,  111,
        11,   54,  -54,   67,  119,  102,  -88,   17,  -69,    1,  -69,  -46,
        121,   21, -123,  -36,   48,  -43,  127,   86,  -17,  -10,   25,   79,
        35,   23,   23,  -23,

        -50, -118, -128,  125,   15, -128,  -37,   93,   69,  127,  -95,  -64,
        110,  118, -116, -128,  -65,   69,  127, -128, -128, -128,  -45,  127,
        -83,   49,  -93,   17,  -10,  -65, -128,  108, -128,   16,  -73,  -41,
        -30,   32,  127,   93,   32,  127,  119, -114,  110,   63,  -62,  127,
        127,  -41,  -78,  -23,   88,   77, -128,  127, -111, -128, -105,  127,
        -19,  -97,  127, -115,

        116,  -73,  -80,  -53, -128,   70, -103,  -25,    2,  127, -111, -128,
        -128,  -12,  -81,   88,  -88,   32,   50,  126,  107, -116,   59,  -81,
        11,   20, -128,  -43,  127, -108, -128,   77,   63,  127,  -29,   53,
        50,   94, -107,   34,  127,  -52,   50,  -33,   52,   98, -128,  -90,
        -81,   32, -128,  -20,  -66,  -24,  -58,  -67, -128,   73,  -87,   56,
        -28,  127,  -70, -121,

        9,   16,  -24,  -43,  -33,  -67,   10,  -12,   44,   98,    7,   -5,
        86, -108,   49,   -3,  -99,  -36,  -91,  -19, -108,   47,   32,   44,
        -7,   24,  -46,  -43,   58,   -2,   16,  -19,   66,   63,  -47,   79,
        47,   15,  105,   60,   71, -107,   79,   85,   88,  -17,   98,  -58,
        14,  110,    0,   77,   82,   -5,  -48,   96,  -24,  -24,   12,  -73,
        -2,  102,  109,  -89,

        -128, -117, -128, -128,  -82, -128, -109,  104, -124,   82,  127,  -55,
        115,  127,  117,   31,  127, -128, -103, -111,  -11, -128,  -18, -128,
        -61,  127,  127,   88,  127,   48,  -70,  -97,  -98,   36,  126, -106,
        42,  -33, -123, -128, -128,  106,   68, -128,  -73,  -18,  -61, -128,
        -43,   36,  -63,   77,  -75,   56,   26,  112,   86,    9,  -52,  -63,
        95, -123,  127,   58,

        90,  -89,  -53,  -62,    2,   93,  -49, -116,  -31,  -77,  -67, -100,
        80,   99,  -95,   73,   56,  -48,   99,  122,  127,   79,   56,  -18,
        9,   13,   41,  123,  -12,   -1, -128,  -11, -128,   50,  -79, -101,
        17,  -31,   52,    5,   27,  127,   61,  -10,  -99,   32,   21,  -67,
        49,   76,  -28,  116,  115,  -55, -128,   17,   91, -120, -102,   17,
        -98,  117,  -76,   27,

        -128,    8,  -78,   10, -107,   66,  127,   67,   29,   50, -128,  -85,
        96, -123,  122,  118,  123, -100,  -43,  122,  108,   23,  -88,   84,
        -128,  -33,  -24,  -91,  127,  -17,   29,  -56,  126,  103, -114,   71,
        25,  -16,  127,  -31,   60, -118,   25,   28,   91, -108,   73,  -19,
        -33,   63,  -15,  -62,   30, -128, -108, -119,  -96,  -39,   23,  -99,
        127,   57,  -95,  -34,

        -128,  -71, -128,  127,   13,   -1,  -49,   71,   -2, -123,   67,   24,
        -43,   69,  108,   77,   47,   -4,  -15,  -92,  -39,  119,  100,  -66,
        -11,  -99,    1,  111,  100,  -67,   57, -128,  -33,  -16,   47,  -36,
        -88,  -52,  -78, -102,   93, -128,  -22,  104,  127, -117,    2,   80,
        -31,  -85,  -45,  127, -128, -113,  -81,   -2, -128,   81,  -50,   84,
        -55,   61,  -77,  -58,

        28,   -6,  -58,   79,   62,   11, -128,   87,   81, -121,  -85,  105,
        86,  -16,  -40,  108,  127,  -80,  -81,  -35,  100,  -81,  122,  127,
        107, -120,   95,   62,  -19,  -10,  100, -117,  100,  -10,    2,  -56,
        78,   57,   43, -105,   82,  -31,  -85,  102,  -83,  123,  116,   13,
        -7,  -23, -105,  122,    9,   -1,    1,  126,  127,  126,  127,   44,
        -105,  -81,   52,  -86,

        -61,   18,  127, -128,   20, -128,  -56,    4, -128,   18,  -69,   29,
        -95,  123, -128,   50,   56,   97, -128,  -77, -110,  -96,    6,  117,
        64, -103, -111,  -15,  -11,  -37,   73, -117,  103, -128,  127,   83,
        -122,  127,   80,  127, -128,  -36, -122,   61,   97,  127, -107,   71,
        -117,  -39, -128,    5,  114,  -92,  127,  127, -128,  -95,  127, -128,
        -68,  -92,   85,   57,

        32,  -57,  104, -119,  127, -128,    1,  -97,  -45, -102,   -6,   20,
        -100,  -27, -112, -112, -123,  -36,   51,   58,  -19,  109,   29,  113,
        56, -128,  -14,   68,   45,   92,  127,  127,   99,  -69,   19,  -76,
        -13,  107,  -83,  -14,   -4, -114,   36,  112,  -99,  117,    8,  -45,
        5,   40,  -75,   51,   86,   48,  105,   59,  113,  117,  -58, -124,
        -40,  -90,  -96,   38,

        -72,   26,   23,   87,  127,  127,   69,  127,   -8,  125,   47,    0,
        -82,   89, -113,  127,  -45,   17,    3,  114,  110,  114,  -26,  -62,
        -83,  120,  -77, -128,  -45,  -53,  -89,  -26,  -15,  -51, -128,   95,
        127,  127,   32,  -58,  -17,   21,   89,  104,  114, -128, -120,  127,
        -41,  127,   58,    4,  -85, -113, -114,  -90,   63,  -80, -128,   55,
        -77,   86,  -22,   74,

        127,  -41,  -83, -128,  127,   79,   58,  -92,   93, -128, -128,  105,
        -122, -124,  120,   -5,  -62,   65,  -56,  127,  -94,  127,  -92,   49,
        73,   28,   26,  -26,   65,  -89,   48,  127, -128,   35,   15,  -47,
        -74,  -77,   21, -128, -128,  106,   73,  -89,   67,  116, -124,   41,
        63, -128,   61,  104,  -15,   27,   76,   58, -128,  -98, -128,   45,
        127,  127, -128,  -37,

        -26, -118,  127,   15,  -16, -105,  -21,  -40,  -32,   68,  -71, -125,
        -80,   -4,  -76,   54,   91,   20,   31,   50,  124,  114,   54,  -46,
        -85,  -75,   21,  114,   10, -107, -128,   -5,  -84,   39, -128,  -88,
        45,  127,   22,  -16,  127,  -17,   35,  113, -120,   72,   54,  127,
        -63, -128, -128,  -77,  127,  127,  121,  -71,  -82,  -71,   42,   89,
        -88,  119,   56,  -93,

        62, -101,  -51,    2,   81, -113,  -62,   24,   33,  -34,  -46,  -71,
        -128,  -42,  -15,  127,   44,  -97,  -63,  127,   37,   75,  -89, -128,
        127,   99,  127,   43, -128,   81,  127, -128,  127,  -66, -128,  -91,
        -98, -124,  127,   76,   -4,  -56,  127, -112,   -9,  127, -112,  127,
        -114,  -50,   40,  103,  127,  127,  -32,   76,   27,   46,  -36,  -75,
        77,  127,   19,  127
    };
    float X_scale[24] = {
        0.0085, 0.0061, 0.0073, 0.0079, 0.0067, 0.0074, 0.0079, 0.0046, 0.0074, 0.0077,
        0.0056, 0.0058, 0.0086, 0.0051, 0.0073, 0.0068, 0.0071, 0.0068, 0.0059, 0.0066,
        0.0067, 0.0060, 0.0065, 0.0065
    };
    int W_idx_OC[4] = {0, 3, 5, 8};
    int16_t W_idx_IC[9] = {0, 2, 3, 0, 1, 2, 0, 2, 3};
    uint8_t W_idx_X[8] = {0, 1, 2, 0, 1, 0, 2, 1};
    uint8_t W_idx_Y[8] = {0, 2, 1, 2, 0, 1, 1, 0};
    int8_t W_val[8] = {-36, 58, 16, 40, -4, -37, 45, 9};
    float W_scale[1] = {0.0164f};
    float O[384];
    for (int i = 0; i < 384; i++) {
        O[i] = 0.0f;
    }
    float expected_O[384] = {
        -0.3313, -0.8573,  0.1299, -1.5092, -0.6949, -0.7165,  0.0442, -0.7104,
        0.5204,  0.4547, -1.0491, -0.4067, -0.4076, -0.0520,  0.4121, -0.8080,
        0.1895,  0.3515, -0.4118,  1.2194,  0.2761,  0.4722, -0.9596, -0.1288,
        -0.2517, -0.4412, -0.3607, -0.3309,  0.8508, -0.6164,  0.3071, -0.5563,
        -0.1157, -0.1694,  0.7847, -0.3840,  0.4829, -0.2214,  0.6442, -0.3923,
        0.9619, -0.5388,  1.0747, -0.6209,  0.6862,  0.3957, -0.5047, -0.5280,
        -0.8838,  0.0781, -0.5852,  0.0630,  0.2324, -0.9567,  0.2741, -0.3053,
        0.2261,  0.5783, -0.0404, -1.4720, -1.1198, -0.2070, -0.9150, -0.8513,
        -1.0336,  0.4897,  0.9091,  0.9401, -0.4388, -0.7721,  0.6772, -0.3775,
        0.5953, -0.0366, -1.0500, -0.2992, -0.2026, -0.8156,  0.3878,  0.1790,
        -0.5379,  0.1088,  0.8154, -0.6801,  0.4450,  0.1525, -0.7021,  0.5204,
        0.1191,  0.7232, -0.2070,  0.8526, -0.1566,  0.3188, -0.6624,  0.5289,
        -0.4464,  0.7064, -0.1117,  0.6270, -0.2600,  0.4605, -0.1050, -0.0722,
        0.0785,  0.8912,  0.4695, -0.2023,  0.5327,  0.3396, -0.2400, -0.4634,
        0.3946,  0.6817, -0.6949, -0.4484,  0.5498, -0.8878, -0.6373,  0.3019,
        0.0597, -0.7133, -0.2317, -0.0787,  0.2571, -0.6588, -0.4957, -0.4632,
        -0.4854, -0.3894, -0.1669, -0.2109, -0.2840,  0.4235,  0.5128,  0.4904,
        0.1261,  0.5473, -0.0413,  0.2490,  0.4549, -0.4069,  0.5150, -0.2324,
        -0.2660,  0.5294,  0.2526, -0.1220,  0.4047, -0.2840,  0.3176, -0.2261,
        -0.4226,  0.1045,  0.1005,  0.4222, -0.6312, -0.4859,  0.5567, -0.5312,
        -0.2046, -0.1987, -0.3212, -0.5612, -0.5765, -0.1274, -0.0031, -0.1969,
        0.0763,  0.2055, -0.4823,  0.5393,  0.5289,  0.6182, -0.5128, -0.5433,
        -0.0570, -0.5307,  0.2310,  0.3733, -0.1974,  0.0933,  0.6182, -0.5029,
        -0.5312, -0.0274, -0.2885, -0.0991,  0.3827, -0.0390,  0.6124, -0.1014,
        0.0906, -0.5276, -0.0211, -0.5182, -0.4383,  0.0682, -0.0188, -0.3921,
        0.2104,  0.3203, -0.4446, -0.4823, -0.4612, -0.4065,  0.1786, -0.3872,
        -0.0709,  0.1288, -0.1140,  0.4782,  0.5222,  0.1314, -0.3701, -0.1795,
        -0.0965, -0.0363, -0.1817, -0.5101,  0.5742, -0.5603,  0.3804, -0.5294,
        -0.4971, -0.0929,  0.4814, -0.0408,  0.2849, -0.0794,  0.1934, -0.6178,
        0.3804, -0.2912,  0.6169, -0.5980,  0.5325, -0.1454, -0.3450, -0.6016,
        -0.4845,  0.2575,  0.0978,  0.3347,  0.0637, -0.5253, -0.2364, -0.5998,
        0.1202,  0.3414,  0.3019, -0.5231, -0.3952, -0.3549, -0.5487, -0.3764,
        0.7235,  0.3467,  0.8447, -0.0132,  0.2085, -0.0482,  0.8148, -0.0635,
        -0.3444, -0.0594, -0.8873, -0.0362, -0.3994, -1.2064, -0.8424,  0.5161,
        -0.2148, -0.7772, -0.5087, -0.4086, -0.5744, -0.5602, -0.3124, -0.8000,
        0.1148, -0.4360, -0.3918, -0.9290, -0.6116, -0.0630, -1.0378,  0.0240,
        0.1316, -0.6754, -0.1855, -0.6843,  0.5142, -0.4173,  0.3310, -0.0552,
        -0.9358, -0.8402,  0.5271, -0.1707,  0.1181,  0.0187,  0.2140, -1.0096,
        0.6451, -0.4372,  0.6083, -1.2356,  0.1290, -0.1633, -0.0247,  0.1231,
        0.5026, -0.4554, -0.4889,  0.4675,  0.8854,  0.4723, -0.6286, -0.1492,
        -0.3922, -0.2991, -0.9751,  0.5214, -0.3290, -0.2774, -0.3825, -0.0979,
        0.4972,  1.1012,  0.0779, -0.2331,  0.8777,  0.5583, -0.9199, -0.4796,
        0.2914,  0.3249,  0.7586, -0.8122, -0.2742, -0.7713, -0.3269,  0.3153,
        -0.4039, -0.0415, -0.6123, -0.0711,  0.2898,  0.2324, -1.0266, -0.1041,
        -0.0022,  0.3398, -0.2908,  0.2993, -0.5218,  0.6910,  0.0776,  0.7898,
        -0.5167,  0.0827,  0.4666, -0.6898,  0.2185,  0.6855, -0.5733,  0.3291,
        0.1952, -0.5960, -0.2904, -0.0545,  0.7196, -0.0896, -0.6368,  0.4040,
        -0.0523, -0.1714, -0.3681,  0.5819,  0.1543, -0.3249,  0.5611, -0.2963
    };

    sparse::quantized_grouped_sparse_conv2d_vectorized_forward_stride_1(
        B, IC, OC, M, N, K, 8, 0,
        X, X_scale, 64, W_idx_OC, W_idx_IC, W_idx_X,
        W_idx_Y, W_val, W_scale, 64, O
    );

    for (int i = 0; i < 384; i++) {
        ASSERT_THAT(O[i], testing::FloatNear(expected_O[i], 0.3f));
    }
}

TEST(Test_Sparse, QuantizeGroupedSparseConv2dForwardParallel2Stride1) {
    int B = 64;
    int IC = 2;
    int OC = 3;
    int M = 4;
    int N = 3;
    int K = 3;
    int8_t X[1536] = {
        97,    1,   19,   94,   59,  117,  -20,   -5,  -73,  -32,   71,  -48,
        -98, -105,  -86,   16,  -96,  -35,   51,  -94,   78,  -29,   95,   26,
        49,   20,    2,  -59,   10,  -11,  107,  -10,  -75,  -33,    6,   48,
        -32,   75,  -92,  -89, -100,  -20,  -37,   -3,   -6,  -65,   -8,  -77,
        25,   68,  108,  117,   14,   45,  -70,  -76,   12,   14,   92,   84,
        88, -103,    0,   81,

        -88,   26, -128,  -80,   54, -128,  -13,  120,   13, -112,  127,   99,
        17,  127,   86,  -33,  -82,   50,   80,   48,   61,   41,  -96,  127,
        -49,  -12,  -50,   63,  110,  125,  127,  -89,  -13,  127, -113,  127,
        5,  -65,  102, -124,  127,  114,  -73,  127, -128,  -35,   80,   92,
        -41,  -39,  -97,  127,  -78,  108,  105,  -31,  -39,  127,  104,  -41,
        -31,  -50,  127, -128,

        -113,  -80,  -42,  -43,  -69,   95,  127,  108,   29,  127,  -21,   44,
        104,  -96,  127,  -38,  -44,  101,   49,  -14,   95,  -57,   58,  -39,
        -100,   19,   19,   80, -128, -103,  120, -116,  -30,  -32,  -78, -110,
        -118,  -28,   11,  -44,   21,   32,  -99,  115,  127,  127, -100, -115,
        -15, -105,   47,   72,  -38,    8,  127, -116, -120,  -10,  -58,  -30,
        91,   -3,  122,  -24,

        101, -112,   30,  -19,  -37,  115,   24,   90,  -11,   40,   95,  -85,
        -110,   -6,  -48,  124,   88,   47,   14,   -8,   23,  -50,    0,   23,
        -44,  -98,  -69,  -70,  123,  -98,   -3,  -42, -125,  -55,    3,   10,
        119,  -73,   64,   63,   82,  -42,   89,   46,   19,  110,    2,  -31,
        -59,  -25,  -79,   -8,   97,   97,   32,  -41,  -63,   46,   39,  -60,
        63,   11,  121,  -56,

        32,  -43,  127,  -32,  100, -112,   45,  120,  -79, -109, -128,   -1,
        -125,    8,   77,  -27, -126,   10,  -61,   25,  -96,   10,   35,   89,
        29,   37,   32,   32,  -84, -128,  111,  112, -127,  -99,   29,  -97,
        72, -107,  127,  -68,  127,  127,  -20,   67,   78,  -75,   56,   92,
        61,   96,  -40,   -9,  -64,   81,   54,   90, -128, -128,   15,  -22,
        -73,  -37,   38,  -32,

        14, -107,    6, -118,  -88,    4,   -8,  -80,   33,   68,  -96,  -97,
        -102,  -74,   25,  -76,  -10,   34,  -35,   92,   98,   19,  -76,  -28,
        -15,  -16,  -46, -106,  120, -123,   84, -128,  -94,  -30,  110,   -2,
        49,   -5,   46, -116,   67,  -63,  117, -126,  124,  -18,  -79, -120,
        -109,   50,    8,   70,   22, -116,  -37, -111,   13,   63,   73, -123,
        -87,  -80, -106,  -72,

        82,  -20,  -11,  -77,    5,  107,   49,   -8,  -17,   88,   44,  -15,
        -17,   15,  -12,  107,   28,  -33,   25,   95,  -24,  -89,  -16, -116,
        -59,   30,  -45,   96,  -88,   23,  101,  114,   55,  115,  -58,   42,
        102,  107,   42,  -51,  -62,  -42,   68,  126,  -17,   87,   -2, -102,
        72,  -87,   65,    2,   23,  -92,  -46,   -8, -117,    8,   61,  -28,
        64,  -72,  121, -111,

        127,  127,  121,  -93,  127, -128,  127,   92,  -97, -128,  -81,  124,
        -127, -128, -128,   80, -128, -128,  -48, -104, -128, -128, -128, -111,
        19, -128, -128, -128,  -99,  124, -128,  -72,  -13,  -74, -128,  -70,
        127, -128,  127, -128, -128,  -88,   69,   96, -128,   -2,  127, -128,
        127, -128,   78, -128,  -57,  109,  127,   39,  127,   33,  -37,  122,
        127,   68,  -17, -128,

        -74,   25,  127,  123,  -83,  -11,  127,   16,   85,    4,  -69,  -68,
        -82, -127,   41,   85,  -41,   42,  126, -115,   48,  -39, -113,  100,
        8,   56,  -81,   47,   48,    7,  -64,   48, -117,   54,   18,  117,
        25,  -15,   22,   35,   34,  102,  122,  -26,  127,  104,  -46, -128,
        33,  112, -126,  -51,  110,  -95,  -99,   33,  -13,  -53,  -17,  -73,
        100, -116,  -11,  -81,

        114,  114, -106,  -86,  -93,   93,  -47,   56,  -29,  105,   96,   71,
        58,   -5,  126, -122,   98,  -65,  104,  114,  -50, -116,  -46,  -20,
        -11,  -70,   26,   -9,   74,   12, -113, -106,   49,  -13,  -16,  111,
        11,   54,  -54,   67,  119,  102,  -88,   17,  -69,    1,  -69,  -46,
        121,   21, -123,  -36,   48,  -43,  127,   86,  -17,  -10,   25,   79,
        35,   23,   23,  -23,

        -50, -118, -128,  125,   15, -128,  -37,   93,   69,  127,  -95,  -64,
        110,  118, -116, -128,  -65,   69,  127, -128, -128, -128,  -45,  127,
        -83,   49,  -93,   17,  -10,  -65, -128,  108, -128,   16,  -73,  -41,
        -30,   32,  127,   93,   32,  127,  119, -114,  110,   63,  -62,  127,
        127,  -41,  -78,  -23,   88,   77, -128,  127, -111, -128, -105,  127,
        -19,  -97,  127, -115,

        116,  -73,  -80,  -53, -128,   70, -103,  -25,    2,  127, -111, -128,
        -128,  -12,  -81,   88,  -88,   32,   50,  126,  107, -116,   59,  -81,
        11,   20, -128,  -43,  127, -108, -128,   77,   63,  127,  -29,   53,
        50,   94, -107,   34,  127,  -52,   50,  -33,   52,   98, -128,  -90,
        -81,   32, -128,  -20,  -66,  -24,  -58,  -67, -128,   73,  -87,   56,
        -28,  127,  -70, -121,

        9,   16,  -24,  -43,  -33,  -67,   10,  -12,   44,   98,    7,   -5,
        86, -108,   49,   -3,  -99,  -36,  -91,  -19, -108,   47,   32,   44,
        -7,   24,  -46,  -43,   58,   -2,   16,  -19,   66,   63,  -47,   79,
        47,   15,  105,   60,   71, -107,   79,   85,   88,  -17,   98,  -58,
        14,  110,    0,   77,   82,   -5,  -48,   96,  -24,  -24,   12,  -73,
        -2,  102,  109,  -89,

        -128, -117, -128, -128,  -82, -128, -109,  104, -124,   82,  127,  -55,
        115,  127,  117,   31,  127, -128, -103, -111,  -11, -128,  -18, -128,
        -61,  127,  127,   88,  127,   48,  -70,  -97,  -98,   36,  126, -106,
        42,  -33, -123, -128, -128,  106,   68, -128,  -73,  -18,  -61, -128,
        -43,   36,  -63,   77,  -75,   56,   26,  112,   86,    9,  -52,  -63,
        95, -123,  127,   58,

        90,  -89,  -53,  -62,    2,   93,  -49, -116,  -31,  -77,  -67, -100,
        80,   99,  -95,   73,   56,  -48,   99,  122,  127,   79,   56,  -18,
        9,   13,   41,  123,  -12,   -1, -128,  -11, -128,   50,  -79, -101,
        17,  -31,   52,    5,   27,  127,   61,  -10,  -99,   32,   21,  -67,
        49,   76,  -28,  116,  115,  -55, -128,   17,   91, -120, -102,   17,
        -98,  117,  -76,   27,

        -128,    8,  -78,   10, -107,   66,  127,   67,   29,   50, -128,  -85,
        96, -123,  122,  118,  123, -100,  -43,  122,  108,   23,  -88,   84,
        -128,  -33,  -24,  -91,  127,  -17,   29,  -56,  126,  103, -114,   71,
        25,  -16,  127,  -31,   60, -118,   25,   28,   91, -108,   73,  -19,
        -33,   63,  -15,  -62,   30, -128, -108, -119,  -96,  -39,   23,  -99,
        127,   57,  -95,  -34,

        -128,  -71, -128,  127,   13,   -1,  -49,   71,   -2, -123,   67,   24,
        -43,   69,  108,   77,   47,   -4,  -15,  -92,  -39,  119,  100,  -66,
        -11,  -99,    1,  111,  100,  -67,   57, -128,  -33,  -16,   47,  -36,
        -88,  -52,  -78, -102,   93, -128,  -22,  104,  127, -117,    2,   80,
        -31,  -85,  -45,  127, -128, -113,  -81,   -2, -128,   81,  -50,   84,
        -55,   61,  -77,  -58,

        28,   -6,  -58,   79,   62,   11, -128,   87,   81, -121,  -85,  105,
        86,  -16,  -40,  108,  127,  -80,  -81,  -35,  100,  -81,  122,  127,
        107, -120,   95,   62,  -19,  -10,  100, -117,  100,  -10,    2,  -56,
        78,   57,   43, -105,   82,  -31,  -85,  102,  -83,  123,  116,   13,
        -7,  -23, -105,  122,    9,   -1,    1,  126,  127,  126,  127,   44,
        -105,  -81,   52,  -86,

        -61,   18,  127, -128,   20, -128,  -56,    4, -128,   18,  -69,   29,
        -95,  123, -128,   50,   56,   97, -128,  -77, -110,  -96,    6,  117,
        64, -103, -111,  -15,  -11,  -37,   73, -117,  103, -128,  127,   83,
        -122,  127,   80,  127, -128,  -36, -122,   61,   97,  127, -107,   71,
        -117,  -39, -128,    5,  114,  -92,  127,  127, -128,  -95,  127, -128,
        -68,  -92,   85,   57,

        32,  -57,  104, -119,  127, -128,    1,  -97,  -45, -102,   -6,   20,
        -100,  -27, -112, -112, -123,  -36,   51,   58,  -19,  109,   29,  113,
        56, -128,  -14,   68,   45,   92,  127,  127,   99,  -69,   19,  -76,
        -13,  107,  -83,  -14,   -4, -114,   36,  112,  -99,  117,    8,  -45,
        5,   40,  -75,   51,   86,   48,  105,   59,  113,  117,  -58, -124,
        -40,  -90,  -96,   38,

        -72,   26,   23,   87,  127,  127,   69,  127,   -8,  125,   47,    0,
        -82,   89, -113,  127,  -45,   17,    3,  114,  110,  114,  -26,  -62,
        -83,  120,  -77, -128,  -45,  -53,  -89,  -26,  -15,  -51, -128,   95,
        127,  127,   32,  -58,  -17,   21,   89,  104,  114, -128, -120,  127,
        -41,  127,   58,    4,  -85, -113, -114,  -90,   63,  -80, -128,   55,
        -77,   86,  -22,   74,

        127,  -41,  -83, -128,  127,   79,   58,  -92,   93, -128, -128,  105,
        -122, -124,  120,   -5,  -62,   65,  -56,  127,  -94,  127,  -92,   49,
        73,   28,   26,  -26,   65,  -89,   48,  127, -128,   35,   15,  -47,
        -74,  -77,   21, -128, -128,  106,   73,  -89,   67,  116, -124,   41,
        63, -128,   61,  104,  -15,   27,   76,   58, -128,  -98, -128,   45,
        127,  127, -128,  -37,

        -26, -118,  127,   15,  -16, -105,  -21,  -40,  -32,   68,  -71, -125,
        -80,   -4,  -76,   54,   91,   20,   31,   50,  124,  114,   54,  -46,
        -85,  -75,   21,  114,   10, -107, -128,   -5,  -84,   39, -128,  -88,
        45,  127,   22,  -16,  127,  -17,   35,  113, -120,   72,   54,  127,
        -63, -128, -128,  -77,  127,  127,  121,  -71,  -82,  -71,   42,   89,
        -88,  119,   56,  -93,

        62, -101,  -51,    2,   81, -113,  -62,   24,   33,  -34,  -46,  -71,
        -128,  -42,  -15,  127,   44,  -97,  -63,  127,   37,   75,  -89, -128,
        127,   99,  127,   43, -128,   81,  127, -128,  127,  -66, -128,  -91,
        -98, -124,  127,   76,   -4,  -56,  127, -112,   -9,  127, -112,  127,
        -114,  -50,   40,  103,  127,  127,  -32,   76,   27,   46,  -36,  -75,
        77,  127,   19,  127
    };
    float X_scale[24] = {
        0.0085, 0.0061, 0.0073, 0.0079, 0.0067, 0.0074, 0.0079, 0.0046, 0.0074, 0.0077,
        0.0056, 0.0058, 0.0086, 0.0051, 0.0073, 0.0068, 0.0071, 0.0068, 0.0059, 0.0066,
        0.0067, 0.0060, 0.0065, 0.0065
    };
    int W_idx_OC[4] = {0, 3, 5, 8};
    int16_t W_idx_IC[9] = {0, 2, 3, 0, 1, 2, 0, 2, 3};
    uint8_t W_idx_X[8] = {0, 1, 2, 0, 1, 0, 2, 1};
    uint8_t W_idx_Y[8] = {0, 2, 1, 2, 0, 1, 1, 0};
    int8_t W_val[8] = {-36, 58, 16, 40, -4, -37, 45, 9};
    float W_scale[1] = {0.0164f};
    float O[384];
    for (int i = 0; i < 384; i++) {
        O[i] = 0.0f;
    }
    float expected_O[384] = {
        -0.3313, -0.8573,  0.1299, -1.5092, -0.6949, -0.7165,  0.0442, -0.7104,
        0.5204,  0.4547, -1.0491, -0.4067, -0.4076, -0.0520,  0.4121, -0.8080,
        0.1895,  0.3515, -0.4118,  1.2194,  0.2761,  0.4722, -0.9596, -0.1288,
        -0.2517, -0.4412, -0.3607, -0.3309,  0.8508, -0.6164,  0.3071, -0.5563,
        -0.1157, -0.1694,  0.7847, -0.3840,  0.4829, -0.2214,  0.6442, -0.3923,
        0.9619, -0.5388,  1.0747, -0.6209,  0.6862,  0.3957, -0.5047, -0.5280,
        -0.8838,  0.0781, -0.5852,  0.0630,  0.2324, -0.9567,  0.2741, -0.3053,
        0.2261,  0.5783, -0.0404, -1.4720, -1.1198, -0.2070, -0.9150, -0.8513,
        -1.0336,  0.4897,  0.9091,  0.9401, -0.4388, -0.7721,  0.6772, -0.3775,
        0.5953, -0.0366, -1.0500, -0.2992, -0.2026, -0.8156,  0.3878,  0.1790,
        -0.5379,  0.1088,  0.8154, -0.6801,  0.4450,  0.1525, -0.7021,  0.5204,
        0.1191,  0.7232, -0.2070,  0.8526, -0.1566,  0.3188, -0.6624,  0.5289,
        -0.4464,  0.7064, -0.1117,  0.6270, -0.2600,  0.4605, -0.1050, -0.0722,
        0.0785,  0.8912,  0.4695, -0.2023,  0.5327,  0.3396, -0.2400, -0.4634,
        0.3946,  0.6817, -0.6949, -0.4484,  0.5498, -0.8878, -0.6373,  0.3019,
        0.0597, -0.7133, -0.2317, -0.0787,  0.2571, -0.6588, -0.4957, -0.4632,
        -0.4854, -0.3894, -0.1669, -0.2109, -0.2840,  0.4235,  0.5128,  0.4904,
        0.1261,  0.5473, -0.0413,  0.2490,  0.4549, -0.4069,  0.5150, -0.2324,
        -0.2660,  0.5294,  0.2526, -0.1220,  0.4047, -0.2840,  0.3176, -0.2261,
        -0.4226,  0.1045,  0.1005,  0.4222, -0.6312, -0.4859,  0.5567, -0.5312,
        -0.2046, -0.1987, -0.3212, -0.5612, -0.5765, -0.1274, -0.0031, -0.1969,
        0.0763,  0.2055, -0.4823,  0.5393,  0.5289,  0.6182, -0.5128, -0.5433,
        -0.0570, -0.5307,  0.2310,  0.3733, -0.1974,  0.0933,  0.6182, -0.5029,
        -0.5312, -0.0274, -0.2885, -0.0991,  0.3827, -0.0390,  0.6124, -0.1014,
        0.0906, -0.5276, -0.0211, -0.5182, -0.4383,  0.0682, -0.0188, -0.3921,
        0.2104,  0.3203, -0.4446, -0.4823, -0.4612, -0.4065,  0.1786, -0.3872,
        -0.0709,  0.1288, -0.1140,  0.4782,  0.5222,  0.1314, -0.3701, -0.1795,
        -0.0965, -0.0363, -0.1817, -0.5101,  0.5742, -0.5603,  0.3804, -0.5294,
        -0.4971, -0.0929,  0.4814, -0.0408,  0.2849, -0.0794,  0.1934, -0.6178,
        0.3804, -0.2912,  0.6169, -0.5980,  0.5325, -0.1454, -0.3450, -0.6016,
        -0.4845,  0.2575,  0.0978,  0.3347,  0.0637, -0.5253, -0.2364, -0.5998,
        0.1202,  0.3414,  0.3019, -0.5231, -0.3952, -0.3549, -0.5487, -0.3764,
        0.7235,  0.3467,  0.8447, -0.0132,  0.2085, -0.0482,  0.8148, -0.0635,
        -0.3444, -0.0594, -0.8873, -0.0362, -0.3994, -1.2064, -0.8424,  0.5161,
        -0.2148, -0.7772, -0.5087, -0.4086, -0.5744, -0.5602, -0.3124, -0.8000,
        0.1148, -0.4360, -0.3918, -0.9290, -0.6116, -0.0630, -1.0378,  0.0240,
        0.1316, -0.6754, -0.1855, -0.6843,  0.5142, -0.4173,  0.3310, -0.0552,
        -0.9358, -0.8402,  0.5271, -0.1707,  0.1181,  0.0187,  0.2140, -1.0096,
        0.6451, -0.4372,  0.6083, -1.2356,  0.1290, -0.1633, -0.0247,  0.1231,
        0.5026, -0.4554, -0.4889,  0.4675,  0.8854,  0.4723, -0.6286, -0.1492,
        -0.3922, -0.2991, -0.9751,  0.5214, -0.3290, -0.2774, -0.3825, -0.0979,
        0.4972,  1.1012,  0.0779, -0.2331,  0.8777,  0.5583, -0.9199, -0.4796,
        0.2914,  0.3249,  0.7586, -0.8122, -0.2742, -0.7713, -0.3269,  0.3153,
        -0.4039, -0.0415, -0.6123, -0.0711,  0.2898,  0.2324, -1.0266, -0.1041,
        -0.0022,  0.3398, -0.2908,  0.2993, -0.5218,  0.6910,  0.0776,  0.7898,
        -0.5167,  0.0827,  0.4666, -0.6898,  0.2185,  0.6855, -0.5733,  0.3291,
        0.1952, -0.5960, -0.2904, -0.0545,  0.7196, -0.0896, -0.6368,  0.4040,
        -0.0523, -0.1714, -0.3681,  0.5819,  0.1543, -0.3249,  0.5611, -0.2963
    };

    sparse::quantized_grouped_sparse_conv2d_vectorized_parallel_forward_stride_1(
        B, IC, OC, M, N, K, 8, 0,
        X, X_scale, 64, W_idx_OC, W_idx_IC, W_idx_X,
        W_idx_Y, W_val, W_scale, 64, O
    );

    for (int i = 0; i < 384; i++) {
        ASSERT_THAT(O[i], testing::FloatNear(expected_O[i], 0.3f));
    }
}

TEST(Test_Sparse, QuantizeGroupedSparseConv2dBackward1Stride1) {
    int B = 2;
    int IC = 2;
    int OC = 3;
    int M = 4;
    int N = 3;
    int K = 3;
    int8_t X[48] = {
        30, 126, 12, 66, 127, 70, 5, 79,
        15, -44, 66, 100, 114, -101, 67, -33,
        -126, -94, 90, 9, -33, 37, -70, -93,
        -29, 51, 6, -128, -75, -105, -55, -28,
        81, -45, 5, -11, 3, -81, -110, -2,
        -103, -27, -95, 108, -68, 70, -46, 80
    };
    float X_scale[1] = {0.0069f};
    int W_idx_OC[4] = {0, 3, 5, 8};
    int16_t W_idx_IC[9] = {0, 2, 3, 0, 1, 2, 0, 2, 3};
    uint8_t W_idx_X[8] = {0, 1, 2, 0, 1, 0, 2, 1};
    uint8_t W_idx_Y[8] = {0, 2, 1, 2, 0, 1, 1, 0};
    int8_t W_val[8] = {-36, 58, 16, 40, -4, -37, 45, 9};
    float W_scale[1] = {0.0164};
    int8_t dLdO[12] = {
        40,  46, -31, 39, -63, -14, -21, -11, 32, 4, -28, -25
    };
    float dLdO_scale[1] = {0.0153f};
    float dLdX[48];
    for (int i = 0; i < 48; i++) {
        dLdX[i] = 0.0f;
    }
    float expected_dLdX[48] = {
        -0.360074, -0.413694, -0.29946, -0.0296362, -0.632913, -0.13903, 0.278321, -0.350383,
        0.264418, 0.232717, 0.368182, 0.552593, 0, 0, 0.357991, 0.0354288, -0.450347, 0.566949,
        0, 0, -0.3161, -0.278203, 0, 0, 0, 0, 0, 0, 0,
        0, 0.132767, 0.0208975, 0, 0, 0, 0, -0.0386989, -0.041365,
        0.165844, 0.19054, 0, 0, 0, 0, -0.12819, 0.16138, 0, 0
    };
    float dLdW_val[8] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
    float expected_dLdW_val[8] = {
        1.05244, 0.790756, 0.0375631, -1.25631, 0.504727, 0.136137, 0.219656, 0.00787375
    };

    sparse::quantized_grouped_sparse_conv2d_vectorized_backward_stride_1(
        B, IC, OC, M, N, K, 8, 0, X, X_scale, 64, W_idx_OC, W_idx_IC, W_idx_X,
        W_idx_Y, W_val, W_scale, 64, dLdO, dLdO_scale, 64, dLdX, dLdW_val
    );

    for (int i = 0; i < 48; i++) {
        ASSERT_THAT(dLdX[i], testing::FloatNear(expected_dLdX[i], 0.01f));
    }

    for (int i = 0; i < 8; i++) {
        ASSERT_THAT(dLdW_val[i], testing::FloatNear(expected_dLdW_val[i], 0.1f));
    }
}

TEST(Test_Sparse, QuantizeGroupedSparseConv2dBackwardParallel1Stride1) {
    int B = 2;
    int IC = 2;
    int OC = 3;
    int M = 4;
    int N = 3;
    int K = 3;
    int8_t X[48] = {
        30, 126, 12, 66, 127, 70, 5, 79,
        15, -44, 66, 100, 114, -101, 67, -33,
        -126, -94, 90, 9, -33, 37, -70, -93,
        -29, 51, 6, -128, -75, -105, -55, -28,
        81, -45, 5, -11, 3, -81, -110, -2,
        -103, -27, -95, 108, -68, 70, -46, 80
    };
    float X_scale[1] = {0.0069f};
    int W_idx_OC[4] = {0, 3, 5, 8};
    int16_t W_idx_IC[9] = {0, 2, 3, 0, 1, 2, 0, 2, 3};
    uint8_t W_idx_X[8] = {0, 1, 2, 0, 1, 0, 2, 1};
    uint8_t W_idx_Y[8] = {0, 2, 1, 2, 0, 1, 1, 0};
    int8_t W_val[8] = {-36, 58, 16, 40, -4, -37, 45, 9};
    float W_scale[1] = {0.0164};
    int8_t dLdO[12] = {
        40,  46, -31, 39, -63, -14, -21, -11, 32, 4, -28, -25
    };
    float dLdO_scale[1] = {0.0153f};
    float dLdX[48];
    for (int i = 0; i < 48; i++) {
        dLdX[i] = 0.0f;
    }
    float expected_dLdX[48] = {
        -0.360074, -0.413694, -0.29946, -0.0296362, -0.632913, -0.13903, 0.278321, -0.350383,
        0.264418, 0.232717, 0.368182, 0.552593, 0, 0, 0.357991, 0.0354288, -0.450347, 0.566949,
        0, 0, -0.3161, -0.278203, 0, 0, 0, 0, 0, 0, 0,
        0, 0.132767, 0.0208975, 0, 0, 0, 0, -0.0386989, -0.041365,
        0.165844, 0.19054, 0, 0, 0, 0, -0.12819, 0.16138, 0, 0
    };
    float dLdW_val[8] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
    float expected_dLdW_val[8] = {
        1.05244, 0.790756, 0.0375631, -1.25631, 0.504727, 0.136137, 0.219656, 0.00787375
    };

    sparse::quantized_grouped_sparse_conv2d_vectorized_parallel_backward_stride_1(
        B, IC, OC, M, N, K, 8, 0, X, X_scale, 64, W_idx_OC, W_idx_IC, W_idx_X,
        W_idx_Y, W_val, W_scale, 64, dLdO, dLdO_scale, 64, dLdX, dLdW_val
    );

    for (int i = 0; i < 48; i++) {
        ASSERT_THAT(dLdX[i], testing::FloatNear(expected_dLdX[i], 0.01f));
    }

    for (int i = 0; i < 8; i++) {
        ASSERT_THAT(dLdW_val[i], testing::FloatNear(expected_dLdW_val[i], 0.1f));
    }
}

TEST(Test_Sparse, QuantizeGroupedSparseConv2dBackward2Stride1) {
    int B = 64;
    int IC = 2;
    int OC = 3;
    int M = 4;
    int N = 3;
    int K = 3;
    int8_t X[1536] = {
        97,    1,   19,   94,   59,  117,  -20,   -5,  -73,  -32,   71,  -48,
        -98, -105,  -86,   16,  -96,  -35,   51,  -94,   78,  -29,   95,   26,
        49,   20,    2,  -59,   10,  -11,  107,  -10,  -75,  -33,    6,   48,
        -32,   75,  -92,  -89, -100,  -20,  -37,   -3,   -6,  -65,   -8,  -77,
        25,   68,  108,  117,   14,   45,  -70,  -76,   12,   14,   92,   84,
        88, -103,    0,   81,

        -88,   26, -128,  -80,   54, -128,  -13,  120,   13, -112,  127,   99,
        17,  127,   86,  -33,  -82,   50,   80,   48,   61,   41,  -96,  127,
        -49,  -12,  -50,   63,  110,  125,  127,  -89,  -13,  127, -113,  127,
        5,  -65,  102, -124,  127,  114,  -73,  127, -128,  -35,   80,   92,
        -41,  -39,  -97,  127,  -78,  108,  105,  -31,  -39,  127,  104,  -41,
        -31,  -50,  127, -128,

        -113,  -80,  -42,  -43,  -69,   95,  127,  108,   29,  127,  -21,   44,
        104,  -96,  127,  -38,  -44,  101,   49,  -14,   95,  -57,   58,  -39,
        -100,   19,   19,   80, -128, -103,  120, -116,  -30,  -32,  -78, -110,
        -118,  -28,   11,  -44,   21,   32,  -99,  115,  127,  127, -100, -115,
        -15, -105,   47,   72,  -38,    8,  127, -116, -120,  -10,  -58,  -30,
        91,   -3,  122,  -24,

        101, -112,   30,  -19,  -37,  115,   24,   90,  -11,   40,   95,  -85,
        -110,   -6,  -48,  124,   88,   47,   14,   -8,   23,  -50,    0,   23,
        -44,  -98,  -69,  -70,  123,  -98,   -3,  -42, -125,  -55,    3,   10,
        119,  -73,   64,   63,   82,  -42,   89,   46,   19,  110,    2,  -31,
        -59,  -25,  -79,   -8,   97,   97,   32,  -41,  -63,   46,   39,  -60,
        63,   11,  121,  -56,

        32,  -43,  127,  -32,  100, -112,   45,  120,  -79, -109, -128,   -1,
        -125,    8,   77,  -27, -126,   10,  -61,   25,  -96,   10,   35,   89,
        29,   37,   32,   32,  -84, -128,  111,  112, -127,  -99,   29,  -97,
        72, -107,  127,  -68,  127,  127,  -20,   67,   78,  -75,   56,   92,
        61,   96,  -40,   -9,  -64,   81,   54,   90, -128, -128,   15,  -22,
        -73,  -37,   38,  -32,

        14, -107,    6, -118,  -88,    4,   -8,  -80,   33,   68,  -96,  -97,
        -102,  -74,   25,  -76,  -10,   34,  -35,   92,   98,   19,  -76,  -28,
        -15,  -16,  -46, -106,  120, -123,   84, -128,  -94,  -30,  110,   -2,
        49,   -5,   46, -116,   67,  -63,  117, -126,  124,  -18,  -79, -120,
        -109,   50,    8,   70,   22, -116,  -37, -111,   13,   63,   73, -123,
        -87,  -80, -106,  -72,

        82,  -20,  -11,  -77,    5,  107,   49,   -8,  -17,   88,   44,  -15,
        -17,   15,  -12,  107,   28,  -33,   25,   95,  -24,  -89,  -16, -116,
        -59,   30,  -45,   96,  -88,   23,  101,  114,   55,  115,  -58,   42,
        102,  107,   42,  -51,  -62,  -42,   68,  126,  -17,   87,   -2, -102,
        72,  -87,   65,    2,   23,  -92,  -46,   -8, -117,    8,   61,  -28,
        64,  -72,  121, -111,

        127,  127,  121,  -93,  127, -128,  127,   92,  -97, -128,  -81,  124,
        -127, -128, -128,   80, -128, -128,  -48, -104, -128, -128, -128, -111,
        19, -128, -128, -128,  -99,  124, -128,  -72,  -13,  -74, -128,  -70,
        127, -128,  127, -128, -128,  -88,   69,   96, -128,   -2,  127, -128,
        127, -128,   78, -128,  -57,  109,  127,   39,  127,   33,  -37,  122,
        127,   68,  -17, -128,

        -74,   25,  127,  123,  -83,  -11,  127,   16,   85,    4,  -69,  -68,
        -82, -127,   41,   85,  -41,   42,  126, -115,   48,  -39, -113,  100,
        8,   56,  -81,   47,   48,    7,  -64,   48, -117,   54,   18,  117,
        25,  -15,   22,   35,   34,  102,  122,  -26,  127,  104,  -46, -128,
        33,  112, -126,  -51,  110,  -95,  -99,   33,  -13,  -53,  -17,  -73,
        100, -116,  -11,  -81,

        114,  114, -106,  -86,  -93,   93,  -47,   56,  -29,  105,   96,   71,
        58,   -5,  126, -122,   98,  -65,  104,  114,  -50, -116,  -46,  -20,
        -11,  -70,   26,   -9,   74,   12, -113, -106,   49,  -13,  -16,  111,
        11,   54,  -54,   67,  119,  102,  -88,   17,  -69,    1,  -69,  -46,
        121,   21, -123,  -36,   48,  -43,  127,   86,  -17,  -10,   25,   79,
        35,   23,   23,  -23,

        -50, -118, -128,  125,   15, -128,  -37,   93,   69,  127,  -95,  -64,
        110,  118, -116, -128,  -65,   69,  127, -128, -128, -128,  -45,  127,
        -83,   49,  -93,   17,  -10,  -65, -128,  108, -128,   16,  -73,  -41,
        -30,   32,  127,   93,   32,  127,  119, -114,  110,   63,  -62,  127,
        127,  -41,  -78,  -23,   88,   77, -128,  127, -111, -128, -105,  127,
        -19,  -97,  127, -115,

        116,  -73,  -80,  -53, -128,   70, -103,  -25,    2,  127, -111, -128,
        -128,  -12,  -81,   88,  -88,   32,   50,  126,  107, -116,   59,  -81,
        11,   20, -128,  -43,  127, -108, -128,   77,   63,  127,  -29,   53,
        50,   94, -107,   34,  127,  -52,   50,  -33,   52,   98, -128,  -90,
        -81,   32, -128,  -20,  -66,  -24,  -58,  -67, -128,   73,  -87,   56,
        -28,  127,  -70, -121,

        9,   16,  -24,  -43,  -33,  -67,   10,  -12,   44,   98,    7,   -5,
        86, -108,   49,   -3,  -99,  -36,  -91,  -19, -108,   47,   32,   44,
        -7,   24,  -46,  -43,   58,   -2,   16,  -19,   66,   63,  -47,   79,
        47,   15,  105,   60,   71, -107,   79,   85,   88,  -17,   98,  -58,
        14,  110,    0,   77,   82,   -5,  -48,   96,  -24,  -24,   12,  -73,
        -2,  102,  109,  -89,

        -128, -117, -128, -128,  -82, -128, -109,  104, -124,   82,  127,  -55,
        115,  127,  117,   31,  127, -128, -103, -111,  -11, -128,  -18, -128,
        -61,  127,  127,   88,  127,   48,  -70,  -97,  -98,   36,  126, -106,
        42,  -33, -123, -128, -128,  106,   68, -128,  -73,  -18,  -61, -128,
        -43,   36,  -63,   77,  -75,   56,   26,  112,   86,    9,  -52,  -63,
        95, -123,  127,   58,

        90,  -89,  -53,  -62,    2,   93,  -49, -116,  -31,  -77,  -67, -100,
        80,   99,  -95,   73,   56,  -48,   99,  122,  127,   79,   56,  -18,
        9,   13,   41,  123,  -12,   -1, -128,  -11, -128,   50,  -79, -101,
        17,  -31,   52,    5,   27,  127,   61,  -10,  -99,   32,   21,  -67,
        49,   76,  -28,  116,  115,  -55, -128,   17,   91, -120, -102,   17,
        -98,  117,  -76,   27,

        -128,    8,  -78,   10, -107,   66,  127,   67,   29,   50, -128,  -85,
        96, -123,  122,  118,  123, -100,  -43,  122,  108,   23,  -88,   84,
        -128,  -33,  -24,  -91,  127,  -17,   29,  -56,  126,  103, -114,   71,
        25,  -16,  127,  -31,   60, -118,   25,   28,   91, -108,   73,  -19,
        -33,   63,  -15,  -62,   30, -128, -108, -119,  -96,  -39,   23,  -99,
        127,   57,  -95,  -34,

        -128,  -71, -128,  127,   13,   -1,  -49,   71,   -2, -123,   67,   24,
        -43,   69,  108,   77,   47,   -4,  -15,  -92,  -39,  119,  100,  -66,
        -11,  -99,    1,  111,  100,  -67,   57, -128,  -33,  -16,   47,  -36,
        -88,  -52,  -78, -102,   93, -128,  -22,  104,  127, -117,    2,   80,
        -31,  -85,  -45,  127, -128, -113,  -81,   -2, -128,   81,  -50,   84,
        -55,   61,  -77,  -58,

        28,   -6,  -58,   79,   62,   11, -128,   87,   81, -121,  -85,  105,
        86,  -16,  -40,  108,  127,  -80,  -81,  -35,  100,  -81,  122,  127,
        107, -120,   95,   62,  -19,  -10,  100, -117,  100,  -10,    2,  -56,
        78,   57,   43, -105,   82,  -31,  -85,  102,  -83,  123,  116,   13,
        -7,  -23, -105,  122,    9,   -1,    1,  126,  127,  126,  127,   44,
        -105,  -81,   52,  -86,

        -61,   18,  127, -128,   20, -128,  -56,    4, -128,   18,  -69,   29,
        -95,  123, -128,   50,   56,   97, -128,  -77, -110,  -96,    6,  117,
        64, -103, -111,  -15,  -11,  -37,   73, -117,  103, -128,  127,   83,
        -122,  127,   80,  127, -128,  -36, -122,   61,   97,  127, -107,   71,
        -117,  -39, -128,    5,  114,  -92,  127,  127, -128,  -95,  127, -128,
        -68,  -92,   85,   57,

        32,  -57,  104, -119,  127, -128,    1,  -97,  -45, -102,   -6,   20,
        -100,  -27, -112, -112, -123,  -36,   51,   58,  -19,  109,   29,  113,
        56, -128,  -14,   68,   45,   92,  127,  127,   99,  -69,   19,  -76,
        -13,  107,  -83,  -14,   -4, -114,   36,  112,  -99,  117,    8,  -45,
        5,   40,  -75,   51,   86,   48,  105,   59,  113,  117,  -58, -124,
        -40,  -90,  -96,   38,

        -72,   26,   23,   87,  127,  127,   69,  127,   -8,  125,   47,    0,
        -82,   89, -113,  127,  -45,   17,    3,  114,  110,  114,  -26,  -62,
        -83,  120,  -77, -128,  -45,  -53,  -89,  -26,  -15,  -51, -128,   95,
        127,  127,   32,  -58,  -17,   21,   89,  104,  114, -128, -120,  127,
        -41,  127,   58,    4,  -85, -113, -114,  -90,   63,  -80, -128,   55,
        -77,   86,  -22,   74,

        127,  -41,  -83, -128,  127,   79,   58,  -92,   93, -128, -128,  105,
        -122, -124,  120,   -5,  -62,   65,  -56,  127,  -94,  127,  -92,   49,
        73,   28,   26,  -26,   65,  -89,   48,  127, -128,   35,   15,  -47,
        -74,  -77,   21, -128, -128,  106,   73,  -89,   67,  116, -124,   41,
        63, -128,   61,  104,  -15,   27,   76,   58, -128,  -98, -128,   45,
        127,  127, -128,  -37,

        -26, -118,  127,   15,  -16, -105,  -21,  -40,  -32,   68,  -71, -125,
        -80,   -4,  -76,   54,   91,   20,   31,   50,  124,  114,   54,  -46,
        -85,  -75,   21,  114,   10, -107, -128,   -5,  -84,   39, -128,  -88,
        45,  127,   22,  -16,  127,  -17,   35,  113, -120,   72,   54,  127,
        -63, -128, -128,  -77,  127,  127,  121,  -71,  -82,  -71,   42,   89,
        -88,  119,   56,  -93,

        62, -101,  -51,    2,   81, -113,  -62,   24,   33,  -34,  -46,  -71,
        -128,  -42,  -15,  127,   44,  -97,  -63,  127,   37,   75,  -89, -128,
        127,   99,  127,   43, -128,   81,  127, -128,  127,  -66, -128,  -91,
        -98, -124,  127,   76,   -4,  -56,  127, -112,   -9,  127, -112,  127,
        -114,  -50,   40,  103,  127,  127,  -32,   76,   27,   46,  -36,  -75,
        77,  127,   19,  127
    };
    float X_scale[24] = {
        0.0085, 0.0061, 0.0073, 0.0079, 0.0067, 0.0074, 0.0079, 0.0046, 0.0074, 0.0077,
        0.0056, 0.0058, 0.0086, 0.0051, 0.0073, 0.0068, 0.0071, 0.0068, 0.0059, 0.0066,
        0.0067, 0.0060, 0.0065, 0.0065
    };
    int W_idx_OC[4] = {0, 3, 5, 8};
    int16_t W_idx_IC[9] = {0, 2, 3, 0, 1, 2, 0, 2, 3};
    uint8_t W_idx_X[8] = {0, 1, 2, 0, 1, 0, 2, 1};
    uint8_t W_idx_Y[8] = {0, 2, 1, 2, 0, 1, 1, 0};
    int8_t W_val[8] = {-36, 58, 16, 40, -4, -37, 45, 9};
    float W_scale[1] = {0.0164f};
    int8_t dLdO[384] = {
        -6, -36, -16, -25,  34,  -5,  -6,  10,  15,  12,  43, -43, -51,  50,
        -49, -32,  44,  22,  39, -27,  31,  53,   6,  12,  34, -10, -17, -52,
        -56,   5,  19, -31, -36, -44, -55,  22,  50,  11,  23, -34,   3, -20,
        -18,  40,  -7, -29, -54,   8, -57,  47,  26, -50,  10, -12,  19,  58,
        41, -21,  58,  -5,  -1,   1, -45,  23,

        16,  37,  15,  -4, -11,  27, -22, -39, -55,  23, -16, -48,  40,  12,
        8,   7, -31,  48,   4,   8, -24, -15,  30, -14,  -5,  -3,  64,  26,
        8,  31, -36,  44, -18, -52,  64, -36,  26,  36,  37, -51,  49,  47,
        -2, -18,  52, -24, -63,  35,  58, -19,  62,  53,   2, -10, -11,   7,
        -6, -46,  32,  23, -11,  33, -51,  10,

        18,  13,   1,   9,  55,  12,  49, -10, -29,   5,  -4,  26,  12,  24,
        34,  27,  -5,  36,  -1,  36,  44,  41, -58, -27,  44, -23,  39,  58,
        -10,  26,  43,  13,  30,  53,  14, -16, -17, -31,   9,  40,  58, -12,
        28, -45,  42,  59, -54,  49, -51, -52,  23,  -2, -34,  -7, -60,  33,
        -30,  58,  49,  50, -31,   2,  32,  41,

        -43,  20,  32, -50,  36,  14, -22,  35,  -8,   4,  13, -26, -32,  -4,
        34,  23, -31, -27, -27, -30, -39, -20, -22,  54,  13,  12, -15, -37,
        30, -46, -37,  20,  -5,  42,  45,  53,  -9, -27, -59,  22,  29,  16,
        47, -39, -25,  20,  51, -54, -29, -49, -31, -41,  28, -58,  41,  -4,
        54, -34, -36, -14, -42,  -4, -36,  36,

        26,  23,  51,  -5, -38, -44,   2,  43, -37,  -9,  42, -50, -10,  44,
        -25, -53,  56, -28, -12,  -3, -23, -33,  18,  52, -22, -48,  42,  -2,
        31,  44,  17,  12, -54,  38,  -4,   5, -24,  38,  24, -32, -22, -47,
        30, -49, -36,  28, -24,  42, -19,   0, -25,   2, -24,  12,  46, -44,
        -12,  51, -45,  26, -36,  56,  10,   0,

        -56,  55,  27, -23,  49,   5, -51, -11, -24,  -3, -29,  34, -56,  54,
        -52,  13, -43,  41, -42, -22, -39, -35,  19,  -3,  51,  -1, -26, -29,
        -20, -58,  44,  20, -49, -10, -30,  14,   5, -50,  22,   5, -25,  28,
        3, -30,  57,   7, -19, -31,  18, -16,  39,  -8, -45, -57,  -1,   9,
        16, -36, -33, -40,  53, -53,  22,  14
    };
    float dLdO_scale[6] = {0.0172f, 0.0152f, 0.0164f, 0.0171f, 0.0173f, 0.0173f};
    float dLdX[1536];
    for (int i = 0; i < 1536; i++) {
        dLdX[i] = 0.0f;
    }
    float expected_dLdX[1536] = {
        0.0630055, 0.359686, 0.167985, 0.253749, -0.334338, 0.0506311, 0.0634343, -0.0967107, -0.159064, -0.124919, -0.428964, 0.426621, 0.513312, -0.505313, 0.503516, 0.32473, -0.445297, -0.217289, -0.394454, 0.27989, -0.309442, -0.541303, -0.0653489, -0.12439, -0.348574, 0.100434, 0.171368, 0.52134, 0.564342, -0.0495487, -0.192, 0.312514,
        0.363298, 0.447505, 0.550512, -0.221882, -0.509213, -0.114835, -0.227602, 0.342184, -0.0271033, 0.200457, 0.17804, -0.404227, 0.0733831, 0.288822, 0.545837, -0.0748338, 0.567731, -0.479718, -0.259269, 0.499675, -0.100387, 0.11665, -0.199482, -0.583318, -0.41222, 0.209449, -0.58195, 0.0554593, 0.00677979, -0.00476987, 0.454652, -0.23065,
        -0.265955, -0.239671, -0.536155, 0.0487413, 0.403654, 0.457303, -0.0196868, -0.452135, 0.386716, 0.0957712, -0.440159, 0.523881, 0.10601, -0.46558, 0.260793, 0.555352, -0.583652, 0.292451, 0.128395, 0.0315492, 0.245471, 0.355331, -0.19337, -0.54428, 0.225029, 0.505911, -0.43677, 0.0171295, -0.326205, -0.45918, -0.173512, -0.11948,
        0.564054, -0.401498, 0.0424412, -0.052625, 0.258364, -0.397053, -0.25359, 0.334507, 0.226511, 0.489933, -0.315608, 0.511766, 0.376945, -0.293393, 0.247675, -0.443548, 0.20882, -0.000193802, 0.260866, -0.01842, 0.256742, -0.132246, -0.481735, 0.463394, 0.125146, -0.53375, 0.466813, -0.280081, 0.371844, -0.593192, -0.100526, 0.00183811,
        0.196228, 0.147634, 0.0133462, 0.102784, 0.589722, 0.124943, 0.527152, -0.097865, -0.313374, 0.049808, -0.0339619, 0.280204, 0.129232, 0.259946, 0.36271, 0.286565, -0.0551436, 0.388476, -0.00665637, 0.387434, 0.469409, 0.439353, -0.628106, -0.282165, 0.476911, -0.238954, 0.412944, 0.626512, -0.108863, 0.285365, 0.460083, 0.135442,
        0.318542, 0.570264, 0.147739, -0.177741, -0.173885, -0.334491, 0.101852, 0.4369, 0.631076, -0.129717, 0.299156, -0.482439, 0.453033, 0.636893, -0.578134, 0.52222, -0.553561, -0.56345, 0.243289, -0.0182883, -0.366632, -0.0817848, -0.642271, 0.356394, -0.31624, 0.623115, 0.52125, 0.533742, -0.328667, 0.0255526, 0.34899, 0.438933,
        -0.141005, -0.329587, -0.135989, 0.034054, 0.100951, -0.240499, 0.195019, 0.343694, 0.49073, -0.207182, 0.143947, 0.424148, -0.358059, -0.108181, -0.0718973, -0.0595346, 0.282256, -0.430379, -0.0358288, -0.0725844, 0.210923, 0.138462, -0.269377, 0.118852, 0.0444075, 0.0318628, -0.574509, -0.237516, -0.0697066, -0.268496, 0.323356, -0.389192,
        0.1588, 0.460285, -0.564771, 0.325147, -0.231801, -0.323655, -0.330738, 0.45699, -0.435906, -0.418181, 0.0121313, 0.156392, -0.457912, 0.215715, 0.560096, -0.313201, -0.513653, 0.163592, -0.550159, -0.467391, -0.0225083, 0.0833144, 0.0946375, -0.0616724, 0.050839, 0.405736, -0.284054, -0.202378, 0.102255, -0.297779, 0.448873, -0.0920182,
        0.587708, -0.577281, -0.29052, 0.244469, -0.508529, -0.0476044, 0.531521, 0.118855, 0.251185, 0.0333098, 0.304749, -0.357366, 0.586105, -0.560125, 0.542106, -0.137481, 0.451613, -0.435987, 0.438865, 0.231472, 0.40083, 0.369937, -0.196504, 0.0312808, -0.527118, 0.00551289, 0.269514, 0.302599, 0.218847, 0.604543, -0.463655, -0.21077,
        0.509634, 0.114312, 0.308077, -0.142867, -0.0530756, 0.529669, -0.235371, -0.0529566, 0.260167, -0.289767, -0.0288158, 0.305241, -0.593211, -0.0803336, 0.201642, 0.326005, -0.184838, 0.171453, -0.406399, 0.0825685, 0.468204, 0.590107, 0.0118964, -0.0877427, -0.164724, 0.376192, 0.343823, 0.425001, -0.549752, 0.558406, -0.224051, -0.146985,
        -0.57339, -0.351619, 0.086869, -0.975637, 0.939175, 0.0724762, -0.345472, 0.548379, 0.170604, 0.239591, 0.83848, -0.978105, -1.19355, 0.778651, -0.43857, -0.270452, 0.371917, 0.0425331, 0.332152, -0.79028, 0.0569696, 0.657202, -0.149307, 0.802281, 0.711413, -0.0298621, -0.452249, -1.25743, -0.570202, -0.434039, -0.0959895, -0.277685,
        -0.639045, -0.253367, -0.386804, 0.950942, 0.722594, -0.118748, -0.286937, -0.305253, 0.364528, -0.150687, 0.245784, 0.224176, -0.401186, -0.241356, -0.313187, -0.483567, -1.2492, 0.223424, 0.0818087, -1.27826, 0.46727, -0.835217, 0.777117, 0.899765, 1.27293, -0.724267, 0.533611, -0.246244, -0.490065, -0.0336013, -1.13177, 0.780588,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0.317937, 0.286516, 0.640949, -0.058268, -0.48255, -0.546685, 0.0235347, 0.540507, -0.462302, -0.11449, 0.52619, -0.626277, -0.126731, 0.556581, -0.311766, -0.663898, 0.69773, -0.349613, -0.153491, -0.0377157, -0.293449, -0.424783, 0.231166, 0.650663, -0.269012, -0.604794, 0.522139, -0.0204776, 0.389964, 0.548929, 0.207425, 0.142833,
        -0.674302, 0.479973, -0.0507365, 0.0629108, -0.308862, 0.474659, 0.303156, -0.399888, -0.270783, -0.585693, 0.377295, -0.611793, -0.450621, 0.350738, -0.296085, 0.530241, -0.249635, 0.000231681, -0.311853, 0.0220203, -0.306924, 0.158094, 0.575892, -0.553967, -0.149607, 0.638074, -0.558054, 0.334824, -0.444523, 0.709135, 0.120175, -0.00219738,
        0.228158, 0.533299, 0.220042, -0.0551022, -0.163347, 0.389148, -0.315557, -0.556125, -0.794042, 0.335237, -0.232919, -0.686307, 0.579369, 0.175045, 0.116336, 0.0963319, -0.456714, 0.696389, 0.057974, 0.117448, -0.341291, -0.224043, 0.435874, -0.192312, -0.071855, -0.0515566, 0.929602, 0.38432, 0.112791, 0.434449, -0.523216, 0.629745,
        -0.256952, -0.744779, 0.913846, -0.526115, 0.375074, 0.523701, 0.535161, -0.739447, 0.705332, 0.676652, -0.0196294, -0.253055, 0.740939, -0.349045, -0.906282, 0.506786, 0.831132, -0.264706, 0.890203, 0.756277, 0.0364202, -0.13481, -0.153131, 0.099791, -0.0822618, -0.656515, 0.459622, 0.327464, -0.165457, 0.481831, -0.726314, 0.148893,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.702579, 0.690114, 0.347304, -0.292251, 0.607923, 0.056909, -0.63541, -0.142085, -0.300281, -0.0398204, -0.364314, 0.427215, -0.700663, 0.669604, -0.648064, 0.164352, -0.539883, 0.521203, -0.524644, -0.276715, -0.479175, -0.442243, 0.234912, -0.0373948, 0.630146, -0.00659041, -0.322192, -0.361744, -0.261621, -0.722704, 0.554279, 0.251966,
        -0.609245, -0.136655, -0.368293, 0.170792, 0.0634495, -0.633195, 0.281376, 0.0633072, -0.311018, 0.346404, 0.034448, -0.364902, 0.709157, 0.0960353, -0.241054, -0.389724, 0.220965, -0.204964, 0.485832, -0.098707, -0.559717, -0.705447, -0.0142216, 0.104892, 0.19692, -0.449721, -0.411025, -0.508069, 0.657204, -0.66755, 0.267843, 0.175714,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0.0409004, 0.0398239, 0.121272, -0.0215862, -0.152212, -0.117282, -0.0490324, 0.11335, -0.0566239, -0.0269628, 0.104121, -0.148277, -0.0373706, 0.0800874, -0.096483, -0.156121, 0.139091, -0.106341, -0.0286902, -0.0465618, -0.103814, -0.125889, 0.108015, 0.153142, -0.0999009, -0.0914436, 0.0579602, -0.0675435, 0.0856643, 0.076042, -0.00703878, 0.0135723,
        -0.161359, 0.0339162, -0.0247107, 0.0300868, -0.0414332, 0.124782, 0.0476568, -0.120877, -0.115896, -0.0988827, 0.041804, -0.0680553, -0.132222, 0.00242405, 0.00206498, 0.0484127, 0.0084563, 0.0572657, -0.0843718, 0.00607025, -0.021488, 0.0385525, 0.175407, -0.14218, 0.00349273, 0.0587972, -0.159704, 0.00985488, -0.0516692, 0.133078, -0.0124497, -0.0449965,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.0865417, 0.108638, 0.0300208, 0.0014697, 0.0758711, -0.00479235, -0.0969074, -0.0669829, -0.0486379, -0.011423, -0.0843641, 0.110963, -0.0971913, 0.13207, -0.16219, 0.00554877, -0.0678884, 0.131104, -0.0692892, -0.0186774, -0.0466132, -0.0624038, 0.0708453, -0.06819, 0.105593, -0.0147321, -0.0438742, -0.0271804, -0.0848825, -0.0860483, 0.147345, 0.0250531,
        -0.111363, -0.0739506, -0.121643, -0.0274363, 0.0224323, -0.0902147, 0.120374, -0.0131173, -0.0920708, 0.0486377, -0.0476264, -0.0261556, 0.164361, -0.004576, -0.104008, -0.013157, 0.075846, 0.0169256, 0.127247, 0.0288201, -0.138044, -0.0693155, -0.0488614, 0.0245461, -0.0238598, -0.0469061, -0.0372004, -0.0813109, 0.174392, -0.123521, 0.0914714, -0.00775329,
        -0.0290192, -0.165665, -0.0773711, -0.116872, 0.15399, -0.0233198, -0.0292167, 0.0445432, 0.0732622, 0.0575354, 0.197573, -0.196494, -0.236422, 0.232738, -0.23191, -0.149565, 0.205096, 0.10008, 0.181679, -0.128912, 0.142524, 0.249314, 0.0300985, 0.0572919, 0.160547, -0.0462582, -0.0789292, -0.24012, -0.259926, 0.0228213, 0.0884319, -0.143938,
        -0.167329, -0.206113, -0.253556, 0.102195, 0.234534, 0.0528909, 0.10483, -0.157604, 0.0124833, -0.0923271, -0.0820021, 0.18618, -0.033799, -0.133026, -0.251403, 0.0344671, -0.261487, 0.22095, 0.119415, -0.230141, 0.0462366, -0.0537267, 0.091878, 0.268666, 0.189861, -0.0964684, 0.268036, -0.0255436, -0.00312265, 0.00219692, -0.209405, 0.106233,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0.0649443, 0.151802, 0.0626343, -0.0156847, -0.0464962, 0.11077, -0.0898222, -0.158299, -0.226022, 0.0954243, -0.0662996, -0.195355, 0.164916, 0.0498261, 0.0331146, 0.0274206, -0.130002, 0.198225, 0.0165021, 0.0334311, -0.0971474, -0.0637731, 0.12407, -0.0547411, -0.0204533, -0.0146754, 0.264609, 0.109396, 0.0321056, 0.123664, -0.148932, 0.179255,
        -0.0731405, -0.211999, 0.260124, -0.149757, 0.106764, 0.14907, 0.152332, -0.210481, 0.200771, 0.192607, -0.00558745, -0.0720314, 0.210906, -0.0993547, -0.25797, 0.144255, 0.236579, -0.0753478, 0.253394, 0.215272, 0.0103669, -0.0383731, -0.0435884, 0.0284052, -0.0234156, -0.186875, 0.13083, 0.0932116, -0.0470968, 0.137152, -0.206743, 0.0423819,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };
    float dLdW_val[8] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
    float expected_dLdW_val[8] = {
        -0.524968, 0.910603, 2.09362, 3.40874, 1.01785, 8.71228, 2.1398, 4.05319
    };

    sparse::quantized_grouped_sparse_conv2d_vectorized_backward_stride_1(
        B, IC, OC, M, N, K, 8, 0, X, X_scale, 64, W_idx_OC, W_idx_IC, W_idx_X,
        W_idx_Y, W_val, W_scale, 64, dLdO, dLdO_scale, 64, dLdX, dLdW_val
    );

    for (int i = 0; i < 1536; i++) {
        ASSERT_THAT(dLdX[i], testing::FloatNear(expected_dLdX[i], 0.025f));
    }

    for (int i = 0; i < 8; i++) {
        ASSERT_THAT(dLdW_val[i], testing::FloatNear(expected_dLdW_val[i], std::abs(expected_dLdW_val[i]) * 0.35));
    }
}

TEST(Test_Sparse, QuantizeGroupedSparseConv2dBackwardParallel2Stride1) {
    int B = 64;
    int IC = 2;
    int OC = 3;
    int M = 4;
    int N = 3;
    int K = 3;
    int8_t X[1536] = {
        97,    1,   19,   94,   59,  117,  -20,   -5,  -73,  -32,   71,  -48,
        -98, -105,  -86,   16,  -96,  -35,   51,  -94,   78,  -29,   95,   26,
        49,   20,    2,  -59,   10,  -11,  107,  -10,  -75,  -33,    6,   48,
        -32,   75,  -92,  -89, -100,  -20,  -37,   -3,   -6,  -65,   -8,  -77,
        25,   68,  108,  117,   14,   45,  -70,  -76,   12,   14,   92,   84,
        88, -103,    0,   81,

        -88,   26, -128,  -80,   54, -128,  -13,  120,   13, -112,  127,   99,
        17,  127,   86,  -33,  -82,   50,   80,   48,   61,   41,  -96,  127,
        -49,  -12,  -50,   63,  110,  125,  127,  -89,  -13,  127, -113,  127,
        5,  -65,  102, -124,  127,  114,  -73,  127, -128,  -35,   80,   92,
        -41,  -39,  -97,  127,  -78,  108,  105,  -31,  -39,  127,  104,  -41,
        -31,  -50,  127, -128,

        -113,  -80,  -42,  -43,  -69,   95,  127,  108,   29,  127,  -21,   44,
        104,  -96,  127,  -38,  -44,  101,   49,  -14,   95,  -57,   58,  -39,
        -100,   19,   19,   80, -128, -103,  120, -116,  -30,  -32,  -78, -110,
        -118,  -28,   11,  -44,   21,   32,  -99,  115,  127,  127, -100, -115,
        -15, -105,   47,   72,  -38,    8,  127, -116, -120,  -10,  -58,  -30,
        91,   -3,  122,  -24,

        101, -112,   30,  -19,  -37,  115,   24,   90,  -11,   40,   95,  -85,
        -110,   -6,  -48,  124,   88,   47,   14,   -8,   23,  -50,    0,   23,
        -44,  -98,  -69,  -70,  123,  -98,   -3,  -42, -125,  -55,    3,   10,
        119,  -73,   64,   63,   82,  -42,   89,   46,   19,  110,    2,  -31,
        -59,  -25,  -79,   -8,   97,   97,   32,  -41,  -63,   46,   39,  -60,
        63,   11,  121,  -56,

        32,  -43,  127,  -32,  100, -112,   45,  120,  -79, -109, -128,   -1,
        -125,    8,   77,  -27, -126,   10,  -61,   25,  -96,   10,   35,   89,
        29,   37,   32,   32,  -84, -128,  111,  112, -127,  -99,   29,  -97,
        72, -107,  127,  -68,  127,  127,  -20,   67,   78,  -75,   56,   92,
        61,   96,  -40,   -9,  -64,   81,   54,   90, -128, -128,   15,  -22,
        -73,  -37,   38,  -32,

        14, -107,    6, -118,  -88,    4,   -8,  -80,   33,   68,  -96,  -97,
        -102,  -74,   25,  -76,  -10,   34,  -35,   92,   98,   19,  -76,  -28,
        -15,  -16,  -46, -106,  120, -123,   84, -128,  -94,  -30,  110,   -2,
        49,   -5,   46, -116,   67,  -63,  117, -126,  124,  -18,  -79, -120,
        -109,   50,    8,   70,   22, -116,  -37, -111,   13,   63,   73, -123,
        -87,  -80, -106,  -72,

        82,  -20,  -11,  -77,    5,  107,   49,   -8,  -17,   88,   44,  -15,
        -17,   15,  -12,  107,   28,  -33,   25,   95,  -24,  -89,  -16, -116,
        -59,   30,  -45,   96,  -88,   23,  101,  114,   55,  115,  -58,   42,
        102,  107,   42,  -51,  -62,  -42,   68,  126,  -17,   87,   -2, -102,
        72,  -87,   65,    2,   23,  -92,  -46,   -8, -117,    8,   61,  -28,
        64,  -72,  121, -111,

        127,  127,  121,  -93,  127, -128,  127,   92,  -97, -128,  -81,  124,
        -127, -128, -128,   80, -128, -128,  -48, -104, -128, -128, -128, -111,
        19, -128, -128, -128,  -99,  124, -128,  -72,  -13,  -74, -128,  -70,
        127, -128,  127, -128, -128,  -88,   69,   96, -128,   -2,  127, -128,
        127, -128,   78, -128,  -57,  109,  127,   39,  127,   33,  -37,  122,
        127,   68,  -17, -128,

        -74,   25,  127,  123,  -83,  -11,  127,   16,   85,    4,  -69,  -68,
        -82, -127,   41,   85,  -41,   42,  126, -115,   48,  -39, -113,  100,
        8,   56,  -81,   47,   48,    7,  -64,   48, -117,   54,   18,  117,
        25,  -15,   22,   35,   34,  102,  122,  -26,  127,  104,  -46, -128,
        33,  112, -126,  -51,  110,  -95,  -99,   33,  -13,  -53,  -17,  -73,
        100, -116,  -11,  -81,

        114,  114, -106,  -86,  -93,   93,  -47,   56,  -29,  105,   96,   71,
        58,   -5,  126, -122,   98,  -65,  104,  114,  -50, -116,  -46,  -20,
        -11,  -70,   26,   -9,   74,   12, -113, -106,   49,  -13,  -16,  111,
        11,   54,  -54,   67,  119,  102,  -88,   17,  -69,    1,  -69,  -46,
        121,   21, -123,  -36,   48,  -43,  127,   86,  -17,  -10,   25,   79,
        35,   23,   23,  -23,

        -50, -118, -128,  125,   15, -128,  -37,   93,   69,  127,  -95,  -64,
        110,  118, -116, -128,  -65,   69,  127, -128, -128, -128,  -45,  127,
        -83,   49,  -93,   17,  -10,  -65, -128,  108, -128,   16,  -73,  -41,
        -30,   32,  127,   93,   32,  127,  119, -114,  110,   63,  -62,  127,
        127,  -41,  -78,  -23,   88,   77, -128,  127, -111, -128, -105,  127,
        -19,  -97,  127, -115,

        116,  -73,  -80,  -53, -128,   70, -103,  -25,    2,  127, -111, -128,
        -128,  -12,  -81,   88,  -88,   32,   50,  126,  107, -116,   59,  -81,
        11,   20, -128,  -43,  127, -108, -128,   77,   63,  127,  -29,   53,
        50,   94, -107,   34,  127,  -52,   50,  -33,   52,   98, -128,  -90,
        -81,   32, -128,  -20,  -66,  -24,  -58,  -67, -128,   73,  -87,   56,
        -28,  127,  -70, -121,

        9,   16,  -24,  -43,  -33,  -67,   10,  -12,   44,   98,    7,   -5,
        86, -108,   49,   -3,  -99,  -36,  -91,  -19, -108,   47,   32,   44,
        -7,   24,  -46,  -43,   58,   -2,   16,  -19,   66,   63,  -47,   79,
        47,   15,  105,   60,   71, -107,   79,   85,   88,  -17,   98,  -58,
        14,  110,    0,   77,   82,   -5,  -48,   96,  -24,  -24,   12,  -73,
        -2,  102,  109,  -89,

        -128, -117, -128, -128,  -82, -128, -109,  104, -124,   82,  127,  -55,
        115,  127,  117,   31,  127, -128, -103, -111,  -11, -128,  -18, -128,
        -61,  127,  127,   88,  127,   48,  -70,  -97,  -98,   36,  126, -106,
        42,  -33, -123, -128, -128,  106,   68, -128,  -73,  -18,  -61, -128,
        -43,   36,  -63,   77,  -75,   56,   26,  112,   86,    9,  -52,  -63,
        95, -123,  127,   58,

        90,  -89,  -53,  -62,    2,   93,  -49, -116,  -31,  -77,  -67, -100,
        80,   99,  -95,   73,   56,  -48,   99,  122,  127,   79,   56,  -18,
        9,   13,   41,  123,  -12,   -1, -128,  -11, -128,   50,  -79, -101,
        17,  -31,   52,    5,   27,  127,   61,  -10,  -99,   32,   21,  -67,
        49,   76,  -28,  116,  115,  -55, -128,   17,   91, -120, -102,   17,
        -98,  117,  -76,   27,

        -128,    8,  -78,   10, -107,   66,  127,   67,   29,   50, -128,  -85,
        96, -123,  122,  118,  123, -100,  -43,  122,  108,   23,  -88,   84,
        -128,  -33,  -24,  -91,  127,  -17,   29,  -56,  126,  103, -114,   71,
        25,  -16,  127,  -31,   60, -118,   25,   28,   91, -108,   73,  -19,
        -33,   63,  -15,  -62,   30, -128, -108, -119,  -96,  -39,   23,  -99,
        127,   57,  -95,  -34,

        -128,  -71, -128,  127,   13,   -1,  -49,   71,   -2, -123,   67,   24,
        -43,   69,  108,   77,   47,   -4,  -15,  -92,  -39,  119,  100,  -66,
        -11,  -99,    1,  111,  100,  -67,   57, -128,  -33,  -16,   47,  -36,
        -88,  -52,  -78, -102,   93, -128,  -22,  104,  127, -117,    2,   80,
        -31,  -85,  -45,  127, -128, -113,  -81,   -2, -128,   81,  -50,   84,
        -55,   61,  -77,  -58,

        28,   -6,  -58,   79,   62,   11, -128,   87,   81, -121,  -85,  105,
        86,  -16,  -40,  108,  127,  -80,  -81,  -35,  100,  -81,  122,  127,
        107, -120,   95,   62,  -19,  -10,  100, -117,  100,  -10,    2,  -56,
        78,   57,   43, -105,   82,  -31,  -85,  102,  -83,  123,  116,   13,
        -7,  -23, -105,  122,    9,   -1,    1,  126,  127,  126,  127,   44,
        -105,  -81,   52,  -86,

        -61,   18,  127, -128,   20, -128,  -56,    4, -128,   18,  -69,   29,
        -95,  123, -128,   50,   56,   97, -128,  -77, -110,  -96,    6,  117,
        64, -103, -111,  -15,  -11,  -37,   73, -117,  103, -128,  127,   83,
        -122,  127,   80,  127, -128,  -36, -122,   61,   97,  127, -107,   71,
        -117,  -39, -128,    5,  114,  -92,  127,  127, -128,  -95,  127, -128,
        -68,  -92,   85,   57,

        32,  -57,  104, -119,  127, -128,    1,  -97,  -45, -102,   -6,   20,
        -100,  -27, -112, -112, -123,  -36,   51,   58,  -19,  109,   29,  113,
        56, -128,  -14,   68,   45,   92,  127,  127,   99,  -69,   19,  -76,
        -13,  107,  -83,  -14,   -4, -114,   36,  112,  -99,  117,    8,  -45,
        5,   40,  -75,   51,   86,   48,  105,   59,  113,  117,  -58, -124,
        -40,  -90,  -96,   38,

        -72,   26,   23,   87,  127,  127,   69,  127,   -8,  125,   47,    0,
        -82,   89, -113,  127,  -45,   17,    3,  114,  110,  114,  -26,  -62,
        -83,  120,  -77, -128,  -45,  -53,  -89,  -26,  -15,  -51, -128,   95,
        127,  127,   32,  -58,  -17,   21,   89,  104,  114, -128, -120,  127,
        -41,  127,   58,    4,  -85, -113, -114,  -90,   63,  -80, -128,   55,
        -77,   86,  -22,   74,

        127,  -41,  -83, -128,  127,   79,   58,  -92,   93, -128, -128,  105,
        -122, -124,  120,   -5,  -62,   65,  -56,  127,  -94,  127,  -92,   49,
        73,   28,   26,  -26,   65,  -89,   48,  127, -128,   35,   15,  -47,
        -74,  -77,   21, -128, -128,  106,   73,  -89,   67,  116, -124,   41,
        63, -128,   61,  104,  -15,   27,   76,   58, -128,  -98, -128,   45,
        127,  127, -128,  -37,

        -26, -118,  127,   15,  -16, -105,  -21,  -40,  -32,   68,  -71, -125,
        -80,   -4,  -76,   54,   91,   20,   31,   50,  124,  114,   54,  -46,
        -85,  -75,   21,  114,   10, -107, -128,   -5,  -84,   39, -128,  -88,
        45,  127,   22,  -16,  127,  -17,   35,  113, -120,   72,   54,  127,
        -63, -128, -128,  -77,  127,  127,  121,  -71,  -82,  -71,   42,   89,
        -88,  119,   56,  -93,

        62, -101,  -51,    2,   81, -113,  -62,   24,   33,  -34,  -46,  -71,
        -128,  -42,  -15,  127,   44,  -97,  -63,  127,   37,   75,  -89, -128,
        127,   99,  127,   43, -128,   81,  127, -128,  127,  -66, -128,  -91,
        -98, -124,  127,   76,   -4,  -56,  127, -112,   -9,  127, -112,  127,
        -114,  -50,   40,  103,  127,  127,  -32,   76,   27,   46,  -36,  -75,
        77,  127,   19,  127
    };
    float X_scale[24] = {
        0.0085, 0.0061, 0.0073, 0.0079, 0.0067, 0.0074, 0.0079, 0.0046, 0.0074, 0.0077,
        0.0056, 0.0058, 0.0086, 0.0051, 0.0073, 0.0068, 0.0071, 0.0068, 0.0059, 0.0066,
        0.0067, 0.0060, 0.0065, 0.0065
    };
    int W_idx_OC[4] = {0, 3, 5, 8};
    int16_t W_idx_IC[9] = {0, 2, 3, 0, 1, 2, 0, 2, 3};
    uint8_t W_idx_X[8] = {0, 1, 2, 0, 1, 0, 2, 1};
    uint8_t W_idx_Y[8] = {0, 2, 1, 2, 0, 1, 1, 0};
    int8_t W_val[8] = {-36, 58, 16, 40, -4, -37, 45, 9};
    float W_scale[1] = {0.0164f};
    int8_t dLdO[384] = {
        -6, -36, -16, -25,  34,  -5,  -6,  10,  15,  12,  43, -43, -51,  50,
        -49, -32,  44,  22,  39, -27,  31,  53,   6,  12,  34, -10, -17, -52,
        -56,   5,  19, -31, -36, -44, -55,  22,  50,  11,  23, -34,   3, -20,
        -18,  40,  -7, -29, -54,   8, -57,  47,  26, -50,  10, -12,  19,  58,
        41, -21,  58,  -5,  -1,   1, -45,  23,

        16,  37,  15,  -4, -11,  27, -22, -39, -55,  23, -16, -48,  40,  12,
        8,   7, -31,  48,   4,   8, -24, -15,  30, -14,  -5,  -3,  64,  26,
        8,  31, -36,  44, -18, -52,  64, -36,  26,  36,  37, -51,  49,  47,
        -2, -18,  52, -24, -63,  35,  58, -19,  62,  53,   2, -10, -11,   7,
        -6, -46,  32,  23, -11,  33, -51,  10,

        18,  13,   1,   9,  55,  12,  49, -10, -29,   5,  -4,  26,  12,  24,
        34,  27,  -5,  36,  -1,  36,  44,  41, -58, -27,  44, -23,  39,  58,
        -10,  26,  43,  13,  30,  53,  14, -16, -17, -31,   9,  40,  58, -12,
        28, -45,  42,  59, -54,  49, -51, -52,  23,  -2, -34,  -7, -60,  33,
        -30,  58,  49,  50, -31,   2,  32,  41,

        -43,  20,  32, -50,  36,  14, -22,  35,  -8,   4,  13, -26, -32,  -4,
        34,  23, -31, -27, -27, -30, -39, -20, -22,  54,  13,  12, -15, -37,
        30, -46, -37,  20,  -5,  42,  45,  53,  -9, -27, -59,  22,  29,  16,
        47, -39, -25,  20,  51, -54, -29, -49, -31, -41,  28, -58,  41,  -4,
        54, -34, -36, -14, -42,  -4, -36,  36,

        26,  23,  51,  -5, -38, -44,   2,  43, -37,  -9,  42, -50, -10,  44,
        -25, -53,  56, -28, -12,  -3, -23, -33,  18,  52, -22, -48,  42,  -2,
        31,  44,  17,  12, -54,  38,  -4,   5, -24,  38,  24, -32, -22, -47,
        30, -49, -36,  28, -24,  42, -19,   0, -25,   2, -24,  12,  46, -44,
        -12,  51, -45,  26, -36,  56,  10,   0,

        -56,  55,  27, -23,  49,   5, -51, -11, -24,  -3, -29,  34, -56,  54,
        -52,  13, -43,  41, -42, -22, -39, -35,  19,  -3,  51,  -1, -26, -29,
        -20, -58,  44,  20, -49, -10, -30,  14,   5, -50,  22,   5, -25,  28,
        3, -30,  57,   7, -19, -31,  18, -16,  39,  -8, -45, -57,  -1,   9,
        16, -36, -33, -40,  53, -53,  22,  14
    };
    float dLdO_scale[6] = {0.0172f, 0.0152f, 0.0164f, 0.0171f, 0.0173f, 0.0173f};
    float dLdX[1536];
    for (int i = 0; i < 1536; i++) {
        dLdX[i] = 0.0f;
    }
    float expected_dLdX[1536] = {
        0.0630055, 0.359686, 0.167985, 0.253749, -0.334338, 0.0506311, 0.0634343, -0.0967107, -0.159064, -0.124919, -0.428964, 0.426621, 0.513312, -0.505313, 0.503516, 0.32473, -0.445297, -0.217289, -0.394454, 0.27989, -0.309442, -0.541303, -0.0653489, -0.12439, -0.348574, 0.100434, 0.171368, 0.52134, 0.564342, -0.0495487, -0.192, 0.312514,
        0.363298, 0.447505, 0.550512, -0.221882, -0.509213, -0.114835, -0.227602, 0.342184, -0.0271033, 0.200457, 0.17804, -0.404227, 0.0733831, 0.288822, 0.545837, -0.0748338, 0.567731, -0.479718, -0.259269, 0.499675, -0.100387, 0.11665, -0.199482, -0.583318, -0.41222, 0.209449, -0.58195, 0.0554593, 0.00677979, -0.00476987, 0.454652, -0.23065,
        -0.265955, -0.239671, -0.536155, 0.0487413, 0.403654, 0.457303, -0.0196868, -0.452135, 0.386716, 0.0957712, -0.440159, 0.523881, 0.10601, -0.46558, 0.260793, 0.555352, -0.583652, 0.292451, 0.128395, 0.0315492, 0.245471, 0.355331, -0.19337, -0.54428, 0.225029, 0.505911, -0.43677, 0.0171295, -0.326205, -0.45918, -0.173512, -0.11948,
        0.564054, -0.401498, 0.0424412, -0.052625, 0.258364, -0.397053, -0.25359, 0.334507, 0.226511, 0.489933, -0.315608, 0.511766, 0.376945, -0.293393, 0.247675, -0.443548, 0.20882, -0.000193802, 0.260866, -0.01842, 0.256742, -0.132246, -0.481735, 0.463394, 0.125146, -0.53375, 0.466813, -0.280081, 0.371844, -0.593192, -0.100526, 0.00183811,
        0.196228, 0.147634, 0.0133462, 0.102784, 0.589722, 0.124943, 0.527152, -0.097865, -0.313374, 0.049808, -0.0339619, 0.280204, 0.129232, 0.259946, 0.36271, 0.286565, -0.0551436, 0.388476, -0.00665637, 0.387434, 0.469409, 0.439353, -0.628106, -0.282165, 0.476911, -0.238954, 0.412944, 0.626512, -0.108863, 0.285365, 0.460083, 0.135442,
        0.318542, 0.570264, 0.147739, -0.177741, -0.173885, -0.334491, 0.101852, 0.4369, 0.631076, -0.129717, 0.299156, -0.482439, 0.453033, 0.636893, -0.578134, 0.52222, -0.553561, -0.56345, 0.243289, -0.0182883, -0.366632, -0.0817848, -0.642271, 0.356394, -0.31624, 0.623115, 0.52125, 0.533742, -0.328667, 0.0255526, 0.34899, 0.438933,
        -0.141005, -0.329587, -0.135989, 0.034054, 0.100951, -0.240499, 0.195019, 0.343694, 0.49073, -0.207182, 0.143947, 0.424148, -0.358059, -0.108181, -0.0718973, -0.0595346, 0.282256, -0.430379, -0.0358288, -0.0725844, 0.210923, 0.138462, -0.269377, 0.118852, 0.0444075, 0.0318628, -0.574509, -0.237516, -0.0697066, -0.268496, 0.323356, -0.389192,
        0.1588, 0.460285, -0.564771, 0.325147, -0.231801, -0.323655, -0.330738, 0.45699, -0.435906, -0.418181, 0.0121313, 0.156392, -0.457912, 0.215715, 0.560096, -0.313201, -0.513653, 0.163592, -0.550159, -0.467391, -0.0225083, 0.0833144, 0.0946375, -0.0616724, 0.050839, 0.405736, -0.284054, -0.202378, 0.102255, -0.297779, 0.448873, -0.0920182,
        0.587708, -0.577281, -0.29052, 0.244469, -0.508529, -0.0476044, 0.531521, 0.118855, 0.251185, 0.0333098, 0.304749, -0.357366, 0.586105, -0.560125, 0.542106, -0.137481, 0.451613, -0.435987, 0.438865, 0.231472, 0.40083, 0.369937, -0.196504, 0.0312808, -0.527118, 0.00551289, 0.269514, 0.302599, 0.218847, 0.604543, -0.463655, -0.21077,
        0.509634, 0.114312, 0.308077, -0.142867, -0.0530756, 0.529669, -0.235371, -0.0529566, 0.260167, -0.289767, -0.0288158, 0.305241, -0.593211, -0.0803336, 0.201642, 0.326005, -0.184838, 0.171453, -0.406399, 0.0825685, 0.468204, 0.590107, 0.0118964, -0.0877427, -0.164724, 0.376192, 0.343823, 0.425001, -0.549752, 0.558406, -0.224051, -0.146985,
        -0.57339, -0.351619, 0.086869, -0.975637, 0.939175, 0.0724762, -0.345472, 0.548379, 0.170604, 0.239591, 0.83848, -0.978105, -1.19355, 0.778651, -0.43857, -0.270452, 0.371917, 0.0425331, 0.332152, -0.79028, 0.0569696, 0.657202, -0.149307, 0.802281, 0.711413, -0.0298621, -0.452249, -1.25743, -0.570202, -0.434039, -0.0959895, -0.277685,
        -0.639045, -0.253367, -0.386804, 0.950942, 0.722594, -0.118748, -0.286937, -0.305253, 0.364528, -0.150687, 0.245784, 0.224176, -0.401186, -0.241356, -0.313187, -0.483567, -1.2492, 0.223424, 0.0818087, -1.27826, 0.46727, -0.835217, 0.777117, 0.899765, 1.27293, -0.724267, 0.533611, -0.246244, -0.490065, -0.0336013, -1.13177, 0.780588,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0.317937, 0.286516, 0.640949, -0.058268, -0.48255, -0.546685, 0.0235347, 0.540507, -0.462302, -0.11449, 0.52619, -0.626277, -0.126731, 0.556581, -0.311766, -0.663898, 0.69773, -0.349613, -0.153491, -0.0377157, -0.293449, -0.424783, 0.231166, 0.650663, -0.269012, -0.604794, 0.522139, -0.0204776, 0.389964, 0.548929, 0.207425, 0.142833,
        -0.674302, 0.479973, -0.0507365, 0.0629108, -0.308862, 0.474659, 0.303156, -0.399888, -0.270783, -0.585693, 0.377295, -0.611793, -0.450621, 0.350738, -0.296085, 0.530241, -0.249635, 0.000231681, -0.311853, 0.0220203, -0.306924, 0.158094, 0.575892, -0.553967, -0.149607, 0.638074, -0.558054, 0.334824, -0.444523, 0.709135, 0.120175, -0.00219738,
        0.228158, 0.533299, 0.220042, -0.0551022, -0.163347, 0.389148, -0.315557, -0.556125, -0.794042, 0.335237, -0.232919, -0.686307, 0.579369, 0.175045, 0.116336, 0.0963319, -0.456714, 0.696389, 0.057974, 0.117448, -0.341291, -0.224043, 0.435874, -0.192312, -0.071855, -0.0515566, 0.929602, 0.38432, 0.112791, 0.434449, -0.523216, 0.629745,
        -0.256952, -0.744779, 0.913846, -0.526115, 0.375074, 0.523701, 0.535161, -0.739447, 0.705332, 0.676652, -0.0196294, -0.253055, 0.740939, -0.349045, -0.906282, 0.506786, 0.831132, -0.264706, 0.890203, 0.756277, 0.0364202, -0.13481, -0.153131, 0.099791, -0.0822618, -0.656515, 0.459622, 0.327464, -0.165457, 0.481831, -0.726314, 0.148893,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.702579, 0.690114, 0.347304, -0.292251, 0.607923, 0.056909, -0.63541, -0.142085, -0.300281, -0.0398204, -0.364314, 0.427215, -0.700663, 0.669604, -0.648064, 0.164352, -0.539883, 0.521203, -0.524644, -0.276715, -0.479175, -0.442243, 0.234912, -0.0373948, 0.630146, -0.00659041, -0.322192, -0.361744, -0.261621, -0.722704, 0.554279, 0.251966,
        -0.609245, -0.136655, -0.368293, 0.170792, 0.0634495, -0.633195, 0.281376, 0.0633072, -0.311018, 0.346404, 0.034448, -0.364902, 0.709157, 0.0960353, -0.241054, -0.389724, 0.220965, -0.204964, 0.485832, -0.098707, -0.559717, -0.705447, -0.0142216, 0.104892, 0.19692, -0.449721, -0.411025, -0.508069, 0.657204, -0.66755, 0.267843, 0.175714,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0.0409004, 0.0398239, 0.121272, -0.0215862, -0.152212, -0.117282, -0.0490324, 0.11335, -0.0566239, -0.0269628, 0.104121, -0.148277, -0.0373706, 0.0800874, -0.096483, -0.156121, 0.139091, -0.106341, -0.0286902, -0.0465618, -0.103814, -0.125889, 0.108015, 0.153142, -0.0999009, -0.0914436, 0.0579602, -0.0675435, 0.0856643, 0.076042, -0.00703878, 0.0135723,
        -0.161359, 0.0339162, -0.0247107, 0.0300868, -0.0414332, 0.124782, 0.0476568, -0.120877, -0.115896, -0.0988827, 0.041804, -0.0680553, -0.132222, 0.00242405, 0.00206498, 0.0484127, 0.0084563, 0.0572657, -0.0843718, 0.00607025, -0.021488, 0.0385525, 0.175407, -0.14218, 0.00349273, 0.0587972, -0.159704, 0.00985488, -0.0516692, 0.133078, -0.0124497, -0.0449965,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        -0.0865417, 0.108638, 0.0300208, 0.0014697, 0.0758711, -0.00479235, -0.0969074, -0.0669829, -0.0486379, -0.011423, -0.0843641, 0.110963, -0.0971913, 0.13207, -0.16219, 0.00554877, -0.0678884, 0.131104, -0.0692892, -0.0186774, -0.0466132, -0.0624038, 0.0708453, -0.06819, 0.105593, -0.0147321, -0.0438742, -0.0271804, -0.0848825, -0.0860483, 0.147345, 0.0250531,
        -0.111363, -0.0739506, -0.121643, -0.0274363, 0.0224323, -0.0902147, 0.120374, -0.0131173, -0.0920708, 0.0486377, -0.0476264, -0.0261556, 0.164361, -0.004576, -0.104008, -0.013157, 0.075846, 0.0169256, 0.127247, 0.0288201, -0.138044, -0.0693155, -0.0488614, 0.0245461, -0.0238598, -0.0469061, -0.0372004, -0.0813109, 0.174392, -0.123521, 0.0914714, -0.00775329,
        -0.0290192, -0.165665, -0.0773711, -0.116872, 0.15399, -0.0233198, -0.0292167, 0.0445432, 0.0732622, 0.0575354, 0.197573, -0.196494, -0.236422, 0.232738, -0.23191, -0.149565, 0.205096, 0.10008, 0.181679, -0.128912, 0.142524, 0.249314, 0.0300985, 0.0572919, 0.160547, -0.0462582, -0.0789292, -0.24012, -0.259926, 0.0228213, 0.0884319, -0.143938,
        -0.167329, -0.206113, -0.253556, 0.102195, 0.234534, 0.0528909, 0.10483, -0.157604, 0.0124833, -0.0923271, -0.0820021, 0.18618, -0.033799, -0.133026, -0.251403, 0.0344671, -0.261487, 0.22095, 0.119415, -0.230141, 0.0462366, -0.0537267, 0.091878, 0.268666, 0.189861, -0.0964684, 0.268036, -0.0255436, -0.00312265, 0.00219692, -0.209405, 0.106233,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0.0649443, 0.151802, 0.0626343, -0.0156847, -0.0464962, 0.11077, -0.0898222, -0.158299, -0.226022, 0.0954243, -0.0662996, -0.195355, 0.164916, 0.0498261, 0.0331146, 0.0274206, -0.130002, 0.198225, 0.0165021, 0.0334311, -0.0971474, -0.0637731, 0.12407, -0.0547411, -0.0204533, -0.0146754, 0.264609, 0.109396, 0.0321056, 0.123664, -0.148932, 0.179255,
        -0.0731405, -0.211999, 0.260124, -0.149757, 0.106764, 0.14907, 0.152332, -0.210481, 0.200771, 0.192607, -0.00558745, -0.0720314, 0.210906, -0.0993547, -0.25797, 0.144255, 0.236579, -0.0753478, 0.253394, 0.215272, 0.0103669, -0.0383731, -0.0435884, 0.0284052, -0.0234156, -0.186875, 0.13083, 0.0932116, -0.0470968, 0.137152, -0.206743, 0.0423819,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };
    float dLdW_val[8] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
    float expected_dLdW_val[8] = {
        -0.524968, 0.910603, 2.09362, 3.40874, 1.01785, 8.71228, 2.1398, 4.05319
    };

    sparse::quantized_grouped_sparse_conv2d_vectorized_parallel_backward_stride_1(
        B, IC, OC, M, N, K, 8, 0, X, X_scale, 64, W_idx_OC, W_idx_IC, W_idx_X,
        W_idx_Y, W_val, W_scale, 64, dLdO, dLdO_scale, 64, dLdX, dLdW_val
    );

    for (int i = 0; i < 1536; i++) {
        ASSERT_THAT(dLdX[i], testing::FloatNear(expected_dLdX[i], 0.025f));
    }

    for (int i = 0; i < 8; i++) {
        ASSERT_THAT(dLdW_val[i], testing::FloatNear(expected_dLdW_val[i], std::abs(expected_dLdW_val[i]) * 0.35));
    }
}
